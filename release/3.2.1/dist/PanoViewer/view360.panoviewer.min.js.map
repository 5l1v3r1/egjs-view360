{"version":3,"file":"view360.panoviewer.min.js","sources":["../../src/utils/browser.js","../../src/utils/browserFeature.js","../../node_modules/webvr-polyfill/src/math-util.js","../../node_modules/webvr-polyfill/src/util.js","../../node_modules/webvr-polyfill/src/sensor-fusion/pose-predictor.js","../../src/utils/mathUtil/common.js","../../src/utils/mathUtil/vec3.js","../../src/utils/mathUtil/vec2.js","../../src/utils/mathUtil/quat.js","../../src/utils/mathUtil/mat4.js","../../src/utils/math-util.js","../../src/YawPitchControl/consts.js","../../src/YawPitchControl/input/DeviceMotion.js","../../node_modules/webvr-polyfill/src/sensor-fusion/sensor-sample.js","../../node_modules/webvr-polyfill/src/sensor-fusion/complementary-filter.js","../../src/YawPitchControl/input/ComplementaryFilter.js","../../src/YawPitchControl/input/FusionPoseSensor.js","../../src/YawPitchControl/input/TiltMotionInput.js","../../src/YawPitchControl/utils.js","../../src/YawPitchControl/ScreenRotationAngle.js","../../src/YawPitchControl/input/RotationPanInput.js","../../src/YawPitchControl/DeviceQuaternion.js","../../src/version.js","../../src/YawPitchControl/YawPitchControl.js","../../src/PanoImageRenderer/ImageLoader.js","../../src/PanoImageRenderer/VideoLoader.js","../../node_modules/@egjs/agent/dist/agent.esm.js","../../src/PanoImageRenderer/WebGLUtils.js","../../src/PanoImageRenderer/renderer/SphereRenderer.js","../../src/PanoImageRenderer/renderer/Renderer.js","../../src/PanoImageRenderer/renderer/CubeRenderer.js","../../src/PanoImageRenderer/renderer/CubeStripRenderer.js","../../src/PanoImageRenderer/renderer/CylinderRenderer.js","../../src/PanoViewer/consts.js","../../src/PanoImageRenderer/PanoImageRenderer.js","../../src/PanoViewer/PanoViewer.js"],"sourcesContent":["/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable no-new-func, no-nested-ternary */\nconst win = typeof window !== \"undefined\" && window.Math === Math ? window : typeof self !== \"undefined\" && self.Math === Math ? self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nconst doc = win.document;\n\nexport {\n\twin as window,\n\tdoc as document\n};\n","/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport {window as win, document as doc} from \"./browser\";\n\nwin.Float32Array = (typeof win.Float32Array !== \"undefined\") ? win.Float32Array : win.Array;\n\nconst Float32Array = win.Float32Array;\nconst getComputedStyle = win.getComputedStyle;\nconst userAgent = win.navigator.userAgent;\nconst SUPPORT_TOUCH = \"ontouchstart\" in win;\nconst SUPPORT_DEVICEMOTION = \"ondevicemotion\" in win;\nconst DeviceMotionEvent = win.DeviceMotionEvent;\nconst devicePixelRatio = win.devicePixelRatio;\n\nconst TRANSFORM = (function() {\n\tconst docStyle = doc.documentElement.style;\n\tconst target = [\"transform\", \"webkitTransform\", \"msTransform\", \"mozTransform\"];\n\n\tfor (let i = 0, len = target.length; i < len; i++) {\n\t\tif (target[i] in docStyle) {\n\t\t\treturn target[i];\n\t\t}\n\t}\n\treturn \"\";\n})();\n\n// check for will-change support\nconst SUPPORT_WILLCHANGE = win.CSS && win.CSS.supports &&\n\twin.CSS.supports(\"will-change\", \"transform\");\n\nexport {\n\tFloat32Array,\n\tgetComputedStyle,\n\tuserAgent,\n\tTRANSFORM,\n\tSUPPORT_TOUCH,\n\tSUPPORT_DEVICEMOTION,\n\tSUPPORT_WILLCHANGE,\n\tDeviceMotionEvent,\n\tdevicePixelRatio\n};\n\n","/*\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar MathUtil = window.MathUtil || {};\n\nMathUtil.degToRad = Math.PI / 180;\nMathUtil.radToDeg = 180 / Math.PI;\n\n// Some minimal math functionality borrowed from THREE.Math and stripped down\n// for the purposes of this library.\n\n\nMathUtil.Vector2 = function ( x, y ) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nMathUtil.Vector2.prototype = {\n  constructor: MathUtil.Vector2,\n\n  set: function ( x, y ) {\n    this.x = x;\n    this.y = y;\n\n    return this;\n  },\n\n  copy: function ( v ) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  },\n\n  subVectors: function ( a, b ) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  },\n};\n\nMathUtil.Vector3 = function ( x, y, z ) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nMathUtil.Vector3.prototype = {\n  constructor: MathUtil.Vector3,\n\n  set: function ( x, y, z ) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n  },\n\n  copy: function ( v ) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n  },\n\n  length: function () {\n    return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n  },\n\n  normalize: function () {\n    var scalar = this.length();\n\n    if ( scalar !== 0 ) {\n      var invScalar = 1 / scalar;\n\n      this.multiplyScalar(invScalar);\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n\n  multiplyScalar: function ( scalar ) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n  },\n\n  applyQuaternion: function ( q ) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w;\n\n    // calculate quat * vector\n    var ix =  qw * x + qy * z - qz * y;\n    var iy =  qw * y + qz * x - qx * z;\n    var iz =  qw * z + qx * y - qy * x;\n    var iw = - qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n    this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n    this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n    return this;\n  },\n\n  dot: function ( v ) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n\n  crossVectors: function ( a, b ) {\n    var ax = a.x, ay = a.y, az = a.z;\n    var bx = b.x, by = b.y, bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n  },\n};\n\nMathUtil.Quaternion = function ( x, y, z, w ) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = ( w !== undefined ) ? w : 1;\n};\n\nMathUtil.Quaternion.prototype = {\n  constructor: MathUtil.Quaternion,\n\n  set: function ( x, y, z, w ) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n\n    return this;\n  },\n\n  copy: function ( quaternion ) {\n    this.x = quaternion.x;\n    this.y = quaternion.y;\n    this.z = quaternion.z;\n    this.w = quaternion.w;\n\n    return this;\n  },\n\n  setFromEulerXYZ: function( x, y, z ) {\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    return this;\n  },\n\n  setFromEulerYXZ: function( x, y, z ) {\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 - s1 * s2 * c3;\n    this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    return this;\n  },\n\n  setFromAxisAngle: function ( axis, angle ) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n\n    var halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n    this.x = axis.x * s;\n    this.y = axis.y * s;\n    this.z = axis.z * s;\n    this.w = Math.cos( halfAngle );\n\n    return this;\n  },\n\n  multiply: function ( q ) {\n    return this.multiplyQuaternions( this, q );\n  },\n\n  multiplyQuaternions: function ( a, b ) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n    var qax = a.x, qay = a.y, qaz = a.z, qaw = a.w;\n    var qbx = b.x, qby = b.y, qbz = b.z, qbw = b.w;\n\n    this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n    return this;\n  },\n\n  inverse: function () {\n    this.x *= -1;\n    this.y *= -1;\n    this.z *= -1;\n\n    this.normalize();\n\n    return this;\n  },\n\n  normalize: function () {\n    var l = Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n    if ( l === 0 ) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    } else {\n      l = 1 / l;\n\n      this.x = this.x * l;\n      this.y = this.y * l;\n      this.z = this.z * l;\n      this.w = this.w * l;\n    }\n\n    return this;\n  },\n\n  slerp: function ( qb, t ) {\n    if ( t === 0 ) return this;\n    if ( t === 1 ) return this.copy( qb );\n\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n\n    // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb.w + x * qb.x + y * qb.y + z * qb.z;\n\n    if ( cosHalfTheta < 0 ) {\n      this.w = - qb.w;\n      this.x = - qb.x;\n      this.y = - qb.y;\n      this.z = - qb.z;\n\n      cosHalfTheta = - cosHalfTheta;\n    } else {\n      this.copy( qb );\n    }\n\n    if ( cosHalfTheta >= 1.0 ) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n\n      return this;\n    }\n\n    var halfTheta = Math.acos( cosHalfTheta );\n    var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n    if ( Math.abs( sinHalfTheta ) < 0.001 ) {\n      this.w = 0.5 * ( w + this.w );\n      this.x = 0.5 * ( x + this.x );\n      this.y = 0.5 * ( y + this.y );\n      this.z = 0.5 * ( z + this.z );\n\n      return this;\n    }\n\n    var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n    ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n    this.w = ( w * ratioA + this.w * ratioB );\n    this.x = ( x * ratioA + this.x * ratioB );\n    this.y = ( y * ratioA + this.y * ratioB );\n    this.z = ( z * ratioA + this.z * ratioB );\n\n    return this;\n  },\n\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n\n    var v1, r;\n    var EPS = 0.000001;\n\n    return function ( vFrom, vTo ) {\n      if ( v1 === undefined ) v1 = new MathUtil.Vector3();\n\n      r = vFrom.dot( vTo ) + 1;\n\n      if ( r < EPS ) {\n        r = 0;\n\n        if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n          v1.set( - vFrom.y, vFrom.x, 0 );\n        } else {\n          v1.set( 0, - vFrom.z, vFrom.y );\n        }\n      } else {\n        v1.crossVectors( vFrom, vTo );\n      }\n\n      this.x = v1.x;\n      this.y = v1.y;\n      this.z = v1.z;\n      this.w = r;\n\n      this.normalize();\n\n      return this;\n    }\n  }(),\n};\n\nmodule.exports = MathUtil;\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Util = window.Util || {};\n\nUtil.MIN_TIMESTEP = 0.001;\nUtil.MAX_TIMESTEP = 1;\n\nUtil.base64 = function(mimeType, base64) {\n  return 'data:' + mimeType + ';base64,' + base64;\n};\n\nUtil.clamp = function(value, min, max) {\n  return Math.min(Math.max(min, value), max);\n};\n\nUtil.lerp = function(a, b, t) {\n  return a + ((b - a) * t);\n};\n\n/**\n * Light polyfill for `Promise.race`. Returns\n * a promise that resolves when the first promise\n * provided resolves.\n *\n * @param {Array<Promise>} promises\n */\nUtil.race = function(promises) {\n  if (Promise.race) {\n    return Promise.race(promises);\n  }\n\n  return new Promise(function (resolve, reject) {\n    for (var i = 0; i < promises.length; i++) {\n      promises[i].then(resolve, reject);\n    }\n  });\n};\n\nUtil.isIOS = (function() {\n  var isIOS = /iPad|iPhone|iPod/.test(navigator.platform);\n  return function() {\n    return isIOS;\n  };\n})();\n\nUtil.isWebViewAndroid = (function() {\n  var isWebViewAndroid = navigator.userAgent.indexOf('Version') !== -1 &&\n      navigator.userAgent.indexOf('Android') !== -1 &&\n      navigator.userAgent.indexOf('Chrome') !== -1;\n  return function() {\n    return isWebViewAndroid;\n  };\n})();\n\nUtil.isSafari = (function() {\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  return function() {\n    return isSafari;\n  };\n})();\n\nUtil.isFirefoxAndroid = (function() {\n  var isFirefoxAndroid = navigator.userAgent.indexOf('Firefox') !== -1 &&\n      navigator.userAgent.indexOf('Android') !== -1;\n  return function() {\n    return isFirefoxAndroid;\n  };\n})();\n\nUtil.isR7 = (function() {\n  var isR7 = navigator.userAgent.indexOf('R7 Build') !== -1;\n  return function() {\n    return isR7;\n  };\n})();\n\nUtil.isLandscapeMode = function() {\n  var rtn = (window.orientation == 90 || window.orientation == -90);\n  return Util.isR7() ? !rtn : rtn;\n};\n\n// Helper method to validate the time steps of sensor timestamps.\nUtil.isTimestampDeltaValid = function(timestampDeltaS) {\n  if (isNaN(timestampDeltaS)) {\n    return false;\n  }\n  if (timestampDeltaS <= Util.MIN_TIMESTEP) {\n    return false;\n  }\n  if (timestampDeltaS > Util.MAX_TIMESTEP) {\n    return false;\n  }\n  return true;\n};\n\nUtil.getScreenWidth = function() {\n  return Math.max(window.screen.width, window.screen.height) *\n      window.devicePixelRatio;\n};\n\nUtil.getScreenHeight = function() {\n  return Math.min(window.screen.width, window.screen.height) *\n      window.devicePixelRatio;\n};\n\nUtil.requestFullscreen = function(element) {\n  if (Util.isWebViewAndroid()) {\n      return false;\n  }\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\nUtil.exitFullscreen = function() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\nUtil.getFullscreenElement = function() {\n  return document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n};\n\nUtil.linkProgram = function(gl, vertexSource, fragmentSource, attribLocationMap) {\n  // No error checking for brevity.\n  var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexSource);\n  gl.compileShader(vertexShader);\n\n  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentSource);\n  gl.compileShader(fragmentShader);\n\n  var program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  for (var attribName in attribLocationMap)\n    gl.bindAttribLocation(program, attribLocationMap[attribName], attribName);\n\n  gl.linkProgram(program);\n\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n\n  return program;\n};\n\nUtil.getProgramUniforms = function(gl, program) {\n  var uniforms = {};\n  var uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformName = '';\n  for (var i = 0; i < uniformCount; i++) {\n    var uniformInfo = gl.getActiveUniform(program, i);\n    uniformName = uniformInfo.name.replace('[0]', '');\n    uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n  }\n  return uniforms;\n};\n\nUtil.orthoMatrix = function (out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right),\n      bt = 1 / (bottom - top),\n      nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n};\n\nUtil.copyArray = function (source, dest) {\n  for (var i = 0, n = source.length; i < n; i++) {\n    dest[i] = source[i];\n  }\n};\n\nUtil.isMobile = function() {\n  var check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n};\n\nUtil.extend = function(dest, src) {\n  for (var key in src) {\n    if (src.hasOwnProperty(key)) {\n      dest[key] = src[key];\n    }\n  }\n\n  return dest;\n}\n\nUtil.safariCssSizeWorkaround = function(canvas) {\n  // TODO(smus): Remove this workaround when Safari for iOS is fixed.\n  // iOS only workaround (for https://bugs.webkit.org/show_bug.cgi?id=152556).\n  //\n  // \"To the last I grapple with thee;\n  //  from hell's heart I stab at thee;\n  //  for hate's sake I spit my last breath at thee.\"\n  // -- Moby Dick, by Herman Melville\n  if (Util.isIOS()) {\n    var width = canvas.style.width;\n    var height = canvas.style.height;\n    canvas.style.width = (parseInt(width) + 1) + 'px';\n    canvas.style.height = (parseInt(height)) + 'px';\n    setTimeout(function() {\n      canvas.style.width = width;\n      canvas.style.height = height;\n    }, 100);\n  }\n\n  // Debug only.\n  window.Util = Util;\n  window.canvas = canvas;\n};\n\nUtil.isDebug = function() {\n  return Util.getQueryParameter('debug');\n};\n\nUtil.getQueryParameter = function(name) {\n  var name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n      results = regex.exec(location.search);\n  return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n};\n\nUtil.frameDataFromPose = (function() {\n  var piOver180 = Math.PI / 180.0;\n  var rad45 = Math.PI * 0.25;\n\n  // Borrowed from glMatrix.\n  function mat4_perspectiveFromFieldOfView(out, fov, near, far) {\n    var upTan = Math.tan(fov ? (fov.upDegrees * piOver180) : rad45),\n    downTan = Math.tan(fov ? (fov.downDegrees * piOver180) : rad45),\n    leftTan = Math.tan(fov ? (fov.leftDegrees * piOver180) : rad45),\n    rightTan = Math.tan(fov ? (fov.rightDegrees * piOver180) : rad45),\n    xScale = 2.0 / (leftTan + rightTan),\n    yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n  }\n\n  function mat4_fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n  };\n\n  function mat4_translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n      a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n      a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n      out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n      out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n      out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n  };\n\n  function mat4_invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n      return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n  };\n\n  var defaultOrientation = new Float32Array([0, 0, 0, 1]);\n  var defaultPosition = new Float32Array([0, 0, 0]);\n\n  function updateEyeMatrices(projection, view, pose, parameters, vrDisplay) {\n    mat4_perspectiveFromFieldOfView(projection, parameters ? parameters.fieldOfView : null, vrDisplay.depthNear, vrDisplay.depthFar);\n\n    var orientation = pose.orientation || defaultOrientation;\n    var position = pose.position || defaultPosition;\n\n    mat4_fromRotationTranslation(view, orientation, position);\n    if (parameters)\n      mat4_translate(view, view, parameters.offset);\n    mat4_invert(view, view);\n  }\n\n  return function(frameData, pose, vrDisplay) {\n    if (!frameData || !pose)\n      return false;\n\n    frameData.pose = pose;\n    frameData.timestamp = pose.timestamp;\n\n    updateEyeMatrices(\n        frameData.leftProjectionMatrix, frameData.leftViewMatrix,\n        pose, vrDisplay.getEyeParameters(\"left\"), vrDisplay);\n    updateEyeMatrices(\n        frameData.rightProjectionMatrix, frameData.rightViewMatrix,\n        pose, vrDisplay.getEyeParameters(\"right\"), vrDisplay);\n\n    return true;\n  };\n})();\n\nUtil.isInsideCrossDomainIFrame = function() {\n  var isFramed = (window.self !== window.top);\n  var refDomain = Util.getDomainFromUrl(document.referrer);\n  var thisDomain = Util.getDomainFromUrl(window.location.href);\n\n  return isFramed && (refDomain !== thisDomain);\n};\n\n// From http://stackoverflow.com/a/23945027.\nUtil.getDomainFromUrl = function(url) {\n  var domain;\n  // Find & remove protocol (http, ftp, etc.) and get domain.\n  if (url.indexOf(\"://\") > -1) {\n    domain = url.split('/')[2];\n  }\n  else {\n    domain = url.split('/')[0];\n  }\n\n  //find & remove port number\n  domain = domain.split(':')[0];\n\n  return domain;\n}\n\nmodule.exports = Util;\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MathUtil = require('../math-util');\nvar Util = require('../util');\n\n/**\n * Given an orientation and the gyroscope data, predicts the future orientation\n * of the head. This makes rendering appear faster.\n *\n * Also see: http://msl.cs.uiuc.edu/~lavalle/papers/LavYerKatAnt14.pdf\n *\n * @param {Number} predictionTimeS time from head movement to the appearance of\n * the corresponding image.\n */\nfunction PosePredictor(predictionTimeS) {\n  this.predictionTimeS = predictionTimeS;\n\n  // The quaternion corresponding to the previous state.\n  this.previousQ = new MathUtil.Quaternion();\n  // Previous time a prediction occurred.\n  this.previousTimestampS = null;\n\n  // The delta quaternion that adjusts the current pose.\n  this.deltaQ = new MathUtil.Quaternion();\n  // The output quaternion.\n  this.outQ = new MathUtil.Quaternion();\n}\n\nPosePredictor.prototype.getPrediction = function(currentQ, gyro, timestampS) {\n  if (!this.previousTimestampS) {\n    this.previousQ.copy(currentQ);\n    this.previousTimestampS = timestampS;\n    return currentQ;\n  }\n\n  // Calculate axis and angle based on gyroscope rotation rate data.\n  var axis = new MathUtil.Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n\n  var angularSpeed = gyro.length();\n\n  // If we're rotating slowly, don't do prediction.\n  if (angularSpeed < MathUtil.degToRad * 20) {\n    if (Util.isDebug()) {\n      console.log('Moving slowly, at %s deg/s: no prediction',\n                  (MathUtil.radToDeg * angularSpeed).toFixed(1));\n    }\n    this.outQ.copy(currentQ);\n    this.previousQ.copy(currentQ);\n    return this.outQ;\n  }\n\n  // Get the predicted angle based on the time delta and latency.\n  var deltaT = timestampS - this.previousTimestampS;\n  var predictAngle = angularSpeed * this.predictionTimeS;\n\n  this.deltaQ.setFromAxisAngle(axis, predictAngle);\n  this.outQ.copy(this.previousQ);\n  this.outQ.multiply(this.deltaQ);\n\n  this.previousQ.copy(currentQ);\n  this.previousTimestampS = timestampS;\n\n  return this.outQ;\n};\n\n\nmodule.exports = PosePredictor;\n","/**\n * Original Code\n * https://github.com/toji/gl-matrix/blob/v2.3.2/src/gl-matrix/common.js\n * Common utilities\n * modified by egjs\n */\nvar glMatrix = {};\n\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\n\nvar degree = Math.PI / 180;\n\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\nglMatrix.toDegree = function(a){\n     return a / degree;\n}\n\n// glMatrix.EPSILON = 0.000001;\nglMatrix.EPSILON = 0.0001;\n\nexport default glMatrix;\n","/**\n * Original Code\n * https://github.com/toji/gl-matrix/blob/v2.3.2/src/gl-matrix/vec3.js\n * 3 Dimensional Vector Util\n * modified by egjs\n */\nimport glMatrix from \"./common.js\";\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n\tvar p = [], r=[];\n\t//Translate point to the origin\n\tp[0] = a[0] - b[0];\n\tp[1] = a[1] - b[1];\n\tp[2] = a[2] - b[2];\n\n\t//perform rotation\n\tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n\tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n\tr[2] = p[2];\n\n\t//translate to correct position\n\tout[0] = r[0] + b[0];\n\tout[1] = r[1] + b[1];\n\tout[2] = r[2] + b[2];\n\n\treturn out;\n};\n\nexport default vec3;\n","/**\n * Original Code\n * https://github.com/toji/gl-matrix/blob/v2.3.2/src/gl-matrix/vec2.js\n * 2 Dimensional Vector Util\n * modified by egjs\n */\nimport glMatrix from \"./common.js\";\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\nexport default vec2;\n","/**\n * Original Code\n * https://github.com/toji/gl-matrix/blob/v2.3.2/src/gl-matrix/quat.js\n * Quaternion util\n * modified by egjs\n */\nimport glMatrix from \"./common.js\";\n\n/**\n * @class Quaternion\n * @name quat\n */\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = function(x, y, z, w) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n    }\n    return out;\n};\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.equals = function (a, b) {\n    let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n  }\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\nexport default quat;\n","/**\n * Original Code\n * https://github.com/toji/gl-matrix/blob/v2.3.2/src/gl-matrix/mat4.js\n * 4x4 Matrix util\n * modified by egjs\n */\nimport glMatrix from \"./common.js\";\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\nexport default mat4;\n","/**\n * Original Code\n * https://github.com/toji/gl-matrix/blob/v2.3.2/src/gl-matrix.js\n * Math Util\n * modified by egjs\n */\n/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.2\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n// Some minimal math functionality borrowed from gl-Matrix and stripped down\n// for the purposes of this library.\n\nimport glMatrix from \"./mathUtil/common.js\";\nimport vec3 from \"./mathUtil/vec3.js\";\nimport vec2 from \"./mathUtil/vec2.js\";\nimport quat from \"./mathUtil/quat.js\";\nimport mat4 from \"./mathUtil/mat4.js\";\n\nfunction quatToVec3(quaternion) {\n\tconst baseV = vec3.fromValues(0, 0, 1);\n\n\tvec3.transformQuat(baseV, baseV, quaternion);\n\treturn baseV;\n}\n\nconst util = {};\n\nutil.isPowerOfTwo = function(n) {\n\treturn n && (n & (n - 1)) === 0;\n};\n\nutil.extractPitchFromQuat = function(quaternion) {\n\tconst baseV = quatToVec3(quaternion);\n\n\treturn -1 * Math.atan2(\n\t\tbaseV[1],\n\t\tMath.sqrt(Math.pow(baseV[0], 2) + Math.pow(baseV[2], 2)));\n};\n\n// implement reference\n// the general equation of a plane : http://www.gisdeveloper.co.kr/entry/평면의-공식\n// calculating angle between two vectors : http://darkpgmr.tistory.com/121\nconst ROTATE_CONSTANT = {\n\tPITCH_DELTA: 1,\n\tYAW_DELTA_BY_ROLL: 2,\n\tYAW_DELTA_BY_YAW: 3,\n};\n\nROTATE_CONSTANT[ROTATE_CONSTANT.PITCH_DELTA] = {\n\ttargetAxis: [0, 1, 0],\n\tmeshPoint: [0, 0, 1],\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_ROLL] = {\n\ttargetAxis: [0, 1, 0],\n\tmeshPoint: [1, 0, 0],\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_YAW] = {\n\ttargetAxis: [1, 0, 0],\n\tmeshPoint: [0, 0, 1],\n};\n\nfunction getRotationDelta(prevQ, curQ, rotateKind) {\n\tconst targetAxis = vec3.fromValues(\n\t\tROTATE_CONSTANT[rotateKind].targetAxis[0],\n\t\tROTATE_CONSTANT[rotateKind].targetAxis[1],\n\t\tROTATE_CONSTANT[rotateKind].targetAxis[2]\n\t);\n\tconst meshPoint = ROTATE_CONSTANT[rotateKind].meshPoint;\n\n\tconst prevQuaternion = quat.clone(prevQ);\n\tconst curQuaternion = quat.clone(curQ);\n\n\tquat.normalize(prevQuaternion, prevQuaternion);\n\tquat.normalize(curQuaternion, curQuaternion);\n\n\tlet prevPoint = vec3.fromValues(0, 0, 1);\n\tlet curPoint = vec3.fromValues(0, 0, 1);\n\n\tvec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n\tvec3.transformQuat(curPoint, curPoint, curQuaternion);\n\tvec3.transformQuat(targetAxis, targetAxis, curQuaternion);\n\n\tconst rotateDistance = vec3.dot(targetAxis, vec3.cross(vec3.create(), prevPoint, curPoint));\n\tconst rotateDirection = rotateDistance > 0 ? 1 : -1;\n\n\t// when counter clock wise, use vec3.fromValues(0,1,0)\n\t// when clock wise, use vec3.fromValues(0,-1,0)\n\t// const meshPoint1 = vec3.fromValues(0, 0, 0);\n\tconst meshPoint2 = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\n\tlet meshPoint3;\n\n\tif (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n\t\tmeshPoint3 = vec3.fromValues(0, rotateDirection, 0);\n\t} else {\n\t\tmeshPoint3 = vec3.fromValues(rotateDirection, 0, 0);\n\t}\n\n\tvec3.transformQuat(meshPoint2, meshPoint2, curQuaternion);\n\tvec3.transformQuat(meshPoint3, meshPoint3, curQuaternion);\n\n\tconst vecU = meshPoint2;\n\tconst vecV = meshPoint3;\n\tconst vecN = vec3.create();\n\n\tvec3.cross(vecN, vecU, vecV);\n\tvec3.normalize(vecN, vecN);\n\n\tconst coefficientA = vecN[0];\n\tconst coefficientB = vecN[1];\n\tconst coefficientC = vecN[2];\n//\tconst coefficientD = -1 * vec3.dot(vecN, meshPoint1);\n\n\t// a point on the plane\n\tcurPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\tvec3.transformQuat(curPoint, curPoint, curQuaternion);\n\n\t// a point should project on the plane\n\tprevPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\tvec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n\n\t// distance between prevPoint and the plane\n\tlet distance = Math.abs(\n\t\tprevPoint[0] * coefficientA +\n\t\tprevPoint[1] * coefficientB +\n\t\tprevPoint[2] * coefficientC\n\t);\n\n\tconst projectedPrevPoint = vec3.create();\n\n\tvec3.subtract(projectedPrevPoint, prevPoint, vec3.scale(vec3.create(), vecN, distance));\n\n\tlet trigonometricRatio =\n\t\t(projectedPrevPoint[0] * curPoint[0] +\n\t\tprojectedPrevPoint[1] * curPoint[1] +\n\t\tprojectedPrevPoint[2] * curPoint[2]) /\n\t\t(vec3.length(projectedPrevPoint) * vec3.length(curPoint));\n\n\t// defensive block\n\ttrigonometricRatio > 1 && (trigonometricRatio = 1);\n\n\tconst theta = Math.acos(trigonometricRatio);\n\n\tconst crossVec = vec3.cross(vec3.create(), curPoint, projectedPrevPoint);\n\n\tdistance =\n\t\tcoefficientA * crossVec[0] +\n\t\tcoefficientB * crossVec[1] +\n\t\tcoefficientC * crossVec[2];\n\n\tlet thetaDirection;\n\n\tif (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n\t\tthetaDirection = distance > 0 ? 1 : -1;\n\t} else {\n\t\tthetaDirection = distance < 0 ? 1 : -1;\n\t}\n\n\tconst deltaRadian = theta * thetaDirection * rotateDirection;\n\n\treturn glMatrix.toDegree(deltaRadian);\n}\n\nutil.getRotationDelta = getRotationDelta;\n\nexport {\n\tutil,\n\tglMatrix,\n\tmat4,\n\tquat,\n\tvec2,\n\tvec3,\n\tROTATE_CONSTANT,\n};\n","import {userAgent} from \"../utils/browserFeature\";\n/**\n * Returns a number value indiciating the version of Chrome being used,\n * or otherwise `null` if not on Chrome.\n *\n * Ref: https://github.com/immersive-web/cardboard-vr-display/pull/19\n */\n/**\n * In Chrome m65, `devicemotion` events are broken but subsequently fixed\n * in 65.0.3325.148. Since many browsers use Chromium, ensure that\n * we scope this detection by branch and build numbers to provide\n * a proper fallback.\n * https://github.com/immersive-web/webvr-polyfill/issues/307\n */\nlet version = -1; // It should not be null because it will be compared with number\nlet branch = null;\nlet build = null;\n\nconst match = /Chrome\\/([0-9]+)\\.(?:[0-9]*)\\.([0-9]*)\\.([0-9]*)/i.exec(userAgent);\n\nif (match) {\n\tversion = parseInt(match[1], 10);\n\tbranch = match[2];\n\tbuild = match[3];\n}\n\nconst CHROME_VERSION = version;\nconst IS_CHROME_WITHOUT_DEVICE_MOTION = version === 65 && branch === \"3325\" && parseInt(build, 10) < 148;\nconst IS_ANDROID = /Android/i.test(userAgent);\n\nconst CONTROL_MODE_VR = 1;\nconst CONTROL_MODE_YAWPITCH = 2;\n\nconst TOUCH_DIRECTION_NONE = 1;\nconst TOUCH_DIRECTION_YAW = 2;\nconst TOUCH_DIRECTION_PITCH = 4;\nconst TOUCH_DIRECTION_ALL = TOUCH_DIRECTION_YAW | TOUCH_DIRECTION_PITCH;\n\n/* Const for MovableCoord */\nconst MC_DECELERATION = 0.0014;\nconst MC_MAXIMUM_DURATION = 1000;\nconst MC_BIND_SCALE = [0.20, 0.20];\n\nconst MIN_FIELD_OF_VIEW = 20;\nconst MAX_FIELD_OF_VIEW = 110;\nconst PAN_SCALE = 320;\n\n// const DELTA_THRESHOLD = 0.015;\n// const DELTA_THRESHOLD = 0.09; // Note4\n// const DELTA_THRESHOLD = 0.0825;\n// const DELTA_THRESHOLD = 0.075;\n// const DELTA_THRESHOLD = 0.06;\n// const DELTA_THRESHOLD = 0.045;\nconst DELTA_THRESHOLD = 0.0375; // Note2\n\nconst YAW_RANGE_HALF = 180;\nconst PITCH_RANGE_HALF = 90;\nconst CIRCULAR_PITCH_RANGE_HALF = 180;\nconst PINCH_EVENTS = \"pinchstart pinchmove pinchend\";\n\nconst KEYMAP = {\n\tLEFT_ARROW: 37,\n\tA: 65,\n\tUP_ARROW: 38,\n\tW: 87,\n\tRIGHT_ARROW: 39,\n\tD: 68,\n\tDOWN_ARROW: 40,\n\tS: 83,\n};\n\nconst GYRO_MODE = {\n\tNONE: \"none\",\n\tYAWPITCH: \"yawPitch\",\n\tVR: \"VR\"\n};\n\nexport {\n\tGYRO_MODE,\n\n\tCONTROL_MODE_VR,\n\tCONTROL_MODE_YAWPITCH,\n\n\tTOUCH_DIRECTION_NONE,\n\tTOUCH_DIRECTION_YAW,\n\tTOUCH_DIRECTION_PITCH,\n\tTOUCH_DIRECTION_ALL,\n\n\tMC_DECELERATION,\n\tMC_MAXIMUM_DURATION,\n\tMC_BIND_SCALE,\n\tMIN_FIELD_OF_VIEW,\n\tMAX_FIELD_OF_VIEW,\n\tPAN_SCALE,\n\tDELTA_THRESHOLD,\n\tYAW_RANGE_HALF,\n\tPITCH_RANGE_HALF,\n\tCIRCULAR_PITCH_RANGE_HALF,\n\tPINCH_EVENTS,\n\tKEYMAP,\n\n\tCHROME_VERSION,\n\tIS_CHROME_WITHOUT_DEVICE_MOTION,\n\tIS_ANDROID\n};\n","import Component from \"@egjs/component\";\nimport {vec3} from \"../../utils/math-util\";\nimport {window} from \"../../utils/browser\";\nimport {IS_CHROME_WITHOUT_DEVICE_MOTION, IS_ANDROID} from \"../consts\";\n\nconst STILLNESS_THRESHOLD = 200; // millisecond\n\nexport default class DeviceMotion extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._onDeviceMotion = this._onDeviceMotion.bind(this);\n\t\tthis._onDeviceOrientation = this._onDeviceOrientation.bind(this);\n\t\tthis._onChromeWithoutDeviceMotion = this._onChromeWithoutDeviceMotion.bind(this);\n\n\t\tthis.isWithoutDeviceMotion = IS_CHROME_WITHOUT_DEVICE_MOTION;\n\t\tthis.isAndroid = IS_ANDROID;\n\n\t\tthis.stillGyroVec = vec3.create();\n\t\tthis.rawGyroVec = vec3.create();\n\t\tthis.adjustedGyroVec = vec3.create();\n\n\t\tthis._timer = null;\n\n\t\tthis.lastDevicemotionTimestamp = 0;\n\t\tthis._isEnabled = false;\n\t\tthis.enable();\n\t}\n\t_onChromeWithoutDeviceMotion(e) {\n\t\tlet {alpha, beta, gamma} = e;\n\n\t\t// There is deviceorientation event trigged with empty values\n\t\t// on Headless Chrome.\n\t\tif (alpha === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// convert to radian\n\t\talpha = (alpha || 0) * Math.PI / 180;\n\t\tbeta = (beta || 0) * Math.PI / 180;\n\t\tgamma = (gamma || 0) * Math.PI / 180;\n\n\t\tthis.trigger(\"devicemotion\", {\n\t\t\tinputEvent: {\n\t\t\t\tdeviceorientation: {\n\t\t\t\t\talpha,\n\t\t\t\t\tbeta,\n\t\t\t\t\tgamma: -gamma\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t_onDeviceOrientation() {\n\t\tthis._timer && clearTimeout(this._timer);\n\t\tthis._timer = setTimeout(() => {\n\t\t\tif ((new Date().getTime() - this.lastDevicemotionTimestamp) < STILLNESS_THRESHOLD) {\n\t\t\t\tvec3.copy(this.stillGyroVec, this.rawGyroVec);\n\t\t\t}\n\t\t}, STILLNESS_THRESHOLD);\n\t}\n\t_onDeviceMotion(e) {\n\t\t// desktop chrome triggers devicemotion event with empthy sensor values.\n\t\t// Those events should ignored.\n\t\tconst isGyroSensorAvailable = !(e.rotationRate.alpha == null);\n\t\tconst isGravitySensorAvailable = !(e.accelerationIncludingGravity.x == null);\n\n\t\tif (e.interval === 0 || !(isGyroSensorAvailable && isGravitySensorAvailable)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst devicemotionEvent = Object.assign({}, e);\n\n\t\tdevicemotionEvent.interval = e.interval;\n\t\tdevicemotionEvent.timeStamp = e.timeStamp;\n\t\tdevicemotionEvent.type = e.type;\n\t\tdevicemotionEvent.rotationRate = {\n\t\t\talpha: e.rotationRate.alpha,\n\t\t\tbeta: e.rotationRate.beta,\n\t\t\tgamma: e.rotationRate.gamma,\n\t\t};\n\t\tdevicemotionEvent.accelerationIncludingGravity = {\n\t\t\tx: e.accelerationIncludingGravity.x,\n\t\t\ty: e.accelerationIncludingGravity.y,\n\t\t\tz: e.accelerationIncludingGravity.z,\n\t\t};\n\t\tdevicemotionEvent.acceleration = {\n\t\t\tx: e.acceleration.x,\n\t\t\ty: e.acceleration.y,\n\t\t\tz: e.acceleration.z,\n\t\t};\n\n\t\tif (this.isAndroid) {\n\t\t\tvec3.set(\n\t\t\t\tthis.rawGyroVec,\n\t\t\t\te.rotationRate.alpha || 0,\n\t\t\t\te.rotationRate.beta || 0,\n\t\t\t\te.rotationRate.gamma || 0);\n\t\t\tvec3.subtract(this.adjustedGyroVec, this.rawGyroVec, this.stillGyroVec);\n\t\t\tthis.lastDevicemotionTimestamp = new Date().getTime();\n\n\t\t\tdevicemotionEvent.adjustedRotationRate = {\n\t\t\t\talpha: this.adjustedGyroVec[0],\n\t\t\t\tbeta: this.adjustedGyroVec[1],\n\t\t\t\tgamma: this.adjustedGyroVec[2]};\n\t\t}\n\n\t\tthis.trigger(\"devicemotion\", {\n\t\t\tinputEvent: devicemotionEvent\n\t\t});\n\t}\n\tenable() {\n\t\tif (this.isAndroid) {\n\t\t\twindow.addEventListener(\"deviceorientation\", this._onDeviceOrientation);\n\t\t}\n\t\tif (this.isWithoutDeviceMotion) {\n\t\t\twindow.addEventListener(\"deviceorientation\", this._onChromeWithoutDeviceMotion);\n\t\t} else {\n\t\t\twindow.addEventListener(\"devicemotion\", this._onDeviceMotion);\n\t\t}\n\t\tthis._isEnabled = true;\n\t}\n\tdisable() {\n\t\twindow.removeEventListener(\"deviceorientation\", this._onDeviceOrientation);\n\t\twindow.removeEventListener(\"deviceorientation\", this._onChromeWithoutDeviceMotion);\n\t\twindow.removeEventListener(\"devicemotion\", this._onDeviceMotion);\n\t\tthis._isEnabled = false;\n\t}\n}\n","function SensorSample(sample, timestampS) {\n  this.set(sample, timestampS);\n};\n\nSensorSample.prototype.set = function(sample, timestampS) {\n  this.sample = sample;\n  this.timestampS = timestampS;\n};\n\nSensorSample.prototype.copy = function(sensorSample) {\n  this.set(sensorSample.sample, sensorSample.timestampS);\n};\n\nmodule.exports = SensorSample;\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar SensorSample = require('./sensor-sample.js');\nvar MathUtil = require('../math-util.js');\nvar Util = require('../util.js');\n\n/**\n * An implementation of a simple complementary filter, which fuses gyroscope and\n * accelerometer data from the 'devicemotion' event.\n *\n * Accelerometer data is very noisy, but stable over the long term.\n * Gyroscope data is smooth, but tends to drift over the long term.\n *\n * This fusion is relatively simple:\n * 1. Get orientation estimates from accelerometer by applying a low-pass filter\n *    on that data.\n * 2. Get orientation estimates from gyroscope by integrating over time.\n * 3. Combine the two estimates, weighing (1) in the long term, but (2) for the\n *    short term.\n */\nfunction ComplementaryFilter(kFilter) {\n  this.kFilter = kFilter;\n\n  // Raw sensor measurements.\n  this.currentAccelMeasurement = new SensorSample();\n  this.currentGyroMeasurement = new SensorSample();\n  this.previousGyroMeasurement = new SensorSample();\n\n  // Set default look direction to be in the correct direction.\n  if (Util.isIOS()) {\n    this.filterQ = new MathUtil.Quaternion(-1, 0, 0, 1);\n  } else {\n    this.filterQ = new MathUtil.Quaternion(1, 0, 0, 1);\n  }\n  this.previousFilterQ = new MathUtil.Quaternion();\n  this.previousFilterQ.copy(this.filterQ);\n\n  // Orientation based on the accelerometer.\n  this.accelQ = new MathUtil.Quaternion();\n  // Whether or not the orientation has been initialized.\n  this.isOrientationInitialized = false;\n  // Running estimate of gravity based on the current orientation.\n  this.estimatedGravity = new MathUtil.Vector3();\n  // Measured gravity based on accelerometer.\n  this.measuredGravity = new MathUtil.Vector3();\n\n  // Debug only quaternion of gyro-based orientation.\n  this.gyroIntegralQ = new MathUtil.Quaternion();\n}\n\nComplementaryFilter.prototype.addAccelMeasurement = function(vector, timestampS) {\n  this.currentAccelMeasurement.set(vector, timestampS);\n};\n\nComplementaryFilter.prototype.addGyroMeasurement = function(vector, timestampS) {\n  this.currentGyroMeasurement.set(vector, timestampS);\n\n  var deltaT = timestampS - this.previousGyroMeasurement.timestampS;\n  if (Util.isTimestampDeltaValid(deltaT)) {\n    this.run_();\n  }\n\n  this.previousGyroMeasurement.copy(this.currentGyroMeasurement);\n};\n\nComplementaryFilter.prototype.run_ = function() {\n\n  if (!this.isOrientationInitialized) {\n    this.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n    this.previousFilterQ.copy(this.accelQ);\n    this.isOrientationInitialized = true;\n    return;\n  }\n\n  var deltaT = this.currentGyroMeasurement.timestampS -\n      this.previousGyroMeasurement.timestampS;\n\n  // Convert gyro rotation vector to a quaternion delta.\n  var gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n  this.gyroIntegralQ.multiply(gyroDeltaQ);\n\n  // filter_1 = K * (filter_0 + gyro * dT) + (1 - K) * accel.\n  this.filterQ.copy(this.previousFilterQ);\n  this.filterQ.multiply(gyroDeltaQ);\n\n  // Calculate the delta between the current estimated gravity and the real\n  // gravity vector from accelerometer.\n  var invFilterQ = new MathUtil.Quaternion();\n  invFilterQ.copy(this.filterQ);\n  invFilterQ.inverse();\n\n  this.estimatedGravity.set(0, 0, -1);\n  this.estimatedGravity.applyQuaternion(invFilterQ);\n  this.estimatedGravity.normalize();\n\n  this.measuredGravity.copy(this.currentAccelMeasurement.sample);\n  this.measuredGravity.normalize();\n\n  // Compare estimated gravity with measured gravity, get the delta quaternion\n  // between the two.\n  var deltaQ = new MathUtil.Quaternion();\n  deltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n  deltaQ.inverse();\n\n  if (Util.isDebug()) {\n    console.log('Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)',\n                MathUtil.radToDeg * Util.getQuaternionAngle(deltaQ),\n                (this.estimatedGravity.x).toFixed(1),\n                (this.estimatedGravity.y).toFixed(1),\n                (this.estimatedGravity.z).toFixed(1),\n                (this.measuredGravity.x).toFixed(1),\n                (this.measuredGravity.y).toFixed(1),\n                (this.measuredGravity.z).toFixed(1));\n  }\n\n  // Calculate the SLERP target: current orientation plus the measured-estimated\n  // quaternion delta.\n  var targetQ = new MathUtil.Quaternion();\n  targetQ.copy(this.filterQ);\n  targetQ.multiply(deltaQ);\n\n  // SLERP factor: 0 is pure gyro, 1 is pure accel.\n  this.filterQ.slerp(targetQ, 1 - this.kFilter);\n\n  this.previousFilterQ.copy(this.filterQ);\n};\n\nComplementaryFilter.prototype.getOrientation = function() {\n  return this.filterQ;\n};\n\nComplementaryFilter.prototype.accelToQuaternion_ = function(accel) {\n  var normAccel = new MathUtil.Vector3();\n  normAccel.copy(accel);\n  normAccel.normalize();\n  var quat = new MathUtil.Quaternion();\n  quat.setFromUnitVectors(new MathUtil.Vector3(0, 0, -1), normAccel);\n  quat.inverse();\n  return quat;\n};\n\nComplementaryFilter.prototype.gyroToQuaternionDelta_ = function(gyro, dt) {\n  // Extract axis and angle from the gyroscope data.\n  var quat = new MathUtil.Quaternion();\n  var axis = new MathUtil.Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n  quat.setFromAxisAngle(axis, gyro.length() * dt);\n  return quat;\n};\n\n\nmodule.exports = ComplementaryFilter;\n","import MathUtil from \"webvr-polyfill/src/math-util\";\nimport ComplementaryFilter from \"webvr-polyfill/src/sensor-fusion/complementary-filter\";\n\nComplementaryFilter.prototype.run_ = function() {\n\tif (!this.isOrientationInitialized) {\n\t\tthis.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n\t\tthis.previousFilterQ.copy(this.accelQ);\n\t\tthis.isOrientationInitialized = true;\n\t\treturn;\n\t}\n\n\tconst deltaT = this.currentGyroMeasurement.timestampS -\n\tthis.previousGyroMeasurement.timestampS;\n\n\t// Convert gyro rotation vector to a quaternion delta.\n\tconst gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n\n\tthis.gyroIntegralQ.multiply(gyroDeltaQ);\n\n\t// filter_1 = K * (filter_0 + gyro * dT) + (1 - K) * accel.\n\tthis.filterQ.copy(this.previousFilterQ);\n\tthis.filterQ.multiply(gyroDeltaQ);\n\n\t// Calculate the delta between the current estimated gravity and the real\n\t// gravity vector from accelerometer.\n\tconst invFilterQ = new MathUtil.Quaternion();\n\n\tinvFilterQ.copy(this.filterQ);\n\tinvFilterQ.inverse();\n\n\tthis.estimatedGravity.set(0, 0, -1);\n\tthis.estimatedGravity.applyQuaternion(invFilterQ);\n\tthis.estimatedGravity.normalize();\n\n\tthis.measuredGravity.copy(this.currentAccelMeasurement.sample);\n\tthis.measuredGravity.normalize();\n\n\t// Compare estimated gravity with measured gravity, get the delta quaternion\n\t// between the two.\n\tconst deltaQ = new MathUtil.Quaternion();\n\n\tdeltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n\tdeltaQ.inverse();\n\n\t// Calculate the SLERP target: current orientation plus the measured-estimated\n\t// quaternion delta.\n\tconst targetQ = new MathUtil.Quaternion();\n\n\ttargetQ.copy(this.filterQ);\n\ttargetQ.multiply(deltaQ);\n\n\t// SLERP factor: 0 is pure gyro, 1 is pure accel.\n\tthis.filterQ.slerp(targetQ, 1 - this.kFilter);\n\n\tthis.previousFilterQ.copy(this.filterQ);\n\n\tif (!this.isFilterQuaternionInitialized) {\n\t\tthis.isFilterQuaternionInitialized = true;\n\t}\n};\n\nComplementaryFilter.prototype.getOrientation = function() {\n\tif (this.isFilterQuaternionInitialized) {\n\t\treturn this.filterQ;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport default ComplementaryFilter;\n\n","import Component from \"@egjs/component\";\nimport PosePredictor from \"webvr-polyfill/src/sensor-fusion/pose-predictor\";\nimport MathUtil from \"webvr-polyfill/src/math-util\";\nimport Util from \"webvr-polyfill/src/util\";\nimport {window} from \"../../utils/browser\";\nimport {quat} from \"../../utils/math-util\";\nimport DeviceMotion from \"./DeviceMotion\";\nimport ComplementaryFilter from \"./ComplementaryFilter\";\nimport {CHROME_VERSION} from \"../consts\";\n\nconst K_FILTER = 0.98;\nconst PREDICTION_TIME_S = 0.040;\n\nexport default class FusionPoseSensor extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.deviceMotion = new DeviceMotion();\n\n\t\tthis.accelerometer = new MathUtil.Vector3();\n\t\tthis.gyroscope = new MathUtil.Vector3();\n\n\t\tthis._onDeviceMotionChange = this._onDeviceMotionChange.bind(this);\n\t\tthis._onScreenOrientationChange = this._onScreenOrientationChange.bind(this);\n\n\t\tthis.filter = new ComplementaryFilter(K_FILTER);\n\t\tthis.posePredictor = new PosePredictor(PREDICTION_TIME_S);\n\n\t\tthis.filterToWorldQ = new MathUtil.Quaternion();\n\n\t\tthis.isFirefoxAndroid = Util.isFirefoxAndroid();\n\t\tthis.isIOS = Util.isIOS();\n\n\t\t// Ref https://github.com/immersive-web/cardboard-vr-display/issues/18\n\t\tthis.isChromeUsingDegrees = CHROME_VERSION >= 66;\n\n\t\tthis._isEnabled = false;\n\n\t\t// Set the filter to world transform, depending on OS.\n\t\tif (this.isIOS) {\n\t\t\tthis.filterToWorldQ.setFromAxisAngle(new MathUtil.Vector3(1, 0, 0), Math.PI / 2);\n\t\t} else {\n\t\t\tthis.filterToWorldQ.setFromAxisAngle(new MathUtil.Vector3(1, 0, 0), -Math.PI / 2);\n\t\t}\n\n\t\tthis.inverseWorldToScreenQ = new MathUtil.Quaternion();\n\t\tthis.worldToScreenQ = new MathUtil.Quaternion();\n\t\tthis.originalPoseAdjustQ = new MathUtil.Quaternion();\n\t\tthis.originalPoseAdjustQ.setFromAxisAngle(new MathUtil.Vector3(0, 0, 1),\n\t\t\t-window.orientation * Math.PI / 180);\n\n\t\tthis._setScreenTransform();\n\t\t// Adjust this filter for being in landscape mode.\n\t\tif (Util.isLandscapeMode()) {\n\t\t\tthis.filterToWorldQ.multiply(this.inverseWorldToScreenQ);\n\t\t}\n\n\t\t// Keep track of a reset transform for resetSensor.\n\t\tthis.resetQ = new MathUtil.Quaternion();\n\n\t\tthis.deviceMotion.on(\"devicemotion\", this._onDeviceMotionChange);\n\t\tthis.enable();\n\t}\n\tenable() {\n\t\tif (this.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.deviceMotion.enable();\n\t\tthis._isEnabled = true;\n\t\twindow.addEventListener(\"orientationchange\", this._onScreenOrientationChange);\n\t}\n\tdisable() {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.deviceMotion.disable();\n\t\tthis._isEnabled = false;\n\t\twindow.removeEventListener(\"orientationchange\", this._onScreenOrientationChange);\n\t}\n\tisEnabled() {\n\t\treturn this._isEnabled;\n\t}\n\tdestroy() {\n\t\tthis.disable();\n\t\tthis.deviceMotion = null;\n\t}\n\t_triggerChange() {\n\t\tconst orientation = this.getOrientation();\n\n\t\t// if orientation is not prepared. don't trigger change event\n\t\tif (!orientation) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._prevOrientation) {\n\t\t\tthis._prevOrientation = orientation;\n\t\t\treturn;\n\t\t}\n\n\t\tif (quat.equals(this._prevOrientation, orientation)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.trigger(\"change\", {quaternion: orientation});\n\t}\n\tgetOrientation() {\n\t\tlet orientation;\n\n\t\t// Hack around using deviceorientation instead of devicemotion\n\t\tif (this.deviceMotion.isWithoutDeviceMotion && this._deviceOrientationQ) {\n\t\t\tthis.deviceOrientationFixQ = this.deviceOrientationFixQ || (function() {\n\t\t\t\tconst y =\n\t\t\t\t\tnew MathUtil.Quaternion().setFromAxisAngle(\n\t\t\t\t\t\tnew MathUtil.Vector3(0, 1, 0), -this._alpha);\n\n\t\t\t\treturn y;\n\t\t\t}).bind(this)();\n\n\t\t\torientation = this._deviceOrientationQ;\n\t\t\tconst out = new MathUtil.Quaternion();\n\n\t\t\tout.copy(orientation);\n\t\t\tout.multiply(this.filterToWorldQ);\n\t\t\tout.multiply(this.resetQ);\n\t\t\tout.multiply(this.worldToScreenQ);\n\t\t\tout.multiplyQuaternions(this.deviceOrientationFixQ, out);\n\n\t\t\t// return quaternion as glmatrix quaternion object\n\t\t\tconst out_ = quat.fromValues(\n\t\t\t\tout.x,\n\t\t\t\tout.y,\n\t\t\t\tout.z,\n\t\t\t\tout.w\n\t\t\t);\n\n\t\t\treturn quat.normalize(out_, out_);\n\t\t} else {\n\t\t\t// Convert from filter space to the the same system used by the\n\t\t\t// deviceorientation event.\n\t\t\torientation = this.filter.getOrientation();\n\n\t\t\tif (!orientation) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst out = this._convertFusionToPredicted(orientation);\n\n\t\t\t// return quaternion as glmatrix quaternion object\n\t\t\tconst out_ = quat.fromValues(\n\t\t\t\tout.x,\n\t\t\t\tout.y,\n\t\t\t\tout.z,\n\t\t\t\tout.w\n\t\t\t);\n\n\t\t\treturn quat.normalize(out_, out_);\n\t\t}\n\t}\n\t_convertFusionToPredicted(orientation) {\n\t\t// Predict orientation.\n\t\tthis.predictedQ =\n\t\t\tthis.posePredictor.getPrediction(orientation, this.gyroscope, this.previousTimestampS);\n\n\t\t// Convert to THREE coordinate system: -Z forward, Y up, X right.\n\t\tconst out = new MathUtil.Quaternion();\n\n\t\tout.copy(this.filterToWorldQ);\n\t\tout.multiply(this.resetQ);\n\t\tout.multiply(this.predictedQ);\n\t\tout.multiply(this.worldToScreenQ);\n\n\t\treturn out;\n\t}\n\t_onDeviceMotionChange({inputEvent}) {\n\t\tconst deviceorientation = inputEvent.deviceorientation;\n\t\tconst deviceMotion = inputEvent;\n\t\tconst accGravity = deviceMotion.accelerationIncludingGravity;\n\t\tconst rotRate = deviceMotion.adjustedRotationRate || deviceMotion.rotationRate;\n\t\tlet timestampS = deviceMotion.timeStamp / 1000;\n\n\t\tif (deviceorientation) {\n\t\t\tif (!this._alpha) {\n\t\t\t\tthis._alpha = deviceorientation.alpha;\n\t\t\t}\n\t\t\tthis._deviceOrientationQ = this._deviceOrientationQ || new MathUtil.Quaternion();\n\t\t\tthis._deviceOrientationQ.setFromEulerYXZ(\n\t\t\t\tdeviceorientation.beta,\n\t\t\t\tdeviceorientation.alpha,\n\t\t\t\tdeviceorientation.gamma\n\t\t\t);\n\n\t\t\tthis._triggerChange();\n\t\t} else {\n\t\t\t// Firefox Android timeStamp returns one thousandth of a millisecond.\n\t\t\tif (this.isFirefoxAndroid) {\n\t\t\t\ttimestampS /= 1000;\n\t\t\t}\n\n\t\t\tthis.accelerometer.set(-accGravity.x, -accGravity.y, -accGravity.z);\n\t\t\tthis.gyroscope.set(rotRate.alpha, rotRate.beta, rotRate.gamma);\n\n\t\t\t// Browsers on iOS, Firefox/Android, and Chrome m66/Android `rotationRate`\n\t\t\t// is reported in degrees, so we first convert to radians.\n\t\t\tif (this.isIOS || this.isFirefoxAndroid || this.isChromeUsingDegrees) {\n\t\t\t\tthis.gyroscope.multiplyScalar(Math.PI / 180);\n\t\t\t}\n\n\t\t\tthis.filter.addAccelMeasurement(this.accelerometer, timestampS);\n\t\t\tthis.filter.addGyroMeasurement(this.gyroscope, timestampS);\n\n\t\t\tthis._triggerChange();\n\n\t\t\tthis.previousTimestampS = timestampS;\n\t\t}\n\t}\n\t_onScreenOrientationChange(screenOrientation) {\n\t\tthis._setScreenTransform(window.orientation);\n\t}\n\t_setScreenTransform() {\n\t\tthis.worldToScreenQ.set(0, 0, 0, 1);\n\t\tswitch (window.orientation) {\n\t\t\tcase 0:\n\t\t\t\tbreak;\n\t\t\tcase 90:\n\t\t\t\tthis.worldToScreenQ.setFromAxisAngle(new MathUtil.Vector3(0, 0, 1), 90 / -180 * Math.PI);\n\t\t\t\tbreak;\n\t\t\tcase -90:\n\t\t\t\tthis.worldToScreenQ.setFromAxisAngle(new MathUtil.Vector3(0, 0, 1), -90 / -180 * Math.PI);\n\t\t\t\tbreak;\n\t\t\tcase 180:\n\t\t\t\tthis.worldToScreenQ.setFromAxisAngle(new MathUtil.Vector3(0, 0, 1), 180 / -180 * Math.PI);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.inverseWorldToScreenQ.copy(this.worldToScreenQ);\n\t\tthis.inverseWorldToScreenQ.inverse();\n\t}\n}\n","import Component from \"@egjs/component\";\nimport {toAxis} from \"../utils\";\nimport FusionPoseSensor from \"./FusionPoseSensor\";\nimport {\n\tutil,\n\tquat,\n\tROTATE_CONSTANT,\n} from \"../../utils/math-util\";\n\nfunction getDeltaYaw(prvQ, curQ) {\n\tconst yawDeltaByYaw = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_YAW);\n\tconst yawDeltaByRoll = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_ROLL) *\n\t\tMath.sin(util.extractPitchFromQuat(curQ));\n\n\treturn yawDeltaByRoll + yawDeltaByYaw;\n}\n\nfunction getDeltaPitch(prvQ, curQ) {\n\tconst pitchDelta = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.PITCH_DELTA);\n\n\treturn pitchDelta;\n}\n\nexport default class TiltMotionInput extends Component {\n\tconstructor(el, options) {\n\t\tsuper();\n\t\tthis.element = el;\n\n\t\tthis._prevQuaternion = null;\n\t\tthis._quaternion = null;\n\n\t\tthis.fusionPoseSensor = null;\n\n\t\tthis.options = Object.assign({\n\t\t\tscale: 1,\n\t\t\tthreshold: 0,\n\t\t}, options);\n\n\t\tthis._onPoseChange = this._onPoseChange.bind(this);\n\t}\n\tmapAxes(axes) {\n\t\tthis.axes = axes;\n\t}\n\tconnect(observer) {\n\t\tif (this.observer) {\n\t\t\treturn this;\n\t\t}\n\t\tthis.observer = observer;\n\t\tthis.fusionPoseSensor = new FusionPoseSensor();\n\t\tthis.fusionPoseSensor.enable();\n\t\tthis._attachEvent();\n\t\treturn this;\n\t}\n\tdisconnect() {\n\t\tif (!this.observer) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._dettachEvent();\n\t\tthis.fusionPoseSensor.disable();\n\t\tthis.fusionPoseSensor.destroy();\n\t\tthis.fusionPoseSensor = null;\n\t\tthis.observer = null;\n\t\treturn this;\n\t}\n\tdestroy() {\n\t\tthis.disconnect();\n\t\tthis.element = null;\n\t\tthis.options = null;\n\t\tthis.axes = null;\n\t\tthis._prevQuaternion = null;\n\t\tthis._quaternion = null;\n\t}\n\t_onPoseChange(event) {\n\t\tif (!this._prevQuaternion) {\n\t\t\tthis._prevQuaternion = quat.clone(event.quaternion);\n\t\t\tthis._quaternion = quat.clone(event.quaternion);\n\t\t\treturn;\n\t\t}\n\n\t\tquat.copy(this._prevQuaternion, this._quaternion);\n\t\tquat.copy(this._quaternion, event.quaternion);\n\n\t\tthis.observer.change(this, event, toAxis(this.axes, [\n\t\t\tgetDeltaYaw(this._prevQuaternion, this._quaternion),\n\t\t\tgetDeltaPitch(this._prevQuaternion, this._quaternion)\n\t\t]));\n\t}\n\t_attachEvent() {\n\t\tthis.fusionPoseSensor.on(\"change\", this._onPoseChange);\n\t}\n\t_dettachEvent() {\n\t\tthis.fusionPoseSensor.off(\"change\", this._onPoseChange);\n\t}\n}\n\n","export function toAxis(source, offset) {\n\treturn offset.reduce((acc, v, i) => {\n\t\tif (source[i]) {\n\t\t\tacc[source[i]] = v;\n\t\t}\n\t\treturn acc;\n\t}, {});\n}\n","import {window} from \"../utils/browser\";\nimport {glMatrix} from \"../utils/math-util\";\n\n// Singleton\nlet screenRotationAngleInst = null;\nlet refCount = 0;\n\nexport default class ScreenRotationAngle {\n\tconstructor() {\n\t\trefCount++;\n\n\t\tif (screenRotationAngleInst) {\n\t\t\treturn screenRotationAngleInst;\n\t\t}\n\t\t/* eslint-disable */\n\t\tscreenRotationAngleInst = this;\n\t\t/* eslint-enable */\n\t\tthis._onDeviceOrientation = this._onDeviceOrientation.bind(this);\n\t\tthis._onOrientationChange = this._onOrientationChange.bind(this);\n\n\t\tthis._spinR = 0;\n\n\t\tthis._screenOrientationAngle = 0;\n\t\twindow.addEventListener(\"deviceorientation\", this._onDeviceOrientation);\n\t\twindow.addEventListener(\"orientationchange\", this._onOrientationChange);\n\t}\n\n\t_onDeviceOrientation(e) {\n\t\tif (e.beta === null || e.gamma === null) {\n\t\t\t// (Chrome) deviceorientation is fired with invalid information {alpha=null, beta=null, ...} despite of not dispatching it. We skip it.\n\t\t\treturn;\n\t\t}\n\n\t\t// Radian\n\t\tconst betaR = glMatrix.toRadian(e.beta);\n\t\tconst gammaR = glMatrix.toRadian(e.gamma);\n\n\t\t/* spinR range = [-180, 180], left side: 0 ~ -180(deg), right side: 0 ~ 180(deg) */\n\t\tthis._spinR = Math.atan2(Math.cos(betaR) * Math.sin(gammaR), Math.sin(betaR));\n\t}\n\n\t_onOrientationChange(e) {\n\t\tif (window.screen && window.screen.orientation && window.screen.orientation.angle !== undefined) {\n\t\t\tthis._screenOrientationAngle = screen.orientation.angle;\n\t\t} else if (window.orientation !== undefined) {\n\t\t\t/* iOS */\n\t\t\tthis._screenOrientationAngle = window.orientation >= 0 ?\n\t\t\t\twindow.orientation : 360 + window.orientation;\n\t\t}\n\t}\n\n\tgetRadian() {\n\t\t// Join with screen orientation\n\t\t// this._testVal = this._spinR + \", \" + this._screenOrientationAngle + \", \" + window.orientation;\n\t\treturn this._spinR + glMatrix.toRadian(this._screenOrientationAngle);\n\t}\n\n\tunref() {\n\t\tif (--refCount > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.removeEventListener(\"deviceorientation\", this._onDeviceOrientation);\n\t\twindow.removeEventListener(\"orientationchange\", this._onOrientationChange);\n\n\t\tthis._spinR = 0;\n\t\tthis._screenOrientationAngle = 0;\n\t\t/* eslint-disable */\n\t\tscreenRotationAngleInst = null;\n\t\t/* eslint-enable */\n\t\trefCount = 0;\n\t}\n}\n\n","import Axes, {PanInput} from \"@egjs/axes\";\nimport ScreenRotationAngle from \"../ScreenRotationAngle\";\n\n/**\n * RotationPanInput is extension of PanInput to compensate coordinates by screen rotation angle.\n *\n * The reason for using this function is that in VR mode,\n * the roll angle is adjusted in the direction opposite to the screen rotation angle.\n *\n * Therefore, the angle that the user touches and moves does not match the angle at which the actual object should move.\n * @extends PanInput\n */\nexport default class RotationPanInput extends PanInput {\n\t/**\n\t * Constructor\n\t *\n\t * @private\n\t * @param {HTMLElement} el target element\n\t * @param {Object} [options] The option object\n\t * @param {Boolean} [options.useRotation]  Whether to use rotation(or VR)\n\t */\n\tconstructor(el, options) {\n\t\tsuper(el, options);\n\n\t\tthis._useRotation = false;\n\t\tthis._screenRotationAngle = null;\n\n\t\tthis.setUseRotation(!!(options && options.useRotation));\n\n\t\tthis._userDirection = Axes.DIRECTION_ALL;\n\t}\n\n\tsetUseRotation(useRotation) {\n\t\tthis._useRotation = useRotation;\n\n\t\tif (this._screenRotationAngle) {\n\t\t\tthis._screenRotationAngle.unref();\n\t\t\tthis._screenRotationAngle = null;\n\t\t}\n\n\t\tif (this._useRotation) {\n\t\t\tthis._screenRotationAngle = new ScreenRotationAngle();\n\t\t}\n\t}\n\n\tconnect(observer) {\n\t\t// User intetened direction\n\t\tthis._userDirection = this._direction;\n\n\t\t// In VR Mode, Use ALL direction if direction is not none\n\t\t// Because horizontal and vertical is changed dynamically by screen rotation.\n\t\t// this._direction is used to initialize hammerjs\n\t\tif (this._useRotation && (this._direction & Axes.DIRECTION_ALL)) {\n\t\t\tthis._direction = Axes.DIRECTION_ALL;\n\t\t}\n\n\t\tsuper.connect(observer);\n\t}\n\n\tgetOffset(properties, useDirection) {\n\t\tif (this._useRotation === false) {\n\t\t\treturn super.getOffset(properties, useDirection);\n\t\t}\n\n\t\tconst offset = super.getOffset(properties, [true, true]);\n\t\tconst newOffset = [0, 0];\n\t\tconst theta = this._screenRotationAngle.getRadian();\n\t\tconst cosTheta = Math.cos(theta);\n\t\tconst sinTheta = Math.sin(theta);\n\n\t\tnewOffset[0] = offset[0] * cosTheta - offset[1] * sinTheta;\n\t\tnewOffset[1] = offset[1] * cosTheta + offset[0] * sinTheta;\n\n\t\t// Use only user allowed direction.\n\t\tif (!(this._userDirection & Axes.DIRECTION_HORIZONTAL)) {\n\t\t\tnewOffset[0] = 0;\n\t\t} else if (!(this._userDirection & Axes.DIRECTION_VERTICAL)) {\n\t\t\tnewOffset[1] = 0;\n\t\t}\n\n\t\treturn newOffset;\n\t}\n\n\tdestroy() {\n\t\tif (this._useRotation) {\n\t\t\tthis._screenRotationAngle && this._screenRotationAngle.unref();\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n}\n\n/**\n * Override getDirectionByAngle to return DIRECTION_ALL\n * Ref: https://github.com/naver/egjs-axes/issues/99\n *\n * But we obey axes's rule. If axes's rule is problem, let's apply following code.\n */\n// PanInput.getDirectionByAngle = function (angle, thresholdAngle) {\n// \treturn DIRECTION_ALL;\n// };\n","import Component from \"@egjs/component\";\nimport FusionPoseSensor from \"./input/FusionPoseSensor\";\nimport ScreenRotationAngle from \"./ScreenRotationAngle\";\nimport {vec3, glMatrix, quat} from \"../utils/math-util\";\n\nconst ORIGIN_VECTOR = vec3.fromValues(0, 0, 0);\nconst X_AXIS_VECTOR = vec3.fromValues(1, 0, 0);\nconst Y_AXIS_VECTOR = vec3.fromValues(0, 1, 0);\n\nexport default class DeviceQuaternion extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._screenRotationAngle = new ScreenRotationAngle();\n\t\tthis._fusionPoseSensor = new FusionPoseSensor();\n\t\tthis._quaternion = quat.create();\n\n\t\tthis._fusionPoseSensor.enable();\n\t\tthis._fusionPoseSensor.on(\"change\", e => {\n\t\t\tthis._quaternion = e.quaternion;\n\n\t\t\tthis.trigger(\"change\", {isTrusted: true});\n\t\t});\n\t}\n\n\tgetCombinedQuaternion(yaw, pitch) {\n\t\tconst deviceR = this._screenRotationAngle.getRadian();\n\n\t\t// rotate x-axis around z-axis about screen rotation angle.\n\t\tconst pitchAxis = vec3.rotateZ(vec3.create(), X_AXIS_VECTOR, ORIGIN_VECTOR, deviceR);\n\t\tconst yawQ = quat.setAxisAngle(quat.create(), Y_AXIS_VECTOR, glMatrix.toRadian(-yaw));\n\t\t// rotate quaternion around new x-axis about pitch angle.\n\t\tconst pitchQ = quat.setAxisAngle(quat.create(), pitchAxis, glMatrix.toRadian(-pitch));\n\t\tconst conj = quat.conjugate(quat.create(), this._quaternion);\n\t\t// Multiply pitch quaternion -> device quaternion -> yaw quaternion\n\t\tconst outQ = quat.multiply(quat.create(), pitchQ, conj);\n\n\t\tquat.multiply(outQ, outQ, yawQ);\n\t\treturn outQ;\n\t}\n\n\tdestroy() {\n\t\t// detach all event handler\n\t\tthis.off();\n\n\t\tif (this._fusionPoseSensor) {\n\t\t\tthis._fusionPoseSensor.off();\n\t\t\tthis._fusionPoseSensor.destroy();\n\t\t\tthis._fusionPoseSensor = null;\n\t\t}\n\n\t\tif (this._screenRotationAngle) {\n\t\t\tthis._screenRotationAngle.unref();\n\t\t\tthis._screenRotationAngle = null;\n\t\t}\n\t}\n}\n","const VERSION = \"#__VERSION__#\";\n\nexport {\n\tVERSION\n};\n","import Component from \"@egjs/component\";\nimport Axes, {PinchInput, MoveKeyInput, WheelInput} from \"@egjs/axes\";\nimport {getComputedStyle, SUPPORT_TOUCH, SUPPORT_DEVICEMOTION} from \"../utils/browserFeature\";\nimport TiltMotionInput from \"./input/TiltMotionInput\";\nimport RotationPanInput from \"./input/RotationPanInput\";\nimport DeviceQuaternion from \"./DeviceQuaternion\";\nimport {\n\tvec2,\n} from \"../utils/math-util\";\nimport {\n\tGYRO_MODE,\n\tTOUCH_DIRECTION_YAW,\n\tTOUCH_DIRECTION_PITCH,\n\tTOUCH_DIRECTION_ALL,\n\tMC_DECELERATION,\n\tMC_MAXIMUM_DURATION,\n\tMC_BIND_SCALE,\n\tMAX_FIELD_OF_VIEW,\n\tPAN_SCALE,\n\tYAW_RANGE_HALF,\n\tPITCH_RANGE_HALF,\n\tCIRCULAR_PITCH_RANGE_HALF,\n\tCONTROL_MODE_VR,\n\tCONTROL_MODE_YAWPITCH,\n\tTOUCH_DIRECTION_NONE,\n} from \"./consts\";\nimport {VERSION} from \"../version\";\n\nconst DEFAULT_YAW_RANGE = [-YAW_RANGE_HALF, YAW_RANGE_HALF];\nconst DEFAULT_PITCH_RANGE = [-PITCH_RANGE_HALF, PITCH_RANGE_HALF];\nconst CIRCULAR_PITCH_RANGE = [-CIRCULAR_PITCH_RANGE_HALF, CIRCULAR_PITCH_RANGE_HALF];\n\n/**\n * A module used to provide coordinate based on yaw/pitch orientation. This module receives user touch action, keyboard, mouse and device orientation(if it exists) as input, then combines them and converts it to yaw/pitch coordinates.\n *\n * @alias eg.YawPitchControl\n * @extends eg.Component\n *\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n */\nexport default class YawPitchControl extends Component {\n\tstatic VERSION = VERSION;\n\t// Expose DeviceOrientationControls sub module for test purpose\n\tstatic CONTROL_MODE_VR = CONTROL_MODE_VR;\n\tstatic CONTROL_MODE_YAWPITCH = CONTROL_MODE_YAWPITCH;\n\tstatic TOUCH_DIRECTION_ALL = TOUCH_DIRECTION_ALL;\n\tstatic TOUCH_DIRECTION_YAW = TOUCH_DIRECTION_YAW;\n\tstatic TOUCH_DIRECTION_PITCH = TOUCH_DIRECTION_PITCH;\n\tstatic TOUCH_DIRECTION_NONE = TOUCH_DIRECTION_NONE;\n\t/**\n\t * @param {Object} options The option object of the eg.YawPitch module\n\t * @param {Element}[options.element=null] element A base element for the eg.YawPitch module\n\t * @param {Number} [options.yaw=0] initial yaw (degree)\n\t * @param {Number} [options.pitch=0] initial pitch (degree)\n\t * @param {Number} [options.fov=65] initial field of view (degree)\n\t * @param {Boolean} [optiosn.showPolePoint=true] Indicates whether pole is shown\n\t * @param {Boolean} [options.useZoom=true] Indicates whether zoom is available\n\t * @param {Boolean} [options.useKeyboard=true] Indicates whether keyboard is enabled\n\t * @param {String} [config.gyroMode=yawPitch] Enables control through device motion.\n\t * @param {Number} [options.touchDirection=TOUCH_DIRECTION_ALL] Direction of the touch movement (TOUCH_DIRECTION_ALL: all,  TOUCH_DIRECTION_YAW: horizontal, TOUCH_DIRECTION_PITCH: vertical, TOUCH_DIRECTION_NONE: no move)\n\t * @param {Array} [options.yawRange=[-180, 180] Range of visible yaw\n\t * @param {Array} [options.pitchRange=[-90, 90] Range of visible pitch\n\t * @param {Array} [options.fovRange=[30, 110] Range of FOV\n\t * @param {Number} [options.aspectRatio=1] Aspect Ratio\n\t */\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tconst opt = Object.assign({\n\t\t\telement: null,\n\t\t\tyaw: 0,\n\t\t\tpitch: 0,\n\t\t\tfov: 65,\n\t\t\tshowPolePoint: false,\n\t\t\tuseZoom: true,\n\t\t\tuseKeyboard: true,\n\t\t\tgyroMode: GYRO_MODE.YAWPITCH,\n\t\t\ttouchDirection: TOUCH_DIRECTION_ALL,\n\t\t\tyawRange: DEFAULT_YAW_RANGE,\n\t\t\tpitchRange: DEFAULT_PITCH_RANGE,\n\t\t\tfovRange: [30, 110],\n\t\t\taspectRatio: 1, /* TODO: Need Mandatory? */\n\t\t}, options);\n\n\t\tthis._element = opt.element;\n\t\tthis._initialFov = opt.fov;\n\t\tthis._enabled = false;\n\t\tthis._isAnimating = false;\n\t\tthis._deviceQuaternion = null;\n\n\t\tthis._initAxes(opt);\n\t\tthis.option(opt);\n\t}\n\n\t_initAxes(opt) {\n\t\tconst yRange = this._updateYawRange(opt.yawRange, opt.fov, opt.aspectRatio);\n\t\tconst pRange = this._updatePitchRange(opt.pitchRange, opt.fov, opt.showPolePoint);\n\t\tconst useRotation = opt.gyroMode === GYRO_MODE.VR;\n\n\t\tthis.axesPanInput = new RotationPanInput(this._element, {useRotation});\n\t\tthis.axesWheelInput = new WheelInput(this._element, {scale: -4});\n\t\tthis.axesTiltMotionInput = null;\n\t\tthis.axesPinchInput = SUPPORT_TOUCH ? new PinchInput(this._element, {scale: -1}) : null;\n\t\tthis.axesMoveKeyInput = new MoveKeyInput(this._element, {scale: [-6, 6]});\n\n\t\tthis.axes = new Axes({\n\t\t\tyaw: {\n\t\t\t\trange: yRange,\n\t\t\t\tcircular: YawPitchControl.isCircular(yRange),\n\t\t\t\tbounce: [0, 0]\n\t\t\t},\n\t\t\tpitch: {\n\t\t\t\trange: pRange,\n\t\t\t\tcircular: YawPitchControl.isCircular(pRange),\n\t\t\t\tbounce: [0, 0]\n\t\t\t},\n\t\t\tfov: {\n\t\t\t\trange: opt.fovRange,\n\t\t\t\tcircular: [false, false],\n\t\t\t\tbounce: [0, 0]\n\t\t\t},\n\t\t}, {\n\t\t\tdeceleration: MC_DECELERATION,\n\t\t\tmaximumDuration: MC_MAXIMUM_DURATION,\n\t\t}, {\n\t\t\tyaw: opt.yaw,\n\t\t\tpitch: opt.pitch,\n\t\t\tfov: opt.fov\n\t\t}).on({\n\t\t\thold: evt => {\n\t\t\t\t// Restore maximumDuration not to be spin too mush.\n\t\t\t\tthis.axes.options.maximumDuration = MC_MAXIMUM_DURATION;\n\n\t\t\t\tthis.trigger(\"hold\", {isTrusted: evt.isTrusted});\n\t\t\t},\n\t\t\tchange: evt => {\n\t\t\t\tif (evt.delta.fov !== 0) {\n\t\t\t\t\tthis._updateControlScale(evt);\n\t\t\t\t\tthis.updatePanScale();\n\t\t\t\t}\n\t\t\t\tthis._triggerChange(evt);\n\t\t\t},\n\t\t\trelease: evt => {\n\t\t\t\tthis._triggerChange(evt);\n\t\t\t},\n\t\t\tanimationStart: evt => {\n\t\t\t},\n\t\t\tanimationEnd: evt => {\n\t\t\t\tthis.trigger(\"animationEnd\", {isTrusted: evt.isTrusted});\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Update Pan Scale\n\t *\n\t * Scale(Sensitivity) values of panning is related with fov and height.\n\t * If at least one of them is changed, this function need to be called.\n\t * @param {*} param\n\t */\n\tupdatePanScale(param = {}) {\n\t\tconst fov = this.axes.get().fov;\n\t\tconst areaHeight = param.height || parseInt(getComputedStyle(this._element).height, 10);\n\t\tconst scale = MC_BIND_SCALE[0] * fov / this._initialFov * PAN_SCALE / areaHeight;\n\n\t\tthis.axesPanInput.options.scale = [scale, scale];\n\t\tthis.axes.options.deceleration = MC_DECELERATION * fov / MAX_FIELD_OF_VIEW;\n\n\t\treturn this;\n\t}\n\n\t/*\n\t * Override component's option method\n\t * to call method for updating values which is affected by option change.\n\t *\n\t * @param {*} args\n\t */\n\toption(...args) {\n\t\tconst argLen = args.length;\n\n\t\t// Getter\n\t\tif (argLen === 0) {\n\t\t\treturn this._getOptions();\n\t\t} else if (argLen === 1 && typeof args[0] === \"string\") {\n\t\t\treturn this._getOptions(args[0]);\n\t\t}\n\n\t\t// Setter\n\t\tconst beforeOptions = Object.assign({}, this.options);\n\t\tlet newOptions = {};\n\t\tlet changedKeyList = []; // TODO: if value is not changed, then do not push on changedKeyList.\n\n\t\tif (argLen === 1) {\n\t\t\tchangedKeyList = Object.keys(args[0]);\n\t\t\tnewOptions = Object.assign({}, args[0]);\n\t\t} else if (argLen >= 2) {\n\t\t\tchangedKeyList.push(args[0]);\n\t\t\tnewOptions[args[0]] = args[1];\n\t\t}\n\n\t\tthis._setOptions(this._getValidatedOptions(newOptions));\n\t\tthis._applyOptions(changedKeyList, beforeOptions);\n\t\treturn this;\n\t}\n\n\t_getValidatedOptions(newOptions) {\n\t\tif (newOptions.yawRange) {\n\t\t\tnewOptions.yawRange =\n\t\t\t\tthis._getValidYawRange(newOptions.yawRange, newOptions.fov, newOptions.aspectRatio);\n\t\t}\n\t\tif (newOptions.pitchRange) {\n\t\t\tnewOptions.pitchRange = this._getValidPitchRange(newOptions.pitchRange, newOptions.fov);\n\t\t}\n\t\treturn newOptions;\n\t}\n\n\t_getOptions(key) {\n\t\tlet value;\n\n\t\tif (typeof key === \"string\") {\n\t\t\tvalue = this.options[key];\n\t\t} else if (arguments.length === 0) {\n\t\t\tvalue = this.options;\n\t\t}\n\t\treturn value;\n\t}\n\n\t_setOptions(options) {\n\t\tfor (const key in options) {\n\t\t\tthis.options[key] = options[key];\n\t\t}\n\t}\n\n\t_applyOptions(keys, prevOptions) {\n\t\t// If one of below is changed, call updateControlScale()\n\t\tif (keys.some(key =>\n\t\t\tkey === \"showPolePoint\" || key === \"fov\" || key === \"aspectRatio\" ||\n\t\t\tkey === \"yawRange\" || key === \"pitchRange\"\n\t\t)) {\n\t\t\tthis._updateControlScale();\n\n\t\t\t// If fov is changed, update pan scale\n\t\t\tif (keys.indexOf(\"fov\") >= 0) {\n\t\t\t\tthis.updatePanScale();\n\t\t\t}\n\t\t}\n\n\t\tif (keys.some(key => key === \"fovRange\")) {\n\t\t\t/**\n\t\t\t * Temporary Fix Code\n\t\t\t * Changed float number as toFixed(5) format for temporary.\n\t\t\t *\n\t\t\t * TODO: it should not use toFixed(5) after axes.js is fixed.\n\t\t\t */\n\t\t\tconst fovRange = this.options.fovRange.map(v => +v.toFixed(5));\n\t\t\tconst prevFov = this.axes.get().fov;\n\t\t\tlet nextFov = this.axes.get().fov;\n\n\t\t\tvec2.copy(this.axes.axis.fov.range, fovRange);\n\n\t\t\tif (nextFov < fovRange[0]) {\n\t\t\t\tnextFov = fovRange[0];\n\t\t\t} else if (prevFov > fovRange[1]) {\n\t\t\t\tnextFov = fovRange[1];\n\t\t\t}\n\n\t\t\tif (prevFov !== nextFov) {\n\t\t\t\tthis.axes.setTo({\n\t\t\t\t\tfov: nextFov\n\t\t\t\t}, 0);\n\t\t\t\tthis._updateControlScale();\n\t\t\t\tthis.updatePanScale();\n\t\t\t}\n\t\t}\n\n\t\tif (keys.some(key => key === \"gyroMode\") && SUPPORT_DEVICEMOTION) {\n\t\t\tconst isVR = this.options.gyroMode === GYRO_MODE.VR;\n\t\t\tconst isYawPitch = this.options.gyroMode === GYRO_MODE.YAWPITCH;\n\n\t\t\t// Disconnect first\n\t\t\tif (this.axesTiltMotionInput) {\n\t\t\t\tthis.axes.disconnect(this.axesTiltMotionInput);\n\t\t\t\tthis.axesTiltMotionInput.destroy();\n\t\t\t\tthis.axesTiltMotionInput = null;\n\t\t\t}\n\n\t\t\tif (this._deviceQuaternion) {\n\t\t\t\tthis._deviceQuaternion.destroy();\n\t\t\t\tthis._deviceQuaternion = null;\n\t\t\t}\n\n\t\t\tif (isVR) {\n\t\t\t\tthis._initDeviceQuaternion();\n\t\t\t} else if (isYawPitch) {\n\t\t\t\tthis.axesTiltMotionInput = new TiltMotionInput(this._element);\n\t\t\t\tthis.axes.connect([\"yaw\", \"pitch\"], this.axesTiltMotionInput);\n\t\t\t}\n\n\t\t\tthis.axesPanInput.setUseRotation(isVR);\n\t\t}\n\n\t\tif (keys.some(key => key === \"useKeyboard\")) {\n\t\t\tconst useKeyboard = this.options.useKeyboard;\n\n\t\t\tif (useKeyboard) {\n\t\t\t\tthis.axes.connect([\"yaw\", \"pitch\"], this.axesMoveKeyInput);\n\t\t\t} else {\n\t\t\t\tthis.axes.disconnect(this.axesMoveKeyInput);\n\t\t\t}\n\t\t}\n\n\t\tif (keys.some(key => key === \"useZoom\")) {\n\t\t\tconst useZoom = this.options.useZoom;\n\n\t\t\t// Disconnect first\n\t\t\tthis.axes.disconnect(this.axesWheelInput);\n\t\t\tif (useZoom) {\n\t\t\t\tthis.axes.connect([\"fov\"], this.axesWheelInput);\n\t\t\t}\n\t\t}\n\n\t\tthis._togglePinchInputByOption(this.options.touchDirection, this.options.useZoom);\n\n\t\tif (keys.some(key => key === \"touchDirection\")) {\n\t\t\tthis._enabled && this._enableTouch(this.options.touchDirection);\n\t\t}\n\t}\n\n\t_togglePinchInputByOption(touchDirection, useZoom) {\n\t\tif (this.axesPinchInput) {\n\t\t\t// disconnect first\n\t\t\tthis.axes.disconnect(this.axesPinchInput);\n\n\t\t\t// If the touchDirection option is not ALL, pinchInput should be disconnected to make use of a native scroll.\n\t\t\tif (\n\t\t\t\tuseZoom &&\n\t\t\t\ttouchDirection === TOUCH_DIRECTION_ALL &&\n\t\t\t\t// TODO: Get rid of using private property of axes instance.\n\t\t\t\tthis.axes._inputs.indexOf(this.axesPinchInput) === -1\n\t\t\t) {\n\t\t\t\tthis.axes.connect([\"fov\"], this.axesPinchInput);\n\t\t\t}\n\t\t}\n\t}\n\n\t_enableTouch(direction) {\n\t\t// Disconnect first\n\t\tthis.axesPanInput && this.axes.disconnect(this.axesPanInput);\n\n\t\tconst yawEnabled = direction & TOUCH_DIRECTION_YAW ? \"yaw\" : null;\n\t\tconst pitchEnabled = direction & TOUCH_DIRECTION_PITCH ? \"pitch\" : null;\n\n\t\tthis.axes.connect([yawEnabled, pitchEnabled], this.axesPanInput);\n\t}\n\n\t_initDeviceQuaternion() {\n\t\tthis._deviceQuaternion = new DeviceQuaternion();\n\t\tthis._deviceQuaternion.on(\"change\", e => {\n\t\t\tthis._triggerChange(e);\n\t\t});\n\t}\n\n\t_getValidYawRange(newYawRange, newFov, newAspectRatio) {\n\t\tconst ratio = YawPitchControl.adjustAspectRatio(newAspectRatio || this.options.aspectRatio || 1);\n\t\tconst fov = newFov || this.axes.get().fov;\n\t\tconst horizontalFov = fov * ratio;\n\t\tconst isValid = newYawRange[1] - newYawRange[0] >= horizontalFov;\n\n\t\tif (isValid) {\n\t\t\treturn newYawRange;\n\t\t} else {\n\t\t\treturn this.options.yawRange || DEFAULT_YAW_RANGE;\n\t\t}\n\t}\n\n\t_getValidPitchRange(newPitchRange, newFov) {\n\t\tconst fov = newFov || this.axes.get().fov;\n\t\tconst isValid = newPitchRange[1] - newPitchRange[0] >= fov;\n\n\t\tif (isValid) {\n\t\t\treturn newPitchRange;\n\t\t} else {\n\t\t\treturn this.options.pitchRange || DEFAULT_PITCH_RANGE;\n\t\t}\n\t}\n\n\tstatic isCircular(range) {\n\t\treturn range[1] - range[0] < 360 ? [false, false] : [true, true];\n\t}\n\n\t/**\n\t * Update yaw/pitch min/max by 5 factor\n\t *\n\t * 1. showPolePoint\n\t * 2. fov\n\t * 3. yawRange\n\t * 4. pitchRange\n\t * 5. aspectRatio\n\t *\n\t * If one of above is changed, call this function\n\t */\n\t_updateControlScale(changeEvt) {\n\t\tconst opt = this.options;\n\t\tconst fov = this.axes.get().fov;\n\n\t\tconst pRange = this._updatePitchRange(opt.pitchRange, fov, opt.showPolePoint);\n\t\tconst yRange = this._updateYawRange(opt.yawRange, fov, opt.aspectRatio);\n\n\t\t// TODO: If not changed!?\n\t\tconst pos = this.axes.get();\n\t\tlet y = pos.yaw;\n\t\tlet p = pos.pitch;\n\n\t\tvec2.copy(this.axes.axis.yaw.range, yRange);\n\t\tvec2.copy(this.axes.axis.pitch.range, pRange);\n\t\tthis.axes.axis.yaw.circular = YawPitchControl.isCircular(yRange);\n\t\tthis.axes.axis.pitch.circular = YawPitchControl.isCircular(pRange);\n\n\t\t/**\n\t\t * update yaw/pitch by it's range.\n\t\t */\n\t\tif (y < yRange[0]) {\n\t\t\ty = yRange[0];\n\t\t} else if (y > yRange[1]) {\n\t\t\ty = yRange[1];\n\t\t}\n\n\t\tif (p < pRange[0]) {\n\t\t\tp = pRange[0];\n\t\t} else if (p > pRange[1]) {\n\t\t\tp = pRange[1];\n\t\t}\n\n\t\tif (changeEvt) {\n\t\t\tchangeEvt.set({\n\t\t\t\tyaw: y,\n\t\t\t\tpitch: p,\n\t\t\t});\n\t\t}\n\n\t\tthis.axes.setTo({\n\t\t\tyaw: y,\n\t\t\tpitch: p,\n\t\t}, 0);\n\n\t\treturn this;\n\t}\n\n\t_updatePitchRange(pitchRange, fov, showPolePoint) {\n\t\tif (this.options.gyroMode === GYRO_MODE.VR) {\n\t\t\t// Circular pitch on VR\n\t\t\treturn CIRCULAR_PITCH_RANGE;\n\t\t}\n\n\t\tconst verticalAngle = pitchRange[1] - pitchRange[0];\n\t\tconst halfFov = fov / 2;\n\t\tconst isPanorama = verticalAngle < 180;\n\n\t\tif (showPolePoint && !isPanorama) {\n\t\t\t// Use full pinch range\n\t\t\treturn pitchRange.map(v => +v.toFixed(5));\n\t\t}\n\n\t\t// Round value as movableCood do.\n\t\treturn [pitchRange[0] + halfFov, pitchRange[1] - halfFov].map(v => +v.toFixed(5));\n\t}\n\n\t_updateYawRange(yawRange, fov, aspectRatio) {\n\t\tif (this.options.gyroMode === GYRO_MODE.VR) {\n\t\t\treturn DEFAULT_YAW_RANGE;\n\t\t}\n\n\t\tconst horizontalAngle = yawRange[1] - yawRange[0];\n\n\t\t/**\n\t\t * Full 360 Mode\n\t\t */\n\t\tif (horizontalAngle >= 360) {\n\t\t\t// Don't limit yaw range on Full 360 mode.\n\t\t\treturn yawRange.map(v => +v.toFixed(5));\n\t\t}\n\n\t\t/**\n\t\t * Panorama mode\n\t\t */\n\t\tlet MAGIC_NUMBER = 1;\n\t\tconst ratio = YawPitchControl.adjustAspectRatio(aspectRatio);\n\t\tconst halfHorizontalFov = fov / 2 * ratio;\n\n\t\t// TODO: Magic Number Fix!\n\t\tif (horizontalAngle > 290) {\n\t\t\tMAGIC_NUMBER = 0.794;// horizontalAngle = 286;\n\t\t} else if (horizontalAngle > 125) {\n\t\t\tMAGIC_NUMBER = 0.98; // horizontalAngle *= 0.98;\n\t\t}\n\n\t\t// Round value as movableCood do.\n\t\treturn [\n\t\t\t(yawRange[0] * MAGIC_NUMBER) + halfHorizontalFov,\n\t\t\t(yawRange[1] * MAGIC_NUMBER) - halfHorizontalFov\n\t\t].map(v => +v.toFixed(5));\n\t}\n\n\t_triggerChange(evt) {\n\t\tconst pos = this.axes.get();\n\t\tconst opt = this.options;\n\t\tconst event = {\n\t\t\ttargetElement: opt.element,\n\t\t\tisTrusted: evt.isTrusted,\n\t\t};\n\n\t\tevent.yaw = pos.yaw;\n\t\tevent.pitch = pos.pitch;\n\t\tevent.fov = pos.fov;\n\n\t\tif (opt.gyroMode === GYRO_MODE.VR && this._deviceQuaternion) {\n\t\t\tevent.quaternion = this._deviceQuaternion.getCombinedQuaternion(pos.yaw, pos.pitch);\n\t\t}\n\t\tthis.trigger(\"change\", event);\n\t}\n\n\t// TODO: makes constant to be logic\n\tstatic adjustAspectRatio(input) {\n\t\tconst inputRange = [\n\t\t\t0.520, 0.540, 0.563, 0.570, 0.584, 0.590, 0.609, 0.670,\n\t\t\t0.702, 0.720, 0.760, 0.780, 0.820, 0.920, 0.970, 1.00, 1.07, 1.14, 1.19,\n\t\t\t1.25, 1.32, 1.38, 1.40, 1.43, 1.53, 1.62, 1.76, 1.77, 1.86, 1.96, 2.26,\n\t\t\t2.30, 2.60, 3.00, 5.00, 6.00\n\t\t];\n\t\tconst outputRange = [\n\t\t\t0.510, 0.540, 0.606, 0.560, 0.628, 0.630, 0.647, 0.710,\n\t\t\t0.736, 0.757, 0.780, 0.770, 0.800, 0.890, 0.975, 1.00, 1.07, 1.10, 1.15,\n\t\t\t1.18, 1.22, 1.27, 1.30, 1.33, 1.39, 1.45, 1.54, 1.55, 1.58, 1.62, 1.72,\n\t\t\t1.82, 1.92, 2.00, 2.24, 2.30\n\t\t];\n\n\t\tlet rangeIdx = -1;\n\n\t\tfor (let i = 0; i < inputRange.length - 1; i++) {\n\t\t\tif (inputRange[i] <= input && inputRange[i + 1] >= input) {\n\t\t\t\trangeIdx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (rangeIdx === -1) {\n\t\t\tif (inputRange[0] > input) {\n\t\t\t\treturn outputRange[0];\n\t\t\t} else {\n\t\t\t\treturn outputRange[outputRange[0].length - 1];\n\t\t\t}\n\t\t}\n\n\t\tconst inputA = inputRange[rangeIdx];\n\t\tconst inputB = inputRange[rangeIdx + 1];\n\t\tconst outputA = outputRange[rangeIdx];\n\t\tconst outputB = outputRange[rangeIdx + 1];\n\n\t\treturn YawPitchControl.lerp(outputA, outputB, (input - inputA) / (inputB - inputA));\n\t}\n\n\tstatic lerp(a, b, fraction) {\n\t\treturn a + fraction * (b - a);\n\t}\n\n\t/**\n\t * Enable YawPitch functionality\n\t *\n\t * @method eg.YawPitch#enable\n\t */\n\tenable() {\n\t\tif (this._enabled) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._enabled = true;\n\n\t\t// touchDirection is decided by parameter is valid string (Ref. Axes.connect)\n\t\tthis._applyOptions(Object.keys(this.options), this.options);\n\n\t\t// TODO: Is this code is needed? Check later.\n\t\tthis.updatePanScale();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Disable YawPitch functionality\n\t *\n\t * @method eg.YawPitch#disable\n\t */\n\tdisable(persistOrientation) {\n\t\tif (!this._enabled) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// TODO: Check peristOrientation is needed!\n\t\tif (!persistOrientation) {\n\t\t\tthis._resetOrientation();\n\t\t}\n\t\tthis.axes.disconnect();\n\t\tthis._enabled = false;\n\t\treturn this;\n\t}\n\n\t_resetOrientation() {\n\t\tconst opt = this.options;\n\n\t\tthis.axes.setTo({\n\t\t\tyaw: opt.yaw,\n\t\t\tpitch: opt.pitch,\n\t\t\tfov: opt.fov,\n\t\t}, 0);\n\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Set one or more of yaw, pitch, fov\n\t *\n\t * @param {Object} coordinate yaw, pitch, fov\n\t * @param {Number} duration Animation duration. if it is above 0 then it's animated.\n\t */\n\tlookAt({yaw, pitch, fov}, duration) {\n\t\tconst pos = this.axes.get();\n\n\t\tconst y = yaw === undefined ? 0 : yaw - pos.yaw;\n\t\tconst p = pitch === undefined ? 0 : pitch - pos.pitch;\n\t\tconst f = fov === undefined ? 0 : fov - pos.fov;\n\n\t\t// Allow duration of animation to have more than MC_MAXIMUM_DURATION.\n\t\tthis.axes.options.maximumDuration = Infinity;\n\n\t\tthis.axes.setBy({\n\t\t\tyaw: y,\n\t\t\tpitch: p,\n\t\t\tfov: f\n\t\t}, duration);\n\t}\n\n\tget() {\n\t\treturn this.axes.get();\n\t}\n\n\tgetYaw() {\n\t\treturn this.axes.get().yaw;\n\t}\n\n\tgetPitch() {\n\t\treturn this.axes.get().pitch;\n\t}\n\n\tgetFov() {\n\t\treturn this.axes.get().fov;\n\t}\n\n\t/**\n\t * Destroys objects\n\t */\n\tdestroy() {\n\t\tthis.axes && this.axes.destroy();\n\t\tthis.axisPanInput && this.axisPanInput.destroy();\n\t\tthis.axesWheelInput && this.axesWheelInput.destroy();\n\t\tthis.axesTiltMotionInput && this.axesTiltMotionInput.destroy();\n\t\tthis.axesDeviceOrientationInput && this.axesDeviceOrientationInput.destroy();\n\t\tthis.axesPinchInput && this.axesPinchInput.destroy();\n\t\tthis.axesMoveKeyInput && this.axesMoveKeyInput.destroy();\n\t\tthis._deviceQuaternion && this._deviceQuaternion.destroy();\n\t}\n}\n","import Component from \"@egjs/component\";\n\nconst STATUS = {\n\t\"NONE\": 0,\n\t\"LOADING\": 1,\n\t\"LOADED\": 2,\n\t\"ERROR\": 3\n};\n\nconst EVENT = {\n\t\"READYSTATECHANGE\": \"readystatechange\"\n};\n\nexport default class ImageLoader extends Component {\n\tstatic STATUS = STATUS;\n\tconstructor(image) {\n\t\t// Super constructor\n\t\tsuper();\n\n\t\tthis._image = null;\n\t\tthis._onceHandlers = [];\n\t\tthis._loadStatus = STATUS.NONE;\n\n\t\timage && this.set(image);\n\t}\n\n\tget() {\n\t\treturn new Promise((res, rej) => {\n\t\t\tif (!this._image) {\n\t\t\t\trej(\"ImageLoader: image is not defiend\");\n\t\t\t} else if (this._loadStatus === STATUS.LOADED) {\n\t\t\t\tres(this.getElement());\n\t\t\t} else if (this._loadStatus === STATUS.LOADING) {\n\t\t\t\t/* Check isMaybeLoaded() first because there may have\n\t\t\t\t\tposibilities that image already loaded before get is called.\n\t\t\t\t\tfor example calling get on external image onload callback.*/\n\t\t\t\tif (ImageLoader.isMaybeLoaded(this._image)) {\n\t\t\t\t\tthis._loadStatus = STATUS.LOADED;\n\t\t\t\t\tres(this.getElement());\n\t\t\t\t} else {\n\t\t\t\t\tthis.on(EVENT.READYSTATECHANGE, e => {\n\t\t\t\t\t\tif (e.type === STATUS.LOADED) {\n\t\t\t\t\t\t\tres(this.getElement());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trej(\"ImageLoader: failed to load images.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trej(\"ImageLoader: failed to load images\");\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @param image img element or img url or array of img element or array of img url\n\t */\n\tset(image) {\n\t\tthis._loadStatus = STATUS.LOADING;\n\n\t\tthis._image = ImageLoader.createElement(image);\n\n\t\tif (ImageLoader.isMaybeLoaded(this._image)) {\n\t\t\tthis._loadStatus = STATUS.LOADED;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onceLoaded(\n\t\t\tthis._image,\n\t\t\t() => {\n\t\t\t\tthis._loadStatus = STATUS.LOADED;\n\t\t\t\tthis.trigger(EVENT.READYSTATECHANGE, {\n\t\t\t\t\ttype: STATUS.LOADED\n\t\t\t\t});\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis._loadStatus = STATUS.ERROR;\n\t\t\t\tthis.trigger(EVENT.READYSTATECHANGE, {\n\t\t\t\t\ttype: STATUS.ERROR\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tstatic createElement(image) {\n\t\tconst images = image instanceof Array ? image : [image];\n\n\t\treturn images.map(img => {\n\t\t\tlet _img = img;\n\n\t\t\tif (typeof img === \"string\") {\n\t\t\t\t_img = new Image();\n\t\t\t\t_img.crossOrigin = \"anonymous\";\n\t\t\t\t_img.src = img;\n\t\t\t}\n\t\t\treturn _img;\n\t\t});\n\t}\n\n\tgetElement() {\n\t\treturn this._image.length === 1 ? this._image[0] : this._image;\n\t}\n\n\tstatic isMaybeLoaded(image) {\n\t\tlet result = false;\n\n\t\tif (image instanceof Image) {\n\t\t\tresult = image.complete && image.naturalWidth !== 0;\n\t\t} else if (image instanceof Array) {\n\t\t\tresult = !image.some(img => !img.complete || img.naturalWidth === 0);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tonceLoaded(target, onload, onerror) {\n\t\tconst targets = target instanceof Array ? target : [target];\n\t\tconst targetsNotLoaded = targets.filter(img => !ImageLoader.isMaybeLoaded(img));\n\t\tconst loadPromises = targetsNotLoaded.map(img => new Promise((res, rej) => {\n\t\t\tthis._once(img, \"load\", () => (res(img)));\n\t\t\tthis._once(img, \"error\", () => (rej(img)));\n\t\t}));\n\n\t\tPromise.all(loadPromises).then(\n\t\t\tresult => (onload(targets.length === 1 ? targets[0] : targets)),\n\t\t\treason => (onerror(reason))\n\t\t);\n\t}\n\n\t_once(target, type, listener) {\n\t\tconst fn = event => {\n\t\t\ttarget.removeEventListener(type, fn);\n\t\t\tlistener(event);\n\t\t};\n\n\t\ttarget.addEventListener(type, fn);\n\t\tthis._onceHandlers.push({target, type, fn});\n\t}\n\n\tgetStatus() {\n\t\treturn this._loadStatus;\n\t}\n\n\tdestroy() {\n\t\tthis._onceHandlers.forEach(handler => {\n\t\t\thandler.target.removeEventListener(handler.type, handler.fn);\n\t\t});\n\t\tthis._onceHandlers = [];\n\t\tthis._image.src = \"\";\n\t\tthis._image = null;\n\t\tthis._loadStatus = STATUS.NONE;\n\t}\n}\n","// import Agent from \"@egjs/agent\";\n\n/* Ref https://www.w3schools.com/tags/av_prop_readystate.asp */\nconst READY_STATUS = {\n\tHAVE_NOTHING: 0, // no information whether or not the audio/video is ready\n\tHAVE_METADATA: 1, // HAVE_METADATA - metadata for the audio/video is ready\n\tHAVE_CURRENT_DATA: 2, // data for the current playback position is available, but not enough data to play next frame/millisecond\n\tHAVE_FUTURE_DATA: 3, // data for the current and at least the next frame is available\n\tHAVE_ENOUGH_DATA: 4, // enough data available to start playing\n\t// below is custom status for failed to load status\n\tLOADING_FAILED: -1\n};\n\nconst READYSTATECHANGE_EVENT_NAME = {};\n\nREADYSTATECHANGE_EVENT_NAME[READY_STATUS.HAVE_METADATA] = \"loadedmetadata\";\nREADYSTATECHANGE_EVENT_NAME[READY_STATUS.HAVE_CURRENT_DATA] = \"loadeddata\";\nREADYSTATECHANGE_EVENT_NAME[READY_STATUS.HAVE_FUTURE_DATA] = \"canplay\";\nREADYSTATECHANGE_EVENT_NAME[READY_STATUS.HAVE_ENOUGH_DATA] = \"canplaythrough\";\n\nexport default class VideoLoader {\n\tconstructor(video) {\n\t\tthis._handlers = [];\n\t\tthis._sourceCount = 0;\n\n\t\t// on iOS safari, 'loadeddata' will not triggered unless the user hits play,\n\t\t// so used 'loadedmetadata' instead.\n\t\tthis._thresholdReadyState = READY_STATUS.HAVE_METADATA;\n\t\tthis._thresholdEventName = READYSTATECHANGE_EVENT_NAME[this._thresholdReadyState];\n\n\t\tthis._loadStatus = (video && video.readyState) || READY_STATUS.HAVE_NOTHING;\n\n\t\tthis._onerror = this._onerror.bind(this);\n\n\t\tvideo && this.set(video);\n\t}\n\n\t_onerror() {\n\t\tthis._errorCount++;\n\t\tif (this._errorCount >= this._sourceCount) {\n\t\t\tthis._loadStatus = READY_STATUS.LOADING_FAILED;\n\t\t\tthis._detachErrorHandler(this._onerror);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {Object | String} video Object or String containing Video Source URL<ko>비디오 URL 정보를 담고 있는 문자열이나 객체 {type, src}</ko>\n\t */\n\t_appendSourceElement(videoUrl) {\n\t\tlet videoSrc;\n\t\tlet videoType;\n\n\t\tif (typeof videoUrl === \"object\") {\n\t\t\tvideoSrc = videoUrl.src;\n\t\t\tvideoType = videoUrl.type;\n\t\t} else if (typeof videoUrl === \"string\") {\n\t\t\tvideoSrc = videoUrl;\n\t\t}\n\n\t\tif (!videoSrc) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst sourceElement = document.createElement(\"source\");\n\n\t\tsourceElement.src = videoSrc;\n\t\tvideoType && (sourceElement.type = videoType);\n\n\t\tthis._video.appendChild(sourceElement);\n\t\treturn true;\n\t}\n\n\tset(video) {\n\t\tthis._reset(); // reset resources.\n\n\t\tif (!video) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (video instanceof HTMLVideoElement) {\n\t\t\t// video tag\n\t\t\tthis._video = video;\n\t\t} else if (typeof video === \"string\" || typeof video === \"object\") {\n\t\t\t// url\n\t\t\tthis._video = document.createElement(\"video\");\n\t\t\tthis._video.setAttribute(\"crossorigin\", \"anonymous\");\n\t\t\tthis._video.setAttribute(\"webkit-playsinline\", \"\");\n\t\t\tthis._video.setAttribute(\"playsinline\", \"\");\n\n\t\t\tif (video instanceof Array) {\n\t\t\t\tvideo.forEach(v => this._appendSourceElement(v));\n\t\t\t} else {\n\t\t\t\tthis._appendSourceElement(video);\n\t\t\t}\n\n\t\t\tthis._sourceCount = this._video.querySelectorAll(\"source\").length;\n\n\t\t\tif (this._sourceCount > 0) {\n\t\t\t\tif (this._video.readyState < this._thresholdReadyState) {\n\t\t\t\t\tthis._video.load();\n\t\t\t\t\t// attach loading error listener\n\t\t\t\t\tthis._attachErrorHandler(this._onerror);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._video = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t_attachErrorHandler(handler) {\n\t\tthis._video.addEventListener(\"error\", handler);\n\t\tthis._sources = this._video.querySelectorAll(\"source\");\n\t\t[].forEach.call(this._sources, source => {\n\t\t\tsource.addEventListener(\"error\", handler);\n\t\t});\n\t}\n\n\t_detachErrorHandler(handler) {\n\t\tthis._video.removeEventListener(\"error\", handler);\n\t\t[].forEach.call(this._sources, source => {\n\t\t\tsource.removeEventListener(\"error\", handler);\n\t\t});\n\t}\n\n\tget() {\n\t\treturn new Promise((res, rej) => {\n\t\t\tif (!this._video) {\n\t\t\t\trej(\"VideoLoader: video is undefined\");\n\t\t\t} else if (this._loadStatus === READY_STATUS.LOADING_FAILED) {\n\t\t\t\trej(\"VideoLoader: video source is invalid\");\n\t\t\t} else if (this._video.readyState >= this._thresholdReadyState) {\n\t\t\t\tres(this._video);\n\t\t\t} else {\n\t\t\t\t// check errorCnt and reject\n\t\t\t\tconst rejector = () => {\n\t\t\t\t\tif (this._loadStatus === READY_STATUS.LOADING_FAILED) {\n\t\t\t\t\t\tthis._detachErrorHandler(rejector);\n\t\t\t\t\t\trej(\"VideoLoader: video source is invalid\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis._attachErrorHandler(rejector);\n\t\t\t\tthis._once(this._thresholdEventName, () => res(this._video));\n\t\t\t}\n\t\t});\n\t}\n\n\tgetElement() {\n\t\treturn this._video;\n\t}\n\n\tdestroy() {\n\t\tthis._reset();\n\t}\n\n\t_reset() {\n\t\tthis._handlers.forEach(handler => {\n\t\t\tthis._video.removeEventListener(handler.type, handler.fn);\n\t\t});\n\t\tthis._handlers = [];\n\t\tthis._video = null;\n\n\t\tthis._sourceCount = 0;\n\t\tthis._errorCount = 0;\n\t}\n\n\t_once(type, listener) {\n\t\tconst target = this._video;\n\n\t\tconst fn = event => {\n\t\t\ttarget.removeEventListener(type, fn);\n\t\t\tlistener(event);\n\t\t};\n\n\t\t/* By useCapture mode enabled, you can capture the error event being fired on source(child)*/\n\t\ttarget.addEventListener(type, fn, true);\n\t\tthis._handlers.push({type, fn});\n\t}\n}\n","/*\nCopyright (c) 2017 NAVER Corp.\r\n@egjs/agent project is licensed under the MIT license\r\n\r\n@egjs/agent JavaScript library\r\n\r\n\r\n@version 2.1.5\n*/\nvar win = typeof window !== \"undefined\" && window || {};\nvar RegExp$1 = win.RegExp;\nvar navigator = win.navigator;\n\nvar parseRules = {\n\tbrowser: [{\n\t\tcriteria: \"PhantomJS\",\n\t\tidentity: \"PhantomJS\"\n\t}, {\n\t\tcriteria: /Whale/,\n\t\tidentity: \"Whale\",\n\t\tversionSearch: \"Whale\"\n\t}, {\n\t\tcriteria: /Edge/,\n\t\tidentity: \"Edge\",\n\t\tversionSearch: \"Edge\"\n\t}, {\n\t\tcriteria: /MSIE|Trident|Windows Phone/,\n\t\tidentity: \"IE\",\n\t\tversionSearch: \"IEMobile|MSIE|rv\"\n\t}, {\n\t\tcriteria: /MiuiBrowser/,\n\t\tidentity: \"MIUI Browser\",\n\t\tversionSearch: \"MiuiBrowser\"\n\t}, {\n\t\tcriteria: /SamsungBrowser/,\n\t\tidentity: \"Samsung Internet\",\n\t\tversionSearch: \"SamsungBrowser\"\n\t}, {\n\t\tcriteria: /SAMSUNG /,\n\t\tidentity: \"Samsung Internet\",\n\t\tversionSearch: \"Version\"\n\t}, {\n\t\tcriteria: /Chrome|CriOS/,\n\t\tidentity: \"Chrome\"\n\t}, {\n\t\tcriteria: /Android/,\n\t\tidentity: \"Android Browser\",\n\t\tversionSearch: \"Version\"\n\t}, {\n\t\tcriteria: /iPhone|iPad/,\n\t\tidentity: \"Safari\",\n\t\tversionSearch: \"Version\"\n\t}, {\n\t\tcriteria: \"Apple\",\n\t\tidentity: \"Safari\",\n\t\tversionSearch: \"Version\"\n\t}, {\n\t\tcriteria: \"Firefox\",\n\t\tidentity: \"Firefox\"\n\t}],\n\tos: [{\n\t\tcriteria: /Windows Phone/,\n\t\tidentity: \"Windows Phone\",\n\t\tversionSearch: \"Windows Phone\"\n\t}, {\n\t\tcriteria: \"Windows 2000\",\n\t\tidentity: \"Window\",\n\t\tversionAlias: \"5.0\"\n\t}, {\n\t\tcriteria: /Windows NT/,\n\t\tidentity: \"Window\",\n\t\tversionSearch: \"Windows NT\"\n\t}, {\n\t\tcriteria: /iPhone|iPad/,\n\t\tidentity: \"iOS\",\n\t\tversionSearch: \"iPhone OS|CPU OS\"\n\t}, {\n\t\tcriteria: \"Mac\",\n\t\tversionSearch: \"OS X\",\n\t\tidentity: \"MAC\"\n\t}, {\n\t\tcriteria: /Android/,\n\t\tidentity: \"Android\"\n\t}, {\n\t\tcriteria: /Tizen/,\n\t\tidentity: \"Tizen\"\n\t}, {\n\t\tcriteria: /Web0S/,\n\t\tidentity: \"WebOS\"\n\t}],\n\n\t// Webview check condition\n\t// ios: If has no version information\n\t// Android 5.0 && chrome 40+: Presence of \"; wv\" in userAgent\n\t// Under android 5.0: Presence of \"NAVER\" or \"Daum\" in userAgent\n\twebview: [{\n\t\tcriteria: /iPhone|iPad/,\n\t\tbrowserVersionSearch: \"Version\",\n\t\twebviewBrowserVersion: /-1/\n\t}, {\n\t\tcriteria: /iPhone|iPad|Android/,\n\t\twebviewToken: /NAVER|DAUM|; wv/\n\n\t}],\n\tdefaultString: {\n\t\tbrowser: {\n\t\t\tversion: \"-1\",\n\t\t\tname: \"unknown\"\n\t\t},\n\t\tos: {\n\t\t\tversion: \"-1\",\n\t\t\tname: \"unknown\"\n\t\t}\n\t}\n};\n\nfunction filter(arr, compare) {\n\tvar result = [];\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tcompare(arr[i]) && result.push(arr[i]);\n\t}\n\treturn result;\n}\n\nfunction some(arr, compare) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (compare(arr[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar UA = void 0;\n\nfunction setUa(ua) {\n\tUA = ua;\n}\n\nfunction isMatched(base, target) {\n\treturn target && target.test ? !!target.test(base) : base.indexOf(target) > -1;\n}\n\nfunction getIdentityStringFromArray(rules, defaultStrings) {\n\tvar matchedRule = filter(rules, function (rule) {\n\t\treturn isMatched(UA, rule.criteria);\n\t})[0];\n\n\treturn matchedRule && matchedRule.identity || defaultStrings.name;\n}\n\nfunction getRule(rules, targetIdentity) {\n\treturn filter(rules, function (rule) {\n\t\tvar criteria = rule.criteria;\n\t\tvar identityMatched = new RegExp(rule.identity, \"i\").test(targetIdentity);\n\n\t\tif (criteria ? identityMatched && isMatched(UA, criteria) : identityMatched) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t})[0];\n}\n\nfunction getBrowserName() {\n\treturn getIdentityStringFromArray(parseRules.browser, parseRules.defaultString.browser);\n}\n\nfunction getBrowserRule(browserName) {\n\tvar rule = getRule(parseRules.browser, browserName);\n\n\tif (!rule) {\n\t\trule = {\n\t\t\tcriteria: browserName,\n\t\t\tversionSearch: browserName,\n\t\t\tidentity: browserName\n\t\t};\n\t}\n\n\treturn rule;\n}\n\nfunction extractBrowserVersion(versionToken, ua) {\n\tvar browserVersion = parseRules.defaultString.browser.version;\n\tvar versionRegexResult = new RegExp(\"(\" + versionToken + \")\", \"i\").exec(ua);\n\n\tif (!versionRegexResult) {\n\t\treturn browserVersion;\n\t}\n\n\tvar versionTokenIndex = versionRegexResult.index;\n\tvar verTkn = versionRegexResult[0];\n\n\tif (versionTokenIndex > -1) {\n\t\tvar versionIndex = versionTokenIndex + verTkn.length + 1;\n\n\t\tbrowserVersion = ua.substring(versionIndex).split(\" \")[0].replace(/_/g, \".\").replace(/;|\\)/g, \"\");\n\t}\n\treturn browserVersion;\n}\n\nfunction getBrowserVersion(browserName) {\n\tif (!browserName) {\n\t\treturn undefined;\n\t}\n\n\t// console.log(browserRule);\n\t// const versionToken = browserRule ? browserRule.versionSearch : browserName;\n\tvar browserRule = getBrowserRule(browserName);\n\tvar versionToken = browserRule.versionSearch || browserName;\n\tvar browserVersion = extractBrowserVersion(versionToken, UA);\n\n\treturn browserVersion;\n}\n\nfunction isWebview() {\n\tvar webviewRules = parseRules.webview;\n\tvar browserVersion = void 0;\n\n\treturn some(filter(webviewRules, function (rule) {\n\t\treturn isMatched(UA, rule.criteria);\n\t}), function (rule) {\n\t\tbrowserVersion = extractBrowserVersion(rule.browserVersionSearch, UA);\n\t\tif (isMatched(UA, rule.webviewToken) || isMatched(browserVersion, rule.webviewBrowserVersion)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\n}\n\nfunction getOSRule(osName) {\n\treturn getRule(parseRules.os, osName);\n}\n\nfunction getOsName() {\n\treturn getIdentityStringFromArray(parseRules.os, parseRules.defaultString.os);\n}\n\nfunction getOsVersion(osName) {\n\tvar osRule = getOSRule(osName) || {};\n\tvar defaultOSVersion = parseRules.defaultString.os.version;\n\tvar osVersion = void 0;\n\n\tif (!osName) {\n\t\treturn undefined;\n\t}\n\tif (osRule.versionAlias) {\n\t\treturn osRule.versionAlias;\n\t}\n\tvar osVersionToken = osRule.versionSearch || osName;\n\tvar osVersionRegex = new RegExp(\"(\" + osVersionToken + \")\\\\s([\\\\d_\\\\.]+|\\\\d_0)\", \"i\");\n\tvar osVersionRegexResult = osVersionRegex.exec(UA);\n\n\tif (osVersionRegexResult) {\n\t\tosVersion = osVersionRegex.exec(UA)[2].replace(/_/g, \".\").replace(/;|\\)/g, \"\");\n\t}\n\treturn osVersion || defaultOSVersion;\n}\n\nfunction getOs() {\n\tvar name = getOsName();\n\tvar version = getOsVersion(name);\n\n\treturn { name: name, version: version };\n}\n\nfunction getBrowser() {\n\tvar name = getBrowserName();\n\tvar version = getBrowserVersion(name);\n\n\treturn { name: name, version: version, webview: isWebview() };\n}\n\nfunction getIsMobile() {\n\treturn UA.indexOf(\"Mobi\") !== -1;\n}\n\n/**\n * Copyright (c) NAVER Corp.\n * egjs-agent projects are licensed under the MIT license\n */\n\n/**\n * @namespace eg.agent\n */\n/**\n * Extracts browser and operating system information from the user agent string.\n * @ko 유저 에이전트 문자열에서 브라우저와 운영체제 정보를 추출한다.\n * @function eg.agent#agent\n * @param {String} [userAgent=navigator.userAgent] user agent string to parse <ko>파싱할 유저에이전트 문자열</ko>\n * @return {Object} agentInfo\n * @return {Object} agentInfo.os os Operating system information <ko>운영체제 정보</ko>\n * @return {String} agentInfo.os.name Operating system name (android, ios, window, mac, unknown) <ko>운영체제 이름 (android, ios, window, mac, unknown)</ko>\n * @return {String} agentInfo.os.version Operating system version <ko>운영체제 버전</ko>\n * @return {String} agentInfo.browser Browser information <ko>브라우저 정보</ko>\n * @return {String} agentInfo.browser.name Browser name (safari, chrome, sbrowser, ie, firefox, unknown) <ko>브라우저 이름 (safari, chrome, sbrowser, ie, firefox, unknown)</ko>\n * @return {String} agentInfo.browser.version Browser version <ko>브라우저 버전 </ko>\n * @return {Boolean} agentInfo.browser.webview Indicates whether the browser is inapp<ko>웹뷰 브라우저 여부</ko>\n * @return {Boolean} agentInfo.isMobile Indicates whether the browser is for mobile<ko>모바일 브라우저 여부</ko>\n * @example\nimport agent from \"@egjs/agent\";\n\nconst {os, browser, isMobile} = agent();\n */\nfunction agent() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : navigator.userAgent;\n\n  setUa(ua);\n\n  var agentInfo = {\n    os: getOs(),\n    browser: getBrowser(),\n    isMobile: getIsMobile()\n  };\n\n  agentInfo.browser.name = agentInfo.browser.name.toLowerCase();\n  agentInfo.os.name = agentInfo.os.name.toLowerCase();\n  agentInfo.os.version = agentInfo.os.version.toLowerCase();\n\n  if (agentInfo.os.name === \"ios\" && agentInfo.browser.webview) {\n    agentInfo.browser.version = \"-1\";\n  }\n\n  return agentInfo;\n}\n/**\n * Version info string\n * @ko 버전정보 문자열\n * @name VERSION\n * @static\n * @type {String}\n * @example\n * eg.agent.VERSION;  // ex) 2.2.0\n * @memberof eg.agent\n */\nagent.VERSION = \"2.1.5\";\n\nexport default agent;\n//# sourceMappingURL=agent.esm.js.map\n","import agent from \"@egjs/agent\";\n\nconst WEBGL_ERROR_CODE = {\n\t\"0\": \"NO_ERROR\",\n\t\"1280\": \"INVALID_ENUM\",\n\t\"1281\": \"INVALID_VALUE\",\n\t\"1282\": \"INVALID_OPERATION\",\n\t\"1285\": \"OUT_OF_MEMORY\",\n\t\"1286\": \"INVALID_FRAMEBUFFER_OPERATION\",\n\t\"37442\": \"CONTEXT_LOST_WEBGL\"\n};\n\nlet webglAvailability = null;\nlet MAX_TEXTURE_SIZE_FOR_TEST = null;\n\nexport default class WebGLUtils {\n\tstatic createShader(gl, type, source) {\n\t\tconst shader = gl.createShader(type);\n\n\t\tgl.shaderSource(shader, source);\n\t\tgl.compileShader(shader);\n\t\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n\t\tif (success) {\n\t\t\treturn shader;\n\t\t}\n\n\t\tgl.deleteShader(shader);\n\t\treturn null;\n\t}\n\n\tstatic createProgram(gl, vertexShader, fragmentShader) {\n\t\tconst program = gl.createProgram();\n\n\t\tgl.attachShader(program, vertexShader);\n\t\tgl.attachShader(program, fragmentShader);\n\t\tgl.linkProgram(program);\n\t\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n\t\tif (success) {\n\t\t\treturn program;\n\t\t}\n\n\t\tgl.deleteProgram(program);\n\t\treturn null;\n\t}\n\n\tstatic initBuffer(gl, target /* bind point */, data, itemSize, attr) {\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer(target, buffer);\n\t\tgl.bufferData(target, data, gl.STATIC_DRAW);\n\n\t\tif (buffer) {\n\t\t\tbuffer.itemSize = itemSize;\n\t\t\tbuffer.numItems = data.length / itemSize;\n\t\t}\n\n\t\tif (attr !== undefined) {\n\t\t\tgl.enableVertexAttribArray(attr);\n\t\t\tgl.vertexAttribPointer(attr, buffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\t}\n\n\t\treturn buffer;\n\t}\n\n\tstatic getWebglContext(canvas, userContextAttributes) {\n\t\tconst webglIdentifiers = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\n\t\tlet context = null;\n\t\tconst contextAttributes = Object.assign({\n\t\t\tpreserveDrawingBuffer: false,\n\t\t\tantialias: false\n\t\t}, userContextAttributes);\n\n\t\tfunction onWebglcontextcreationerror(e) {\n\t\t\treturn e.statusMessage;\n\t\t}\n\n\t\tcanvas.addEventListener(\"webglcontextcreationerror\", onWebglcontextcreationerror);\n\n\t\tfor (let i = 0; i < webglIdentifiers.length; i++) {\n\t\t\ttry {\n\t\t\t\tcontext = canvas.getContext(webglIdentifiers[i], contextAttributes);\n\t\t\t} catch (t) {}\n\t\t\tif (context) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tcanvas.removeEventListener(\"webglcontextcreationerror\", onWebglcontextcreationerror);\n\n\t\treturn context;\n\t}\n\n\tstatic createTexture(gl, textureTarget) {\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture(textureTarget, texture);\n\t\tgl.texParameteri(textureTarget, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\tgl.texParameteri(textureTarget, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\tgl.texParameteri(textureTarget, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(textureTarget, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tgl.bindTexture(textureTarget, null);\n\n\t\treturn texture;\n\t}\n\n\t/**\n\t * Returns the webgl availability of the current browser.\n\t * @method WebGLUtils#isWebGLAvailable\n\t * @retuen {Boolean} isWebGLAvailable\n\t */\n\tstatic isWebGLAvailable() {\n\t\tif (webglAvailability === null) {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tconst webglContext = WebGLUtils.getWebglContext(canvas);\n\n\t\t\twebglAvailability = !!webglContext;\n\n\t\t\t// webglContext Resource forced collection\n\t\t\tif (webglContext) {\n\t\t\t\tconst loseContextExtension = webglContext.getExtension(\"WEBGL_lose_context\");\n\n\t\t\t\tloseContextExtension && loseContextExtension.loseContext();\n\t\t\t}\n\t\t}\n\t\treturn webglAvailability;\n\t}\n\n\t/**\n\t * Returns whether webgl is stable in the current browser.\n\t * @method WebGLUtils#isStableWebGL\n\t * @retuen {Boolean} isStableWebGL\n\t */\n\tstatic isStableWebGL() {\n\t\tconst agentInfo = agent();\n\t\tlet isStableWebgl = true;\n\n\t\tif (agentInfo.os.name === \"android\" && parseFloat(agentInfo.os.version) <= 4.3) {\n\t\t\tisStableWebgl = false;\n\t\t} else if (agentInfo.os.name === \"android\" && parseFloat(agentInfo.os.version) === 4.4) {\n\t\t\tif (agentInfo.browser.name !== \"chrome\") {\n\t\t\t\tisStableWebgl = false;\n\t\t\t}\n\t\t}\n\t\treturn isStableWebgl;\n\t}\n\n\tstatic getErrorNameFromWebGLErrorCode(code) {\n\t\tif (!(code in WEBGL_ERROR_CODE)) {\n\t\t\treturn \"UNKNOWN_ERROR\";\n\t\t}\n\n\t\treturn WEBGL_ERROR_CODE[code];\n\t}\n\n\n\t/**\n\t * This function is wrapper for texImage2D to handle exceptions on texImage2D.\n\t * Purpose is to prevent service from being stopped by script error.\n\t *\n\t * @param {*} gl\n\t * @param {*} target\n\t * @param {*} pixels\n\t */\n\tstatic texImage2D(gl, target, pixels) {\n\t\ttry {\n\t\t\tgl.texImage2D(target, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\t\t} catch (error) {\n\t\t\t/* eslint-disable no-console */\n\t\t\tconsole.error(\"WebGLUtils.texImage2D error:\", error);\n\t\t\t/* eslint-enable no-console */\n\t\t}\n\t}\n\n\tstatic getMaxTextureSize(gl) {\n\t\t// WARN: MAX_TEXTURE_SIZE_FOR_TEST is used for test\n\t\treturn MAX_TEXTURE_SIZE_FOR_TEST || gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t}\n}\n\n/**\n * This function should not be used in service code. It's provided only for test purpose.\n * It should be set to null or 0 when test is done.\n *\n * @param {Number} size\n */\nfunction setMaxTextureSizeForTestOnlyPurpose(size) {\n\tMAX_TEXTURE_SIZE_FOR_TEST = size;\n}\n\nexport {\n\tsetMaxTextureSizeForTestOnlyPurpose\n};\n","import Renderer from \"./Renderer\";\nimport WebGLUtils from \"../WebGLUtils\";\n\nconst latitudeBands = 60;\nconst longitudeBands = 60;\nconst radius = 2;\nconst ANGLE_CORRECTION_FOR_CENTER_ALIGN = -0.5 * Math.PI;\n\nconst textureCoordData = [];\nconst vertexPositionData = [];\nconst indexData = [];\nlet latIdx;\nlet lngIdx;\n\nfor (latIdx = 0; latIdx <= latitudeBands; latIdx++) {\n\tconst theta = (latIdx / latitudeBands - 0.5) * Math.PI;\n\tconst sinTheta = Math.sin(theta);\n\tconst cosTheta = Math.cos(theta);\n\n\tfor (lngIdx = 0; lngIdx <= longitudeBands; lngIdx++) {\n\t\tconst phi = (lngIdx / longitudeBands - 0.5) * 2 * Math.PI + ANGLE_CORRECTION_FOR_CENTER_ALIGN;\n\t\tconst sinPhi = Math.sin(phi);\n\t\tconst cosPhi = Math.cos(phi);\n\t\tconst x = cosPhi * cosTheta;\n\t\tconst y = sinTheta;\n\t\tconst z = sinPhi * cosTheta;\n\t\tconst u = lngIdx / longitudeBands;\n\t\tconst v = latIdx / latitudeBands;\n\n\t\ttextureCoordData.push(u, v);\n\t\tvertexPositionData.push(radius * x, radius * y, radius * z);\n\n\t\tif (lngIdx !== longitudeBands && latIdx !== latitudeBands) {\n\t\t\tconst a = latIdx * (longitudeBands + 1) + lngIdx;\n\t\t\tconst b = a + longitudeBands + 1;\n\n\t\t\tindexData.push(a, b, a + 1, b, b + 1, a + 1);\n\t\t}\n\t}\n}\n\nexport default class SphereRenderer extends Renderer {\n\tstatic _VERTEX_POSITION_DATA = vertexPositionData;\n\tstatic _TEXTURE_COORD_DATA = textureCoordData;\n\tstatic _INDEX_DATA = indexData;\n\n\tconstructor(config) {\n\t\tsuper();\n\n\t\tthis._isStereoscopic = (config && config.isStereoscopic) || false;\n\t}\n\n\tgetVertexPositionData() {\n\t\treturn SphereRenderer._VERTEX_POSITION_DATA;\n\t}\n\n\tgetIndexData() {\n\t\treturn SphereRenderer._INDEX_DATA;\n\t}\n\n\tgetTextureCoordData() {\n\t\tif (this._isStereoscopic) {\n\t\t\t// Use vertical half size of image.\n\t\t\treturn SphereRenderer._TEXTURE_COORD_DATA.map(\n\t\t\t\t(value, index) => (index % 2 === 1 ? value / 2 : value)\n\t\t\t);\n\t\t}\n\n\t\treturn SphereRenderer._TEXTURE_COORD_DATA;\n\t}\n\n\tgetVertexShaderSource() {\n\t\treturn `\n\t\t\tattribute vec3 aVertexPosition;\n\t\t\tattribute vec2 aTextureCoord;\n\t\t\tuniform mat4 uMVMatrix;\n\t\t\tuniform mat4 uPMatrix;\n\t\t\tvarying highp vec2 vTextureCoord;\n\t\t\tvoid main(void) {\n\t\t\t\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n\t\t\t\tvTextureCoord = aTextureCoord;\n\t\t\t}`;\n\t}\n\n\tgetFragmentShaderSource() {\n\t\treturn `\n\t\t\tvarying highp vec2 vTextureCoord;\n\t\t\tuniform sampler2D uSampler;\n\t\t\tvoid main(void) {\n\t\t\t\tgl_FragColor = texture2D(\n\t\t\t\t\tuSampler,\n\t\t\t\t\tvec2(vTextureCoord.s, vTextureCoord.t)\n\t\t\t\t);\n\t\t\t}`;\n\t}\n\n\tupdateTexture(gl, image) {\n\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n\t}\n\n\tbindTexture(gl, texture, image) {\n\t\t// Make sure image isn't too big\n\t\tconst {width, height} = this.getDimension(image);\n\t\tconst size = Math.max(width, height);\n\t\tconst maxSize = WebGLUtils.getMaxTextureSize(gl);\n\n\t\tif (size > maxSize) {\n\t\t\tthis._triggerError(`Image width(${width}) exceeds device limit(${maxSize}))`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Pixel Source for IE11 & Video\n\t\tthis._initPixelSource(image);\n\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\tthis.updateTexture(gl, image);\n\t}\n}\n","import Component from \"@egjs/component\";\nimport Agent from \"@egjs/agent\";\n\nconst agent = Agent();\nconst isIE11 = agent.browser.name === \"ie\" && agent.browser.version === \"11.0\";\n\nconst EVENTS = {\n\tERROR: \"error\"\n};\n\n/**\n *\n * Extends Component for firing errors occurs internally.\n */\nexport default class Renderer extends Component {\n\tstatic EVENTS = EVENTS;\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._forceDimension = null;\n\t\tthis._pixelCanvas = null;\n\t\tthis._pixelContext = null;\n\t}\n\t// Define interface for Renderers\n\t/**\n\t * Following MUST BE DEFINED on Child of Renderer\n\t *\n\t * DATA\n\t *\n\t *  - getVertexPositionData\n\t *  - getIndexData\n\t *  - getTextureCoordData\n\t *\n\t * SOURCE\n\t *\n\t *  - getVertexShaderSource\n\t *  - getFragmentShaderSource\n\t *\n\t * TEXTURE\n\t *\n\t *  - bindTexture\n\t */\n\tgetDimension(pixelSource) {\n\t\tconst width = pixelSource.naturalWidth || pixelSource.videoWidth;\n\t\tconst height = pixelSource.naturalHeight || pixelSource.videoHeight;\n\n\t\treturn {width, height};\n\t}\n\n\t/**\n\t * Update data used by shader\n\t * \t-\n\t *\n\t *\n\t * @param {*} param\n\t */\n\tupdateShaderData(param) {\n\t\t/*\n\t\t* Update following data in implementation layer.\n\t\t* If the data is not changed, it does not need to implement this function.\n\t\t*\n\t\t* - _VERTEX_POSITION_DATA\n\t\t* - _TEXTURE_COORD_DATA\n\t\t* - _INDEX_DATA\n\t\t*/\n\t}\n\n\t/**\n\t *\n\t * @param {HTMLImageElement | HTMLVideoElement} image\n\t * @param {Object = {width, height}} forceDimension Forced dimension to resize\n\t */\n\t_initPixelSource(image, forceDimension) {\n\t\tconst isIE11Video = isIE11 && (image instanceof HTMLVideoElement);\n\n\t\tif (isIE11Video || forceDimension) {\n\t\t\tconst {width, height} = forceDimension || this.getDimension(image);\n\n\t\t\tthis._pixelCanvas = document.createElement(\"canvas\");\n\t\t\tthis._pixelCanvas.width = width;\n\t\t\tthis._pixelCanvas.height = height;\n\t\t\tthis._pixelContext = this._pixelCanvas.getContext(\"2d\");\n\t\t}\n\t\tthis._forceDimension = forceDimension;\n\t}\n\n\t_getPixelSource(image) {\n\t\tif (!this._pixelCanvas) {\n\t\t\treturn image;\n\t\t}\n\n\t\t/**\n\t\t * IE11 && Video\n\t\t * or\n\t\t * Dimension is forced (Image is larger than texture size.)\n\t\t */\n\t\tconst contentDimension = this.getDimension(image);\n\t\tconst textureDimension = this._forceDimension || contentDimension;\n\n\t\tif (this._pixelCanvas.width !== textureDimension.width) {\n\t\t\tthis._pixelCanvas.width = textureDimension.width;\n\t\t}\n\n\t\tif (this._pixelCanvas.height !== textureDimension.height) {\n\t\t\tthis._pixelCanvas.height = textureDimension.height;\n\t\t}\n\n\t\tif (this._forceDimension) {\n\t\t\tthis._pixelContext.drawImage(image,\n\t\t\t\t0, 0, contentDimension.width, contentDimension.height,\n\t\t\t\t0, 0, textureDimension.width, textureDimension.height);\n\t\t} else {\n\t\t\tthis._pixelContext.drawImage(image, 0, 0);\n\t\t}\n\n\t\treturn this._pixelCanvas;\n\t}\n\n\t_extractTileConfig(imageConfig) {\n\t\tlet tileConfig =\n\t\t\tArray.isArray(imageConfig.tileConfig) ?\n\t\t\t\timageConfig.tileConfig : Array(...Array(6)).map(() => imageConfig.tileConfig);\n\n\t\ttileConfig = tileConfig.map(\n\t\t\tconfig => Object.assign({\n\t\t\t\tflipHorizontal: false,\n\t\t\t\trotation: 0\n\t\t\t}, config)\n\t\t);\n\n\t\treturn tileConfig;\n\t}\n\n\t_triggerError(error) {\n\t\t/* eslint-disable no-console */\n\t\tconsole.error(\"Renderer Error:\", error);\n\t\t/* eslint-enable no-console */\n\n\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\tmessage: typeof error === \"string\" ? error : error.message\n\t\t});\n\t}\n}\n","import Agent from \"@egjs/agent\";\nimport Renderer from \"./Renderer.js\";\nimport WebGLUtils from \"../WebGLUtils\";\nimport {util} from \"../../utils/math-util.js\";\n\nexport default class CubeRenderer extends Renderer {\n\tstatic _VERTEX_POSITION_DATA = null;\n\tstatic _INDEX_DATA = null;\n\tgetVertexPositionData() {\n\t\tCubeRenderer._VERTEX_POSITION_DATA =\n\t\t\tCubeRenderer._VERTEX_POSITION_DATA !== null ? CubeRenderer._VERTEX_POSITION_DATA : [\n\t\t\t\t// back\n\t\t\t\t1, -1, 1,\n\t\t\t\t-1, -1, 1,\n\t\t\t\t-1, 1, 1,\n\t\t\t\t1, 1, 1,\n\n\t\t\t\t// front\n\t\t\t\t-1, -1, -1,\n\t\t\t\t1, -1, -1,\n\t\t\t\t1, 1, -1,\n\t\t\t\t-1, 1, -1,\n\n\t\t\t\t// top\n\t\t\t\t-1, 1, -1,\n\t\t\t\t1, 1, -1,\n\t\t\t\t1, 1, 1,\n\t\t\t\t-1, 1, 1,\n\n\t\t\t\t// bottom\n\t\t\t\t1, -1, -1,\n\t\t\t\t-1, -1, -1,\n\t\t\t\t-1, -1, 1,\n\t\t\t\t1, -1, 1,\n\n\t\t\t\t// right\n\t\t\t\t1, -1, -1,\n\t\t\t\t1, -1, 1,\n\t\t\t\t1, 1, 1,\n\t\t\t\t1, 1, -1,\n\n\t\t\t\t// left\n\t\t\t\t-1, -1, 1,\n\t\t\t\t-1, -1, -1,\n\t\t\t\t-1, 1, -1,\n\t\t\t\t-1, 1, 1\n\t\t\t];\n\n\t\treturn CubeRenderer._VERTEX_POSITION_DATA;\n\t}\n\n\tgetIndexData() {\n\t\tif (CubeRenderer._INDEX_DATA) {\n\t\t\treturn CubeRenderer._INDEX_DATA;\n\t\t}\n\n\t\tconst indexData = [];\n\t\tconst vertexPositionData = this.getVertexPositionData();\n\n\t\tfor (let i = 0; i < (vertexPositionData.length / 3); i += 4) {\n\t\t\tindexData.push(\n\t\t\t\ti,\n\t\t\t\ti + 2,\n\t\t\t\ti + 1,\n\t\t\t\ti,\n\t\t\t\ti + 3,\n\t\t\t\ti + 2\n\t\t\t);\n\t\t}\n\n\t\tCubeRenderer._INDEX_DATA = indexData;\n\t\treturn indexData;\n\t}\n\n\tstatic extractOrder(imageConfig) {\n\t\treturn imageConfig.order || \"RLUDBF\";\n\t}\n\n\tgetTextureCoordData(imageConfig) {\n\t\tconst vertexOrder = \"BFUDRL\";\n\t\tconst order = CubeRenderer.extractOrder(imageConfig);\n\t\tconst base = this.getVertexPositionData();\n\t\tconst tileConfig = this._extractTileConfig(imageConfig);\n\t\tconst elemSize = 3;\n\t\tconst vertexPerTile = 4;\n\t\tconst textureCoordData =\n\t\t\tvertexOrder.split(\"\")\n\t\t\t\t.map(face => tileConfig[order.indexOf(face)])\n\t\t\t\t.map((config, i) => {\n\t\t\t\t\tconst rotation = parseInt(config.rotation / 90, 10);\n\t\t\t\t\tconst ordermap_ = config.flipHorizontal ? [0, 1, 2, 3] : [1, 0, 3, 2];\n\n\t\t\t\t\tfor (let r = 0; r < Math.abs(rotation); r++) {\n\t\t\t\t\t\tif ((config.flipHorizontal && rotation > 0) ||\n\t\t\t\t\t\t\t(!config.flipHorizontal && rotation < 0)) {\n\t\t\t\t\t\t\tordermap_.push(ordermap_.shift());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tordermap_.unshift(ordermap_.pop());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst elemPerTile = elemSize * vertexPerTile;\n\t\t\t\t\tconst tileVertex = base.slice(i * elemPerTile, i * elemPerTile + elemPerTile);\n\t\t\t\t\tconst tileTemp = [];\n\n\t\t\t\t\tfor (let j = 0; j < vertexPerTile; j++) {\n\t\t\t\t\t\ttileTemp[ordermap_[j]] = tileVertex.splice(0, elemSize);\n\t\t\t\t\t}\n\t\t\t\t\treturn tileTemp;\n\t\t\t\t})\n\t\t\t\t.join()\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(v => parseInt(v, 10));\n\n\t\treturn textureCoordData;\n\t}\n\n\tgetVertexShaderSource() {\n\t\treturn `\n\t\t\tattribute vec3 aVertexPosition;\n\t\t\tattribute vec3 aTextureCoord;\n\t\t\tuniform mat4 uMVMatrix;\n\t\t\tuniform mat4 uPMatrix;\n\t\t\tvarying highp vec3 vVertexDirectionVector;\n\t\t\tvoid main(void) {\n\t\t\t\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n\t\t\t\tvVertexDirectionVector = aTextureCoord;\n\t\t\t}`;\n\t}\n\n\tgetFragmentShaderSource() {\n\t\treturn `\n\t\t\tvarying highp vec3 vVertexDirectionVector;\n\t\t\tuniform samplerCube uSampler;\n\t\t\tvoid main(void) {\n\t\t\t\tgl_FragColor = textureCube(uSampler, vVertexDirectionVector);\n\t\t\t}`;\n\t}\n\n\tupdateTexture(gl, image, imageConfig) {\n\t\tconst baseOrder = \"RLUDBF\";\n\t\tconst order = CubeRenderer.extractOrder(imageConfig);\n\t\tconst orderMap = {};\n\n\t\torder.split(\"\").forEach((v, i) => {\n\t\t\torderMap[v] = i;\n\t\t});\n\n\t\ttry {\n\t\t\tif (image instanceof Array) {\n\t\t\t\tfor (let surfaceIdx = 0; surfaceIdx < 6; surfaceIdx++) {\n\t\t\t\t\tconst tileIdx = orderMap[baseOrder[surfaceIdx]];\n\n\t\t\t\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_CUBE_MAP_POSITIVE_X + surfaceIdx, image[tileIdx]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst maxCubeMapTextureSize = this.getMaxCubeMapTextureSize(gl, image);\n\n\t\t\t\tfor (let surfaceIdx = 0; surfaceIdx < 6; surfaceIdx++) {\n\t\t\t\t\tconst tileIdx = orderMap[baseOrder[surfaceIdx]];\n\t\t\t\t\tconst tile = this.extractTileFromImage(\n\t\t\t\t\t\timage, tileIdx, maxCubeMapTextureSize\n\t\t\t\t\t);\n\n\t\t\t\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_CUBE_MAP_POSITIVE_X + surfaceIdx, tile);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._triggerError(e);\n\t\t}\n\t}\n\n\tbindTexture(gl, texture, image, imageConfig) {\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n\t\tthis.updateTexture(gl, image, imageConfig);\n\t}\n\n\tgetSourceTileSize(image) {\n\t\tconst {width, height} = this.getDimension(image);\n\t\tconst aspectRatio = width / height;\n\t\tlet inputTextureSize;\n\n\t\tif (aspectRatio === 1 / 6) {\n\t\t\tinputTextureSize = width;\n\t\t} else if (aspectRatio === 6) {\n\t\t\tinputTextureSize = height;\n\t\t} else if (aspectRatio === 2 / 3) {\n\t\t\tinputTextureSize = width / 2;\n\t\t} else {\n\t\t\tinputTextureSize = width / 3;\n\t\t}\n\t\treturn inputTextureSize;\n\t}\n\n\textractTileFromImage(image, tileIdx, outputTextureSize) {\n\t\tconst {width} = this.getDimension(image);\n\t\tconst inputTextureSize = this.getSourceTileSize(image);\n\n\t\tconst canvas = document.createElement(\"canvas\");\n\n\t\tcanvas.width = outputTextureSize;\n\t\tcanvas.height = outputTextureSize;\n\t\tconst context = canvas.getContext(\"2d\");\n\t\tconst tilePerRow = width / inputTextureSize;\n\n\t\tconst x = inputTextureSize * tileIdx % (inputTextureSize * tilePerRow);\n\t\tconst y = parseInt(tileIdx / tilePerRow, 10) * (inputTextureSize);\n\n\t\tcontext.drawImage(\n\t\t\timage, x, y,\n\t\t\tinputTextureSize, inputTextureSize, 0, 0, outputTextureSize, outputTextureSize\n\t\t);\n\t\treturn canvas;\n\t}\n\n\tgetMaxCubeMapTextureSize(gl, image) {\n\t\tconst agent = Agent();\n\t\tconst maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\tlet _imageWidth = this.getSourceTileSize(image);\n\n\t\tif (agent.browser.name === \"ie\" && parseInt(agent.browser.version, 10) === 11) {\n\t\t\tif (!util.isPowerOfTwo(_imageWidth)) {\n\t\t\t\tfor (let i = 1; i < maxCubeMapTextureSize; i *= 2) {\n\t\t\t\t\tif (i < _imageWidth) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_imageWidth = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ios 9 의 경우 텍스쳐 최대사이즈는 1024 이다.\n\t\tif (agent.os.name === \"ios\" && parseInt(agent.os.version, 10) === 9) {\n\t\t\t_imageWidth = 1024;\n\t\t}\n\t\t// ios 8 의 경우 텍스쳐 최대사이즈는 512 이다.\n\t\tif (agent.os.name === \"ios\" && parseInt(agent.os.version, 10) === 8) {\n\t\t\t_imageWidth = 512;\n\t\t}\n\t\t// maxCubeMapTextureSize 보다는 작고, imageWidth 보다 큰 2의 승수 중 가장 작은 수\n\t\treturn Math.min(maxCubeMapTextureSize, _imageWidth);\n\t}\n}\n","\nimport Renderer from \"./Renderer.js\";\nimport WebGLUtils from \"../WebGLUtils\";\n\nexport default class CubeStripRenderer extends Renderer {\n\tgetVertexShaderSource() {\n\t\treturn `\n\t\t\tattribute vec3 aVertexPosition;\n\t\t\tattribute vec2 aTextureCoord;\n\t\t\tuniform mat4 uMVMatrix;\n\t\t\tuniform mat4 uPMatrix;\n\t\t\tvarying highp vec2 vTextureCoord;\n\t\t\tvoid main(void) {\n\t\t\t\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n\t\t\t\tvTextureCoord = aTextureCoord;\n\t\t\t}`;\n\t}\n\n\tgetFragmentShaderSource() {\n\t\treturn `\n\t\t\t#define PI 3.14159265359\n\n\t\t\tprecision mediump float;\n\t\t\tvarying highp vec2 vTextureCoord;\n\t\t\tuniform sampler2D uSampler;\n\t\t\tuniform bool uIsEAC;\n\n\t\t\tconst vec2 OPERATE_COORDS_RANGE = vec2(-1.0, 1.0);\n\t\t\tconst vec2 TEXTURE_COORDS_RANGE = vec2(0.0, 1.0);\n\t\t\t// vector type is used for initializing values instead of array.\n\t\t\tconst vec4 TEXTURE_DIVISION_X = vec4(0.0, 1.0 / 3.0, 2.0 / 3.0, 1.0);\n\t\t\tconst vec3 TEXTURE_DIVISION_Y = vec3(0.0, 1.0 / 2.0, 1.0);\n\t\t\tconst float EAC_CONST = 2.0 / PI;\n\n\t\t\tfloat scale(vec2 domainRange, vec2 targetRange, float val) {\n\t\t\t\tfloat unit = 1.0 / (domainRange[1] - domainRange[0]);\n\t\t\t\treturn targetRange[0] + (targetRange[1] - targetRange[0]) * (val - domainRange[0]) * unit;\n\t\t\t}\n\n\t\t\tvoid main(void) {\n\t\t\t\tfloat transformedCoordX;\n\t\t\t\tfloat transformedCoordY;\n\n\t\t\t\tif (uIsEAC) {\n\t\t\t\t\tvec2 orgTextureRangeX;\n\t\t\t\t\tvec2 orgTextureRangeY;\n\n\t\t\t\t\t// Apply EAC transform\n\t\t\t\t\tif (vTextureCoord.s >= TEXTURE_DIVISION_X[2]) {\n\t\t\t\t\t\torgTextureRangeX = vec2(TEXTURE_DIVISION_X[2], TEXTURE_DIVISION_X[3]);\n\t\t\t\t\t} else if (vTextureCoord.s >= TEXTURE_DIVISION_X[1]) {\n\t\t\t\t\t\torgTextureRangeX = vec2(TEXTURE_DIVISION_X[1], TEXTURE_DIVISION_X[2]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\torgTextureRangeX = vec2(TEXTURE_DIVISION_X[0], TEXTURE_DIVISION_X[1]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (vTextureCoord.t >= TEXTURE_DIVISION_Y[1]) {\n\t\t\t\t\t\torgTextureRangeY = vec2(TEXTURE_DIVISION_Y[1], TEXTURE_DIVISION_Y[2]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\torgTextureRangeY = vec2(TEXTURE_DIVISION_Y[0], TEXTURE_DIVISION_Y[1]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// scaling coors by the coordinates following the range from -1.0 to 1.0.\n\t\t\t\t\tfloat px = scale(orgTextureRangeX, OPERATE_COORDS_RANGE, vTextureCoord.s);\n\t\t\t\t\tfloat py = scale(orgTextureRangeY, OPERATE_COORDS_RANGE, vTextureCoord.t);\n\n\t\t\t\t\tfloat qu = EAC_CONST * atan(px) + 0.5;\n\t\t\t\t\tfloat qv = EAC_CONST * atan(py) + 0.5;\n\n\t\t\t\t\t// re-scaling coors by original coordinates ranges\n\t\t\t\t\ttransformedCoordX = scale(TEXTURE_COORDS_RANGE, orgTextureRangeX, qu);\n\t\t\t\t\ttransformedCoordY = scale(TEXTURE_COORDS_RANGE, orgTextureRangeY, qv);\n\t\t\t\t} else {\n\t\t\t\t\t// normal cubemap\n\t\t\t\t\ttransformedCoordX = vTextureCoord.s;\n\t\t\t\t\ttransformedCoordY = vTextureCoord.t;\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = texture2D(uSampler, vec2(transformedCoordX, transformedCoordY));\n\t\t\t}`;\n\t}\n\n\tgetVertexPositionData() {\n\t\tif (!this._vertices) {\n\t\t\tthis._vertices = [\n\t\t\t\t// back\n\t\t\t\t1, -1, 1,\n\t\t\t\t-1, -1, 1,\n\t\t\t\t-1, 1, 1,\n\t\t\t\t1, 1, 1,\n\n\t\t\t\t// front\n\t\t\t\t-1, -1, -1,\n\t\t\t\t1, -1, -1,\n\t\t\t\t1, 1, -1,\n\t\t\t\t-1, 1, -1,\n\n\t\t\t\t// up\n\t\t\t\t-1, 1, -1,\n\t\t\t\t1, 1, -1,\n\t\t\t\t1, 1, 1,\n\t\t\t\t-1, 1, 1,\n\n\t\t\t\t// down\n\t\t\t\t-1, -1, 1,\n\t\t\t\t1, -1, 1,\n\t\t\t\t1, -1, -1,\n\t\t\t\t-1, -1, -1,\n\n\t\t\t\t// right\n\t\t\t\t1, -1, -1,\n\t\t\t\t1, -1, 1,\n\t\t\t\t1, 1, 1,\n\t\t\t\t1, 1, -1,\n\n\t\t\t\t// left\n\t\t\t\t-1, -1, 1,\n\t\t\t\t-1, -1, -1,\n\t\t\t\t-1, 1, -1,\n\t\t\t\t-1, 1, 1\n\t\t\t];\n\t\t}\n\n\t\treturn this._vertices;\n\t}\n\n\tgetIndexData() {\n\t\t// TODO: 한번만 계산하도록 수정하기\n\t\tconst indices = (() => {\n\t\t\tconst indexData = [];\n\n\t\t\tfor (let i = 0; i < (this._vertices.length / 3); i += 4) {\n\t\t\t\tindexData.push(\n\t\t\t\t\ti,\n\t\t\t\t\ti + 1,\n\t\t\t\t\ti + 2,\n\t\t\t\t\ti,\n\t\t\t\t\ti + 2,\n\t\t\t\t\ti + 3\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn indexData;\n\t\t})();\n\n\t\treturn indices;\n\t}\n\n\tgetTextureCoordData(imageConfig) {\n\t\t// TODO: make it cols, rows as config.\n\t\tconst cols = 3;\n\t\tconst rows = 2;\n\t\tconst order = imageConfig.order || \"RLUDFB\";\n\t\tlet coords = [];\n\n\t\t// 텍스쳐의 좌표는 윗쪽이 큰 값을 가지므로 row 는 역순으로 넣는다.\n\t\tfor (let r = rows - 1; r >= 0; r--) {\n\t\t\tfor (let c = 0; c < cols; c++) {\n\t\t\t\tconst coord = [\n\t\t\t\t\tc / cols, r / rows,\n\t\t\t\t\t(c + 1) / cols, r / rows,\n\t\t\t\t\t(c + 1) / cols, (r + 1) / rows,\n\t\t\t\t\tc / cols, (r + 1) / rows\n\t\t\t\t];\n\n\t\t\t\tcoords.push(coord);\n\t\t\t}\n\t\t}\n\n\t\tconst tileConfigs = this._extractTileConfig(imageConfig);\n\n\t\t// Transform Coord By Flip & Rotation\n\t\tcoords = coords\n\t\t// shrink coord to avoid pixel bleeding\n\t\t\t.map(coord => this._shrinkCoord(coord))\n\t\t\t.map((coord, i) => this._transformCoord(coord, tileConfigs[i]));\n\n\t\t// vertices 에서 지정된 순서대로 그대로 그리기 위해 vertex 의 순서를 BFUDRL 로 재배치\n\t\treturn \"BFUDRL\".split(\"\")\n\t\t\t.map(face => order.indexOf(face))\n\t\t\t.map(index => coords[index])\n\t\t\t.reduce((acc, val) => acc.concat(val), []);\n\t}\n\n\tupdateTexture(gl, image) {\n\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n\t}\n\n\tbindTexture(gl, texture, image) {\n\t\t// Make sure image isn't too big\n\t\tconst {width, height} = this.getDimension(image);\n\t\tconst size = Math.max(width, height);\n\t\tconst maxSize = WebGLUtils.getMaxTextureSize(gl);\n\n\t\tif (size > maxSize) {\n\t\t\tthis._triggerError(`Image width(${width}) exceeds device limit(${maxSize}))`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Pixel Source for IE11 & Video\n\t\tthis._initPixelSource(image);\n\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\tthis.updateTexture(gl, image);\n\t}\n\n\t_transformCoord(coord, tileConfig) {\n\t\tlet newCoord = coord.slice();\n\n\t\tif (tileConfig.flipHorizontal) {\n\t\t\tnewCoord = this._flipHorizontalCoord(newCoord);\n\t\t}\n\n\t\tif (tileConfig.rotation) {\n\t\t\tnewCoord = this._rotateCoord(newCoord, tileConfig.rotation);\n\t\t}\n\n\t\treturn newCoord;\n\t}\n\n\t_shrinkCoord(coord) {\n\t\tconst SHRINK_Y = 0.00;\n\t\tconst SHRINK_X = 0.00;\n\n\t\treturn [\n\t\t\tcoord[0] + SHRINK_X, coord[1] + SHRINK_Y,\n\t\t\tcoord[2] - SHRINK_X, coord[3] + SHRINK_Y,\n\t\t\tcoord[4] - SHRINK_X, coord[5] - SHRINK_Y,\n\t\t\tcoord[6] + SHRINK_X, coord[7] - SHRINK_Y\n\t\t];\n\t}\n\n\t_rotateCoord(coord, rotationAngle) {\n\t\tconst SIZE = 2; // coord means x,y coordinates. Two values(x, y) makes a one coord.\n\t\tconst shiftCount = parseInt(rotationAngle / 90, 10) % 4;\n\n\t\tif (shiftCount === 0) {\n\t\t\treturn coord;\n\t\t}\n\n\t\tlet moved;\n\t\tlet rotatedCoord = [];\n\n\t\tif (shiftCount > 0) {\n\t\t\tmoved = coord.splice(0, shiftCount * SIZE);\n\t\t\trotatedCoord = coord.concat(moved);\n\t\t} else {\n\t\t\tmoved = coord.splice((4 + shiftCount) * SIZE, -shiftCount * SIZE);\n\t\t\trotatedCoord = moved.concat(coord);\n\t\t}\n\n\t\treturn rotatedCoord;\n\t}\n\n\t_flipHorizontalCoord(coord) {\n\t\treturn [\n\t\t\tcoord[2], coord[3],\n\t\t\tcoord[0], coord[1],\n\t\t\tcoord[6], coord[7],\n\t\t\tcoord[4], coord[5]\n\t\t];\n\t}\n}\n","import Renderer from \"./Renderer\";\nimport WebGLUtils from \"../WebGLUtils\";\nimport {glMatrix} from \"../../utils/math-util.js\";\n\n// const latitudeBands = 60;\nconst MIN_ASPECT_RATIO_FOR_FULL_PANORAMA = 6;\nconst longitudeBands = 60;\n\nconst textureCoordData = [];\nconst vertexPositionData = [];\nconst indexData = [];\n\nexport default class CylinderRenderer extends Renderer {\n\tstatic _VERTEX_POSITION_DATA = vertexPositionData;\n\tstatic _TEXTURE_COORD_DATA = textureCoordData;\n\tstatic _INDEX_DATA = indexData;\n\n\tgetVertexPositionData() {\n\t\treturn CylinderRenderer._VERTEX_POSITION_DATA;\n\t}\n\n\tgetIndexData() {\n\t\treturn CylinderRenderer._INDEX_DATA;\n\t}\n\n\tgetTextureCoordData() {\n\t\treturn CylinderRenderer._TEXTURE_COORD_DATA;\n\t}\n\n\tgetVertexShaderSource() {\n\t\treturn `\n\t\t\tattribute vec3 aVertexPosition;\n\t\t\tattribute vec2 aTextureCoord;\n\t\t\tuniform mat4 uMVMatrix;\n\t\t\tuniform mat4 uPMatrix;\n\t\t\tvarying highp vec2 vTextureCoord;\n\t\t\tvoid main(void) {\n\t\t\t\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n\t\t\t\tvTextureCoord = aTextureCoord;\n\t\t\t}`;\n\t}\n\n\tgetFragmentShaderSource() {\n\t\treturn `\n\t\t\tvarying highp vec2 vTextureCoord;\n\t\t\tuniform sampler2D uSampler;\n\t\t\tvoid main(void) {\n\t\t\t\tgl_FragColor = texture2D(\n\t\t\t\t\tuSampler,\n\t\t\t\t\tvec2(vTextureCoord.s, vTextureCoord.t)\n\t\t\t\t);\n\t\t\t}`;\n\t}\n\n\tupdateTexture(gl, image) {\n\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n\t}\n\n\tbindTexture(gl, texture, image) {\n\t\t// Make sure image isn't too big\n\t\tconst {width, height} = this.getDimension(image);\n\t\tconst size = Math.max(width, height);\n\t\tconst maxSize = WebGLUtils.getMaxTextureSize(gl);\n\t\tlet resizeDimension;\n\n\t\tif (size > maxSize) {\n\t\t\tthis._triggerError(`Image width(${width}) exceeds device texture limit(${maxSize}))`);\n\n\t\t\t// Request resizing texture.\n\t\t\t/**\n\t\t\t * TODO: Is it need to apply on another projection type?\n\t\t\t */\n\t\t\tresizeDimension = width > height ?\n\t\t\t\t{width: maxSize, height: maxSize * height / width} :\n\t\t\t\t{width: maxSize * width / height, height: maxSize};\n\t\t}\n\n\t\t// Pixel Source for IE11 & Video or resizing needed\n\t\tthis._initPixelSource(image, resizeDimension);\n\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\tthis.updateTexture(gl, image);\n\t}\n\n\tupdateShaderData({imageAspectRatio = MIN_ASPECT_RATIO_FOR_FULL_PANORAMA}) {\n\t\tlet lngIdx;\n\t\tlet cylinderMaxRadian;\n\t\tlet halfCylinderY;\n\t\tlet rotated;\n\t\tlet aspectRatio;\n\n\t\t// Exception case: orientation is rotated.\n\t\tif (imageAspectRatio < 1) {\n\t\t\t/**\n\t\t\t * If rotated is true, we assume that image is rotated counter clockwise.\n\t\t\t * TODO: If there's other rotation, it is need to implement by each rotation.\n\t\t\t */\n\t\t\trotated = true;\n\t\t\taspectRatio = 1 / imageAspectRatio;\n\t\t} else {\n\t\t\trotated = false;\n\t\t\taspectRatio = imageAspectRatio;\n\t\t}\n\n\t\tif (aspectRatio >= MIN_ASPECT_RATIO_FOR_FULL_PANORAMA) {\n\t\t\tconst fov = 360 / aspectRatio;\n\n\t\t\tcylinderMaxRadian = 2 * Math.PI; // 360 deg\n\t\t\thalfCylinderY = Math.tan(glMatrix.toRadian(fov / 2));\n\t\t} else {\n\t\t\tcylinderMaxRadian = aspectRatio;\n\t\t\thalfCylinderY = 0.5;// Range of cylinder is [-0.5, 0.5] to make height to 1.\n\t\t}\n\n\t\t// intialize shader data before update\n\t\ttextureCoordData.length = 0;\n\t\tvertexPositionData.length = 0;\n\t\tindexData.length = 0;\n\n\t\tconst CYLIDER_Y = [-halfCylinderY, halfCylinderY];\n\t\tconst startAngleForCenterAlign = Math.PI / 2 + (2 * Math.PI - cylinderMaxRadian) / 2; // Math.PI / 2 start point when cylinderMaxRadian is 2 phi(360)\n\n\t\t// console.log(\"cylinderMaxRadian:\", glMatrix.toDegree(cylinderMaxRadian), \"CYLIDER_Y\", CYLIDER_Y, \"start angle\", glMatrix.toDegree(startAngleForCenterAlign));\n\t\tfor (let yIdx = 0, yLength = CYLIDER_Y.length; yIdx < yLength/* bottom & top */; yIdx++) {\n\t\t\tfor (lngIdx = 0; lngIdx <= longitudeBands; lngIdx++) {\n\t\t\t\tconst angle = startAngleForCenterAlign + (lngIdx / longitudeBands * cylinderMaxRadian);\n\t\t\t\tconst x = Math.cos(angle);\n\t\t\t\tconst y = CYLIDER_Y[yIdx];\n\t\t\t\tconst z = Math.sin(angle);\n\t\t\t\tlet u;\n\t\t\t\tlet v;\n\n\t\t\t\tif (rotated) {\n\t\t\t\t\t// Rotated 90 degree (counter clock wise)\n\t\t\t\t\tu = 1 - yIdx; // yLength - yIdx;\n\t\t\t\t\tv = lngIdx / longitudeBands;\n\t\t\t\t} else {\n\t\t\t\t// \t// Normal case (Not rotated)\n\t\t\t\t\tu = lngIdx / longitudeBands;\n\t\t\t\t\tv = yIdx;\n\t\t\t\t}\n\n\t\t\t\ttextureCoordData.push(u, v);\n\t\t\t\tvertexPositionData.push(x, y, z);\n\n\t\t\t\tif (yIdx === 0 && lngIdx < longitudeBands) {\n\t\t\t\t\tconst a = lngIdx;\n\t\t\t\t\tconst b = a + longitudeBands + 1;\n\n\t\t\t\t\tindexData.push(a, b, a + 1, b, b + 1, a + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * Constant value for gyro mode. <br>(Reference {@link https://github.com/naver/egjs-view360/wiki/PanoViewer-3.0-User-Guide})\n * @ko gyro 모드 대한 상수 값. <br>({@link https://github.com/naver/egjs-view360/wiki/PanoViewer-3.0-User-Guide} 참고)\n * @namespace\n * @name GYRO_MODE\n * @memberof eg.view360.PanoViewer\n */\n/**\n * Disable gyro\n * @ko gyro 비활성화\n * @name NONE\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"none\"\n */\n/**\n * YawPitch Mode\n * @ko YawPitch Mode\n * @name YAWPITCH\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"yawPitch\"\n */\n/**\n * VR Mode\n * @ko VR Mode\n * @name VR\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"VR\"\n */\nimport {GYRO_MODE} from \"../YawPitchControl/consts\";\n\n/**\n * Constant value for errors\n * @ko 에러에 대한 상수 값\n * @namespace\n * @name ERROR_TYPE\n * @memberof eg.view360.PanoViewer\n */\nconst ERROR_TYPE = {\n\t/**\n\t * Unsupported device\n\t * @ko 미지원 기기\n\t * @name INVALID_DEVICE\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 10\n\t */\n\tINVALID_DEVICE: 10,\n\t/**\n\t * Webgl not support\n\t * @ko WEBGL 미지원\n\t * @name NO_WEBGL\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 11\n\t */\n\tNO_WEBGL: 11,\n\t/**\n\t * Failed to load image\n\t * @ko 이미지 로드 실패\n\t * @name FAIL_IMAGE_LOAD\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 12\n\t */\n\tFAIL_IMAGE_LOAD: 12,\n\t/**\n\t * Failed to bind texture\n\t * @ko 텍스쳐 바인딩 실패\n\t * @name FAIL_BIND_TEXTURE\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 13\n\t */\n\tFAIL_BIND_TEXTURE: 13,\n\t/**\n\t * Only one resource(image or video) should be specified\n\t * @ko 리소스 지정 오류 (image 혹은 video 중 하나만 지정되어야 함)\n\t * @name INVALID_RESOURCE\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 14\n\t */\n\tINVALID_RESOURCE: 14,\n\t/**\n\t * WebGL context lost occurred\n\t * @ko WebGL context lost 발생\n\t * @name RENDERING_CONTEXT_LOST\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 15\n\t */\n\tRENDERING_CONTEXT_LOST: 15\n};\n\n/**\n * Constant value for events\n * @ko 이벤트에 대한 상수 값\n * @namespace\n * @name EVENTS\n * @memberof eg.view360.PanoViewer\n */\nconst EVENTS = {\n\t/**\n\t * Events that is fired when PanoViewer is ready to show image and handle user interaction.\n\t * @ko PanoViewer 가 사용자의 인터렉션 및 렌더링이 준비되상태에 발생하는 이벤트\n\t * @name READY\n\t * @memberof eg.view360.PanoViewer.EVENTS\n\t * @constant\n\t * @type {String}\n\t * @default ready\n\t */\n\tREADY: \"ready\",\n\t/**\n\t * Events that is fired when direction or fov is changed.\n\t * @ko PanoViewer 에서 바라보고 있는 방향이나 FOV(화각)가 변경되었을때 발생하는 이벤트\n\t * @name VIEW_CHANGE\n\t * @memberof eg.view360.PanoViewer.EVENTS\n\t * @constant\n\t * @type {String}\n\t * @default viewChange\n\t */\n\tVIEW_CHANGE: \"viewChange\",\n\t/**\n\t * Events that is fired when animation which is triggered by inertia is ended.\n\t * @ko 관성에 의한 애니메이션 동작이 완료되었을때 발생하는 이벤트\n\t * @name ANIMATION_END\n\t * @memberof eg.view360.PanoViewer.EVENTS\n\t * @constant\n\t * @type {String}\n\t * @default animationEnd\n\t */\n\tANIMATION_END: \"animationEnd\",\n\t/**\n\t * Events that is fired when error occurs\n\t * @ko 에러 발생 시 발생하는 이벤트\n\t * @name ERROR\n\t * @memberof eg.view360.PanoViewer.EVENTS\n\t * @constant\n\t * @type {String}\n\t * @default error\n\t */\n\tERROR: \"error\"\n};\n\n/**\n * Constant value for projection type\n * @ko 프로젝션 타입 대한 상수 값\n * @namespace\n * @name PROJECTION_TYPE\n * @memberof eg.view360.PanoViewer\n */\nconst PROJECTION_TYPE = {\n\t/**\n\t * Constant value for equirectangular type.\n\t * @ko equirectangular 에 대한 상수 값.\n\t * @name EQUIRECTANGULAR\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default equirectangular\n\t */\n\tEQUIRECTANGULAR: \"equirectangular\",\n\t/**\n\t * Constant value for cubemap type.\n\t * @ko cubemap 에 대한 상수 값.\n\t * @name CUBEMAP\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default cubemap\n\t */\n\tCUBEMAP: \"cubemap\",\n\t/**\n\t * Constant value for cubestrip type.\n\t * Cubestrip is a format for a single image with a combination of six cube faces. It is almost identical to cubemap, but it is implemented in a different way. It aims at better performance and efficiency. In addition, it automatically detects and supports EAC.\n\t *\n\t * @ko cubemap 에 대한 상수 값.Cubestrip 은 cube 면이 6개가 조합된 조합을 한장의 이미지를 위한 포맷이다. cubemap 과 사용방법이 거의 동일하지만 다른 방식으로 구현되었다. 보다 좋은 성능과 효율성을 목적으로 한다. 더불어 자동으로 EAC 를 감지하고 지원한다.\n\t * @name CUBESTRIP\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default cubestrip\n\t */\n\tCUBESTRIP: \"cubestrip\",\n\t/**\n\t * Constant value for PANORAMA type.\n\t *\n\t * PANORAMA is a format for a panorma image which is taken from smartphone.\n\t *\n\t * @ko PANORAMA 에 대한 상수값. 파노라마는 스마트 폰에서 가져온 파노라마 이미지의 형식입니다.\n\t *\n\t * @name PANORAMA\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default panorama\n\t */\n\tPANORAMA: \"panorama\",\n\t/**\n\t * Constant value for EQUI_STEREOSCOPY type.\n\t *\n\t * Constant value for EQUI_STEREOSCOPY. Stereoscopy image format of EQUIRECTANGULAR. It is an experimental function to show a stereoscopic type equirectangular image on a plane. It does not support stereoscopic viewing function through special visual equipment at present.\n\t *\n\t * @ko EQUI_STEREOSCOPY 에 대한 상수값. EQUIRECTANGULAR 의 Stereoscopy 이미지 형식입니다. Stereoscopic 형태의 equirectangular 이미지를 평면에 보여주기 위한 실험적인 기능으로 현재는 특수한 시각 장비를 통한 입체적인 보기 기능은 지원하지 않습니다.\n\t *\n\t * @name STEREOSCOPIC_EQUI\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default stereoequi\n\t */\n\tSTEREOSCOPIC_EQUI: \"stereoequi\",\n};\n\nexport {\n\tGYRO_MODE,\n\tEVENTS,\n\tERROR_TYPE,\n\tPROJECTION_TYPE\n};\n","import Component from \"@egjs/component\";\nimport ImageLoader from \"./ImageLoader\";\nimport VideoLoader from \"./VideoLoader\";\nimport WebGLUtils from \"./WebGLUtils\";\nimport CubeRenderer from \"./renderer/CubeRenderer\";\nimport CubeStripRenderer from \"./renderer/CubeStripRenderer\";\nimport SphereRenderer from \"./renderer/SphereRenderer\";\nimport CylinderRenderer from \"./renderer/CylinderRenderer\";\nimport {glMatrix, mat4, quat} from \"../utils/math-util.js\";\nimport {devicePixelRatio} from \"../utils/browserFeature\";\nimport {PROJECTION_TYPE} from \"../PanoViewer/consts\";\nimport Renderer from \"./renderer/Renderer\";\n\nconst ImageType = PROJECTION_TYPE;\n\nlet DEVICE_PIXEL_RATIO = devicePixelRatio || 1;\n\n// DEVICE_PIXEL_RATIO 가 2를 초과하는 경우는 리소스 낭비이므로 2로 맞춘다.\nif (DEVICE_PIXEL_RATIO > 2) {\n\tDEVICE_PIXEL_RATIO = 2;\n}\n\n// define custom events name\n/**\n * TODO: how to manage events/errortype with PanoViewer\n *\n * I think renderer events should be seperated from viewer events although it has same name.\n */\nconst EVENTS = {\n\tBIND_TEXTURE: \"bindTexture\",\n\tIMAGE_LOADED: \"imageLoaded\",\n\tERROR: \"error\",\n\tRENDERING_CONTEXT_LOST: \"renderingContextLost\",\n\tRENDERING_CONTEXT_RESTORE: \"renderingContextRestore\",\n};\n\nconst ERROR_TYPE = {\n\tINVALID_DEVICE: 10,\n\tNO_WEBGL: 11,\n\tFAIL_IMAGE_LOAD: 12,\n\tRENDERER_ERROR: 13\n};\n\nexport default class PanoImageRenderer extends Component {\n\tstatic EVENTS = EVENTS;\n\tstatic ERROR_TYPE = ERROR_TYPE;\n\tconstructor(image, width, height, isVideo, sphericalConfig, renderingContextAttributes) {\n\t\t// Super constructor\n\t\tsuper();\n\n\t\tthis.sphericalConfig = sphericalConfig;\n\t\tthis.fieldOfView = sphericalConfig.fieldOfView;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis._lastQuaternion = null;\n\t\tthis._lastYaw = null;\n\t\tthis._lastPitch = null;\n\t\tthis._lastFieldOfView = null;\n\n\t\tthis.pMatrix = mat4.create();\n\t\tthis.mvMatrix = mat4.create();\n\n\t\t// initialzie pMatrix\n\t\tmat4.perspective(this.pMatrix, glMatrix.toRadian(this.fieldOfView), width / height, 0.1, 100);\n\n\t\tthis.textureCoordBuffer = null;\n\t\tthis.vertexBuffer = null;\n\t\tthis.indexBuffer = null;\n\t\tthis.canvas = this._initCanvas(width, height);\n\t\tthis._renderingContextAttributes = renderingContextAttributes;\n\t\tthis._image = null;\n\t\tthis._imageConfig = null;\n\t\tthis._imageIsReady = false;\n\t\tthis._shouldForceDraw = false;\n\t\tthis._keepUpdate = false; // Flag to specify 'continuous update' on video even when still.\n\n\t\tthis._onContentLoad = \tthis._onContentLoad.bind(this);\n\t\tthis._onContentError = \tthis._onContentError.bind(this);\n\n\t\tif (image) {\n\t\t\tthis.setImage({\n\t\t\t\timage,\n\t\t\t\timageType: sphericalConfig.imageType,\n\t\t\t\tisVideo,\n\t\t\t\tcubemapConfig: sphericalConfig.cubemapConfig\n\t\t\t});\n\t\t}\n\t}\n\n\tgetContent() {\n\t\treturn this._image;\n\t}\n\n\tsetImage({image, imageType, isVideo = false, cubemapConfig}) {\n\t\tthis._imageIsReady = false;\n\t\tthis._isVideo = isVideo;\n\t\tthis._imageConfig = Object.assign(\n\t\t\t{\n\t\t\t\t/* RLUDBF is abnormal, we use it on CUBEMAP only */\n\t\t\t\torder: (imageType === ImageType.CUBEMAP) ? \"RLUDBF\" : \"RLUDFB\",\n\t\t\t\ttileConfig: {\n\t\t\t\t\tflipHirozontal: false,\n\t\t\t\t\trotation: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\tcubemapConfig\n\t\t);\n\t\tthis._setImageType(imageType);\n\n\t\tif (this._contentLoader) {\n\t\t\tthis._contentLoader.destroy();\n\t\t}\n\n\t\tif (isVideo) {\n\t\t\tthis._contentLoader = new VideoLoader();\n\t\t\tthis._keepUpdate = true;\n\t\t} else {\n\t\t\tthis._contentLoader = new ImageLoader();\n\t\t\tthis._keepUpdate = false;\n\t\t}\n\n\t\t// img element or img url\n\t\tthis._contentLoader.set(image);\n\n\t\t// 이미지의 사이즈를 캐시한다.\n\t\t// image is reference for content in contentLoader, so it may be not valid if contentLoader is destroyed.\n\t\tthis._image = this._contentLoader.getElement();\n\n\t\treturn this._contentLoader.get()\n\t\t\t.then(this._onContentLoad, this._onContentError)\n\t\t\t.catch(e => setTimeout(() => { throw e; }));// Prevent exceptions from being isolated in promise chain.\n\t}\n\n\t_setImageType(imageType) {\n\t\tif (!imageType || this._imageType === imageType) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._imageType = imageType;\n\t\tthis._isCubeMap = imageType === ImageType.CUBEMAP;\n\n\t\tif (this._renderer) {\n\t\t\tthis._renderer.off();\n\t\t}\n\n\t\tswitch (imageType) {\n\t\t\tcase ImageType.CUBEMAP:\n\t\t\t\tthis._renderer = new CubeRenderer();\n\t\t\t\tbreak;\n\t\t\tcase ImageType.CUBESTRIP:\n\t\t\t\tthis._renderer = new CubeStripRenderer();\n\t\t\t\tbreak;\n\t\t\tcase ImageType.PANORAMA:\n\t\t\t\tthis._renderer = new CylinderRenderer();\n\t\t\t\tbreak;\n\t\t\tcase ImageType.STEREOSCOPIC_EQUI:\n\t\t\t\tthis._renderer = new SphereRenderer({isStereoscopic: true});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._renderer = new SphereRenderer();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._renderer.on(Renderer.EVENTS.ERROR, e => {\n\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\ttype: ERROR_TYPE.RENDERER_ERROR,\n\t\t\t\tmessage: e.message\n\t\t\t});\n\t\t});\n\n\t\tthis._initWebGL();\n\t}\n\n\t_initCanvas(width, height) {\n\t\tconst canvas = document.createElement(\"canvas\");\n\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\tcanvas.style.bottom = 0;\n\t\tcanvas.style.left = 0;\n\t\tcanvas.style.right = 0;\n\t\tcanvas.style.top = 0;\n\t\tcanvas.style.margin = \"auto\";\n\t\tcanvas.style.maxHeight = \"100%\";\n\t\tcanvas.style.maxWidth = \"100%\";\n\t\tcanvas.style.outline = \"none\";\n\t\tcanvas.style.position = \"absolute\";\n\n\t\tthis._onWebglcontextlost = this._onWebglcontextlost.bind(this);\n\t\tthis._onWebglcontextrestored = this._onWebglcontextrestored.bind(this);\n\n\t\tcanvas.addEventListener(\"webglcontextlost\", this._onWebglcontextlost);\n\t\tcanvas.addEventListener(\"webglcontextrestored\", this._onWebglcontextrestored);\n\n\t\treturn canvas;\n\t}\n\n\t_onContentError(error) {\n\t\tthis._imageIsReady = false;\n\t\tthis._image = null;\n\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\ttype: ERROR_TYPE.FAIL_IMAGE_LOAD,\n\t\t\tmessage: \"failed to load image\"\n\t\t});\n\n\t\treturn false;\n\t}\n\n\t_triggerContentLoad() {\n\t\tthis.trigger(EVENTS.IMAGE_LOADED, {\n\t\t\tcontent: this._image,\n\t\t\tisVideo: this._isVideo,\n\t\t\tprojectionType: this._imageType\n\t\t});\n\t}\n\t_onContentLoad(image) {\n\t\tthis._imageIsReady = true;\n\n\t\tthis._triggerContentLoad();\n\t\treturn true;\n\t}\n\n\tisImageLoaded() {\n\t\treturn !!this._image && this._imageIsReady &&\n\t\t\t(!this._isVideo || this._image.readyState >= 2 /* HAVE_CURRENT_DATA */);\n\t}\n\n\tbindTexture() {\n\t\treturn new Promise((res, rej) => {\n\t\t\tif (!this._contentLoader) {\n\t\t\t\trej(\"ImageLoader is not initialized\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._contentLoader.get()\n\t\t\t\t.then(() => this._bindTexture(), rej)\n\t\t\t\t.then(res);\n\t\t});\n\t}\n\n\t// 부모 엘리먼트에 canvas 를 붙임\n\tattachTo(parentElement) {\n\t\tthis.detach();\n\t\tparentElement.appendChild(this.canvas);\n\t}\n\n\tforceContextLoss() {\n\t\tif (this.hasRenderingContext()) {\n\t\t\tconst loseContextExtension = this.context.getExtension(\"WEBGL_lose_context\");\n\n\t\t\tif (loseContextExtension) {\n\t\t\t\tloseContextExtension.loseContext();\n\t\t\t}\n\t\t}\n\t}\n\n\t// 부모 엘리먼트에서 canvas 를 제거\n\tdetach() {\n\t\tif (this.canvas.parentElement) {\n\t\t\tthis.canvas.parentElement.removeChild(this.canvas);\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tif (this._contentLoader) {\n\t\t\tthis._contentLoader.destroy();\n\t\t}\n\n\t\tthis.detach();\n\t\tthis.forceContextLoss();\n\n\t\tthis.off();\n\n\t\tthis.canvas.removeEventListener(\"webglcontextlost\", this._onWebglcontextlost);\n\t\tthis.canvas.removeEventListener(\"webglcontextrestored\", this._onWebglcontextrestored);\n\t}\n\n\thasRenderingContext() {\n\t\tif (!(this.context && !this.context.isContextLost())) {\n\t\t\treturn false;\n\t\t} else if (\n\t\t\tthis.context &&\n\t\t\t!this.context.getProgramParameter(this.shaderProgram, this.context.LINK_STATUS)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t_onWebglcontextlost(e) {\n\t\te.preventDefault();\n\t\tthis.trigger(EVENTS.RENDERING_CONTEXT_LOST);\n\t}\n\n\t_onWebglcontextrestored(e) {\n\t\tthis._initWebGL();\n\t\tthis.trigger(EVENTS.RENDERING_CONTEXT_RESTORE);\n\t}\n\n\tupdateFieldOfView(fieldOfView) {\n\t\tthis.fieldOfView = fieldOfView;\n\t\tthis._updateViewport();\n\t}\n\n\tupdateViewportDimensions(width, height) {\n\t\tlet viewPortChanged = false;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tconst w = width * DEVICE_PIXEL_RATIO;\n\t\tconst h = height * DEVICE_PIXEL_RATIO;\n\n\t\tif (w !== this.canvas.width) {\n\t\t\tthis.canvas.width = w;\n\t\t\tviewPortChanged = true;\n\t\t}\n\n\t\tif (h !== this.canvas.height) {\n\t\t\tthis.canvas.height = h;\n\t\t\tviewPortChanged = true;\n\t\t}\n\n\t\tif (!viewPortChanged) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateViewport();\n\t\tthis._shouldForceDraw = true;\n\t}\n\n\t_updateViewport() {\n\t\tmat4.perspective(\n\t\t\tthis.pMatrix,\n\t\t\tglMatrix.toRadian(this.fieldOfView),\n\t\t\tthis.canvas.width / this.canvas.height,\n\t\t\t0.1,\n\t\t\t100);\n\n\t\tthis.context.viewport(0, 0, this.context.drawingBufferWidth, this.context.drawingBufferHeight);\n\t}\n\n\t_initWebGL() {\n\t\tlet gl;\n\n\t\t// TODO: Following code does need to be executed only if width/height, cubicStrip property is changed.\n\t\ttry {\n\t\t\tthis._initRenderingContext();\n\t\t\tgl = this.context;\n\n\t\t\tthis.updateViewportDimensions(this.width, this.height);\n\n\t\t\tif (this.shaderProgram) {\n\t\t\t\tgl.deleteProgram(this.shaderProgram);\n\t\t\t}\n\n\t\t\tthis.shaderProgram = this._initShaderProgram(gl);\n\t\t\tif (!this.shaderProgram) {\n\t\t\t\tthrow new Error(`Failed to intialize shaders: ${WebGLUtils.getErrorNameFromWebGLErrorCode(gl.getError())}`);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\ttype: ERROR_TYPE.NO_WEBGL,\n\t\t\t\tmessage: \"no webgl support\"\n\t\t\t});\n\t\t\tthis.destroy();\n\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\treturn;\n\t\t}\n\t\t// 캔버스를 투명으로 채운다.\n\t\tgl.clearColor(0, 0, 0, 0);\n\t\tconst textureTarget = this._isCubeMap ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n\n\t\tif (this.texture) {\n\t\t\tgl.deleteTexture(this.texture);\n\t\t}\n\n\t\tthis.texture = WebGLUtils.createTexture(gl, textureTarget);\n\n\t\tif (this._imageType === ImageType.CUBESTRIP) {\n\t\t\t// TODO: Apply following options on other projection type.\n\t\t\tgl.enable(gl.CULL_FACE);\n\t\t\t// gl.enable(gl.DEPTH_TEST);\n\t\t}\n\t}\n\n\t_initRenderingContext() {\n\t\tif (this.hasRenderingContext()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!window.WebGLRenderingContext) {\n\t\t\tthrow new Error(\"WebGLRenderingContext not available.\");\n\t\t}\n\n\t\tthis.context = WebGLUtils.getWebglContext(this.canvas, this._renderingContextAttributes);\n\n\t\tif (!this.context) {\n\t\t\tthrow new Error(\"Failed to acquire 3D rendering context\");\n\t\t}\n\t}\n\n\t_initShaderProgram(gl) {\n\t\tconst vertexShaderSource = this._renderer.getVertexShaderSource();\n\t\tconst vertexShader = WebGLUtils.createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n\n\t\tif (!vertexShader) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst fragmentShaderSource = this._renderer.getFragmentShaderSource();\n\t\tconst fragmentShader = WebGLUtils.createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n\t\tif (!fragmentShader) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst shaderProgram = WebGLUtils.createProgram(gl, vertexShader, fragmentShader);\n\n\t\tif (!shaderProgram) {\n\t\t\treturn null;\n\t\t}\n\n\t\tgl.useProgram(shaderProgram);\n\t\tshaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\n\t\tgl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\t\tshaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, \"uPMatrix\");\n\t\tshaderProgram.mvMatrixUniform = gl.getUniformLocation(shaderProgram, \"uMVMatrix\");\n\t\tshaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n\t\tshaderProgram.textureCoordAttribute = gl.getAttribLocation(shaderProgram, \"aTextureCoord\");\n\n\t\tgl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\n\n\t\t// clear buffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\t\t// Use TEXTURE0\n\t\tgl.uniform1i(shaderProgram.samplerUniform, 0);\n\n\t\treturn shaderProgram;\n\t}\n\n\t_initBuffers() {\n\t\tconst vertexPositionData = this._renderer.getVertexPositionData();\n\t\tconst indexData = this._renderer.getIndexData();\n\t\tconst textureCoordData = this._renderer.getTextureCoordData(this._imageConfig);\n\t\tconst gl = this.context;\n\n\t\tthis.vertexBuffer = WebGLUtils.initBuffer(\n\t\t\tgl, gl.ARRAY_BUFFER, new Float32Array(vertexPositionData), 3,\n\t\t\tthis.shaderProgram.vertexPositionAttribute);\n\n\t\tthis.indexBuffer = WebGLUtils.initBuffer(\n\t\t\tgl, gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexData), 1);\n\n\t\tthis.textureCoordBuffer = WebGLUtils.initBuffer(\n\t\t\tgl, gl.ARRAY_BUFFER, new Float32Array(textureCoordData), this._isCubeMap ? 3 : 2,\n\t\t\tthis.shaderProgram.textureCoordAttribute);\n\t}\n\n\t_bindTexture() {\n\t\t// Detect if it is EAC Format while CUBESTRIP mode.\n\t\t// We assume it is EAC if image is not 3/2 ratio.\n\t\tif (this._imageType === ImageType.CUBESTRIP) {\n\t\t\tconst {width, height} = this._renderer.getDimension(this._image);\n\t\t\tconst isEAC = width && height && width / height !== 1.5;\n\n\t\t\tthis.context.uniform1f(this.context.getUniformLocation(this.shaderProgram, \"uIsEAC\"), isEAC);\n\t\t} else if (this._imageType === ImageType.PANORAMA) {\n\t\t\tconst {width, height} = this._renderer.getDimension(this._image);\n\t\t\tconst imageAspectRatio = width && height && width / height;\n\n\t\t\tthis._renderer.updateShaderData({imageAspectRatio});\n\t\t}\n\n\t\t// intialize shader buffers after image is loaded.(by updateShaderData)\n\t\t// because buffer may be differ by image size.(eg. CylinderRenderer)\n\t\tthis._initBuffers();\n\n\t\tthis._renderer.bindTexture(\n\t\t\tthis.context,\n\t\t\tthis.texture,\n\t\t\tthis._image,\n\t\t\tthis._imageConfig,\n\t\t);\n\t\tthis._shouldForceDraw = true;\n\n\t\tthis.trigger(EVENTS.BIND_TEXTURE);\n\t}\n\n\t_updateTexture() {\n\t\tthis._renderer.updateTexture(\n\t\t\tthis.context,\n\t\t\tthis._image,\n\t\t\tthis._imageConfig,\n\t\t);\n\t}\n\n\tkeepUpdate(doUpdate) {\n\t\tif (doUpdate && this.isImageLoaded() === false) {\n\t\t\t// Force to draw a frame after image is loaded on render()\n\t\t\tthis._shouldForceDraw = true;\n\t\t}\n\n\t\tthis._keepUpdate = doUpdate;\n\t}\n\n\trenderWithQuaternion(quaternion, fieldOfView) {\n\t\tif (!this.isImageLoaded()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._keepUpdate === false &&\n\t\t\tthis._lastQuaternion && quat.exactEquals(this._lastQuaternion, quaternion) &&\n\t\t\tthis.fieldOfView && this.fieldOfView === fieldOfView &&\n\t\t\tthis._shouldForceDraw === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// updatefieldOfView only if fieldOfView is changed.\n\t\tif (fieldOfView !== undefined && fieldOfView !== this.fieldOfView) {\n\t\t\tthis.updateFieldOfView(fieldOfView);\n\t\t}\n\n\t\tthis.mvMatrix = mat4.fromQuat(mat4.create(), quaternion);\n\n\t\tthis._draw();\n\n\t\tthis._lastQuaternion = quat.clone(quaternion);\n\t\tif (this._shouldForceDraw) {\n\t\t\tthis._shouldForceDraw = false;\n\t\t}\n\t}\n\n\trender(yaw, pitch, fieldOfView) {\n\t\tif (!this.isImageLoaded()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._keepUpdate === false &&\n\t\t\t\tthis._lastYaw !== null && this._lastYaw === yaw &&\n\t\t\t\tthis._lastPitch !== null && this._lastPitch === pitch &&\n\t\t\t\tthis.fieldOfView && this.fieldOfView === fieldOfView &&\n\t\t\t\tthis._shouldForceDraw === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// fieldOfView 가 존재하면서 기존의 값과 다를 경우에만 업데이트 호출\n\t\tif (fieldOfView !== undefined && fieldOfView !== this.fieldOfView) {\n\t\t\tthis.updateFieldOfView(fieldOfView);\n\t\t}\n\n\t\tmat4.identity(this.mvMatrix);\n\t\tmat4.rotateX(this.mvMatrix, this.mvMatrix, -glMatrix.toRadian(pitch));\n\t\tmat4.rotateY(this.mvMatrix, this.mvMatrix, -glMatrix.toRadian(yaw));\n\n\t\tthis._draw();\n\n\t\tthis._lastYaw = yaw;\n\t\tthis._lastPitch = pitch;\n\t\tif (this._shouldForceDraw) {\n\t\t\tthis._shouldForceDraw = false;\n\t\t}\n\t}\n\n\t_draw() {\n\t\tconst gl = this.context;\n\n\t\tgl.uniformMatrix4fv(this.shaderProgram.pMatrixUniform, false, this.pMatrix);\n\t\tgl.uniformMatrix4fv(this.shaderProgram.mvMatrixUniform, false, this.mvMatrix);\n\n\t\tif (this._isVideo && this._keepUpdate) {\n\t\t\tthis._updateTexture();\n\t\t}\n\n\t\tif (this.indexBuffer) {\n\t\t\tgl.drawElements(\n\t\t\t\tgl.TRIANGLES, this.indexBuffer.numItems, gl.UNSIGNED_SHORT, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Returns projection renderer by each type\n\t */\n\tgetProjectionRenderer() {\n\t\treturn this._renderer;\n\t}\n}\n","import Component from \"@egjs/component\";\nimport {\n\tDeviceMotionEvent\n} from \"../utils/browserFeature\";\n\nimport YawPitchControl from \"../YawPitchControl/YawPitchControl\";\nimport PanoImageRenderer from \"../PanoImageRenderer/PanoImageRenderer\";\nimport WebGLUtils from \"../PanoImageRenderer/WebGLUtils\";\nimport {ERROR_TYPE, EVENTS, GYRO_MODE, PROJECTION_TYPE} from \"./consts\";\nimport {glMatrix} from \"../utils/math-util.js\";\nimport {VERSION} from \"../version\";\n\nexport default class PanoViewer extends Component {\n\t/**\n\t * Version info string\n\t * @ko 버전정보 문자열\n\t * @name VERSION\n\t * @static\n\t * @type {String}\n\t * @example\n\t * eg.view360.PanoViewer.VERSION;  // ex) 3.0.1\n\t * @memberof eg.view360.PanoViewer\n\t */\n\tstatic VERSION = VERSION;\n\tstatic ERROR_TYPE = ERROR_TYPE;\n\tstatic EVENTS = EVENTS;\n\tstatic PROJECTION_TYPE = PROJECTION_TYPE;\n\tstatic GYRO_MODE = GYRO_MODE;\n\t// It should be deprecated!\n\tstatic ProjectionType = PROJECTION_TYPE;\n\t/**\n\t * Constant value for touch directions\n\t * @ko 터치 방향에 대한 상수 값.\n\t * @namespace\n\t * @name TOUCH_DIRECTION\n\t * @memberof eg.view360.PanoViewer\n\t */\n\tstatic TOUCH_DIRECTION = {\n\t\t/**\n\t\t * Constant value for none direction.\n\t\t * @ko none 방향에 대한 상수 값.\n\t\t * @name NONE\n\t\t * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n\t\t * @constant\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tNONE: YawPitchControl.TOUCH_DIRECTION_NONE,\n\t\t/**\n\t\t * Constant value for horizontal(yaw) direction.\n\t\t * @ko horizontal(yaw) 방향에 대한 상수 값.\n\t\t * @name YAW\n\t\t * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n\t\t * @constant\n\t\t * @type {Number}\n\t\t * @default 6\n\t\t */\n\t\tYAW: YawPitchControl.TOUCH_DIRECTION_YAW,\n\t\t/**\n\t\t * Constant value for vertical direction.\n\t\t * @ko vertical(pitch) 방향에 대한 상수 값.\n\t\t * @name PITCH\n\t\t * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n\t\t * @constant\n\t\t * @type {Number}\n\t\t * @default 24\n\t\t */\n\t\tPITCH: YawPitchControl.TOUCH_DIRECTION_PITCH,\n\t\t/**\n\t\t * Constant value for all direction.\n\t\t * @ko all 방향에 대한 상수 값.\n\t\t * @name ALL\n\t\t * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n\t\t * @constant\n\t\t * @type {Number}\n\t\t * @default 30\n\t\t */\n\t\tALL: YawPitchControl.TOUCH_DIRECTION_ALL\n\t};\n\n\t/**\n\t * @classdesc 360 media viewer\n\t * @ko 360 미디어 뷰어\n\t * @class\n\t * @name eg.view360.PanoViewer\n\t * @extends eg.Component\n\t *\n\t * @param {HTMLElement} container The container element for the renderer. <ko>렌더러의 컨테이너 엘리먼트</ko>\n\t * @param {Object} config\n\t *\n\t * @param {String|Image} config.image Input image url or element (Use only image property or video property)<ko>입력 이미지 URL 혹은 엘리먼트(image 와 video 둘 중 하나만 설정)</ko>\n\t * @param {String|HTMLVideoElement} config.video Input video url or element(Use only image property or video property)<ko>입력 비디오 URL 혹은 엘리먼트(image 와 video 둘 중 하나만 설정)</ko>\n\t * @param {String} [config.projectionType=equirectangular] The type of projection: equirectangular, cubemap <br/>{@link eg.view360.PanoViewer.PROJECTION_TYPE}<ko>Projection 유형 : equirectangular, cubemap <br/>{@link eg.view360.PanoViewer.PROJECTION_TYPE}</ko>\n\t * @param {Object} config.cubemapConfig config cubemap projection layout. It is applied when projectionType is {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP} or {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBESTRIP}<ko>cubemap projection type 의 레이아웃을 설정한다. 이 설정은 ProjectionType 이 {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP} 혹은 {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBESTRIP} 인 경우에만 적용된다.</ko>\n\t * @param {Object} [config.cubemapConfig.order = \"RLUDBF\"(ProjectionType === CUBEMAP) | \"RLUDFB\" (ProjectionType === CUBESTRIP)] Order of cubemap faces <ko>Cubemap 형태의 이미지가 배치된 순서</ko>\n\t * @param {Object} [config.cubemapConfig.tileConfig = {flipHirozontal:false, rotation: 0}] Setting about rotation angle(degree) and whether to flip horizontal for each cubemap faces, if you put this object as a array, you can set each faces with different setting. For example, [{flipHorizontal:false, rotation:90}, {flipHorizontal: true, rotation: 180}, ...]<ko>각 Cubemap 면에 대한 회전 각도/좌우반전 여부 설정, 객체를 배열 형태로 지정하여 각 면에 대한 설정을 다르게 지정할 수도 있다. 예를 들어 [{flipHorizontal:false, rotation:90}, {flipHorizontal: true, rotation: 180}, ...]과 같이 지정할 수 있다.</ko>\n\t * @param {Number} [config.width=width of container] the viewer's width. (in px) <ko>뷰어의 너비 (px 단위)</ko>\n\t * @param {Number} [config.height=height of container] the viewer's height.(in px) <ko>뷰어의 높이 (px 단위)</ko>\n\t *\n\t * @param {Number} [config.yaw=0] Initial Yaw of camera (in degree) <ko>카메라의 초기 Yaw (degree 단위)</ko>\n\t * @param {Number} [config.pitch=0] Initial Pitch of camera (in degree) <ko>카메라의 초기 Pitch (degree 단위)</ko>\n\t * @param {Number} [config.fov=65] Initial vertical field of view of camera (in degree) <ko>카메라의 초기 수직 field of view (degree 단위)</ko>\n\t * @param {Boolean} [config.showPolePoint=false] If false, the pole is not displayed inside the viewport <ko>false 인 경우, 극점은 뷰포트 내부에 표시되지 않습니다</ko>\n\t * @param {Boolean} [config.useZoom=true] When true, enables zoom with the wheel and Pinch gesture <ko>true 일 때 휠 및 집기 제스춰로 확대 / 축소 할 수 있습니다.</ko>\n\t * @param {Boolean} [config.useKeyboard=true] When true, enables the keyboard move key control: awsd, arrow keys <ko>true 이면 키보드 이동 키 컨트롤을 활성화합니다: awsd, 화살표 키</ko>\n\t * @param {String} [config.gyroMode=yawPitch] Enables control through device motion. (\"none\", \"yawPitch\", \"VR\") <br/>{@link eg.view360.PanoViewer.GYRO_MODE} <ko>디바이스 움직임을 통한 컨트롤을 활성화 합니다. (\"none\", \"yawPitch\", \"VR\") <br/>{@link eg.view360.PanoViewer.GYRO_MODE} </ko>\n\t * @param {Array} [config.yawRange=[-180, 180]] Range of controllable Yaw values <ko>제어 가능한 Yaw 값의 범위</ko>\n\t * @param {Array} [config.pitchRange=[-90, 90]] Range of controllable Pitch values <ko>제어 가능한 Pitch 값의 범위</ko>\n\t * @param {Array} [config.fovRange=[30, 110]] Range of controllable vertical field of view values <ko>제어 가능한 수직 field of view 값의 범위</ko>\n\t * @param {Number} [config.touchDirection= {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL}(6)] Direction of touch that can be controlled by user <br/>{@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>사용자가 터치로 조작 가능한 방향 <br/>{@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n\t *\n\t * @example\n\t * // PanoViewer Creation\n\t * // create PanoViewer with option\n\t * var PanoViewer = eg.view360.PanoViewer;\n\t * // Area where the image will be displayed(HTMLElement)\n\t * var container = document.getElementById(\"myPanoViewer\");\n\t *\n\t * var panoViewer = new PanoViewer(container, {\n\t *     // If projectionType is not specified, the default is \"equirectangular\".\n\t *     // Specifies an image of the \"equirectangular\" type.\n\t *     image: \"/path/to/image/image.jpg\"\n\t *});\n\t *\n\t * @example\n\t * // Cubemap Config Setting Example\n\t * // For support Youtube EAC projection, You should set cubemapConfig as follows.\n\t * cubemapConfig: {\n\t * \torder: \"LFRDBU\",\n\t * \ttileConfig: [\n\t * \t\ttileConfig: [{rotation: 0}, {rotation: 0}, {rotation: 0}, {rotation: 0}, {rotation: -90}, {rotation: 180}]\n\t * \t]\n\t * }\n\t */\n\tconstructor(container, options = {}) {\n\t\tsuper();\n\n\t\t// Raises the error event if webgl is not supported.\n\t\tif (!WebGLUtils.isWebGLAvailable()) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\t\ttype: ERROR_TYPE.NO_WEBGL,\n\t\t\t\t\tmessage: \"no webgl support\"\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!WebGLUtils.isStableWebGL()) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\t\ttype: ERROR_TYPE.INVALID_DEVICE,\n\t\t\t\t\tmessage: \"blacklisted browser\"\n\t\t\t\t});\n\t\t\t}, 0);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!!options.image && !!options.video) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\t\ttype: ERROR_TYPE.INVALID_RESOURCE,\n\t\t\t\t\tmessage: \"Specifying multi resouces(both image and video) is not valid.\"\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._container = container;\n\t\tthis._image = options.image || options.video;\n\t\tthis._isVideo = !!options.video;\n\t\tthis._projectionType = options.projectionType || PROJECTION_TYPE.EQUIRECTANGULAR;\n\t\tthis._cubemapConfig = Object.assign({\n\t\t\t/* RLUDBF is abnormal, we use it on CUBEMAP only for backward compatibility*/\n\t\t\torder: this._projectionType === PROJECTION_TYPE.CUBEMAP ? \"RLUDBF\" : \"RLUDFB\",\n\t\t\ttileConfig: {\n\t\t\t\tflipHirozontal: false,\n\t\t\t\trotation: 0\n\t\t\t}\n\t\t}, options.cubemapConfig);\n\n\t\t// If the width and height are not provided, will use the size of the container.\n\t\tthis._width = options.width || parseInt(window.getComputedStyle(container).width, 10);\n\t\tthis._height = options.height || parseInt(window.getComputedStyle(container).height, 10);\n\n\t\t/**\n\t\t * Cache the direction for the performance in renderLoop\n\t\t *\n\t\t * This value should be updated by \"change\" event of YawPitchControl.\n\t\t */\n\t\tthis._yaw = options.yaw || 0;\n\t\tthis._pitch = options.pitch || 0;\n\t\tthis._fov = options.fov || 65;\n\n\t\tthis._gyroMode = options.gyroMode || GYRO_MODE.YAWPITCH;\n\t\tthis._quaternion = null;\n\n\t\tthis._aspectRatio = this._height !== 0 ? this._width / this._height : 1;\n\t\tconst fovRange = options.fovRange || [30, 110];\n\t\tconst touchDirection = PanoViewer._isValidTouchDirection(options.touchDirection) ?\n\t\t\toptions.touchDirection : YawPitchControl.TOUCH_DIRECTION_ALL;\n\t\tconst yawPitchConfig = Object.assign(options, {\n\t\t\telement: container,\n\t\t\tyaw: this._yaw,\n\t\t\tpitch: this._pitch,\n\t\t\tfov: this._fov,\n\t\t\tgyroMode: this._gyroMode,\n\t\t\tfovRange,\n\t\t\taspectRatio: this._aspectRatio,\n\t\t\ttouchDirection\n\t\t});\n\n\t\tthis._isReady = false;\n\n\t\tthis._initYawPitchControl(yawPitchConfig);\n\t\tthis._initRenderer(this._yaw, this._pitch, this._fov, this._projectionType, this._cubemapConfig);\n\t}\n\n\t/**\n\t\t* Get the video element that the viewer is currently playing. You can use this for playback.\n\t\t* @ko 뷰어가 현재 사용 중인 비디오 요소를 얻습니다. 이 요소를 이용해 비디오의 컨트롤을 할 수 있습니다.\n\t\t* @method eg.view360.PanoViewer#getVideo\n\t\t* @return {HTMLVideoElement} HTMLVideoElement<ko>HTMLVideoElement</ko>\n\t\t* @example\n\t\t* var videoTag = panoViewer.getVideo();\n\t\t* videoTag.play(); // play video!\n\t\t*/\n\tgetVideo() {\n\t\tif (!this._isVideo) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._photoSphereRenderer.getContent();\n\t}\n\n\t/**\n\t * Set the video information to be used by the viewer.\n\t * @ko 뷰어가 사용할 이미지 정보를 설정합니다.\n\t * @method eg.view360.PanoViewer#setVideo\n\t * @param {String|HTMLVideoElement|Object} video Input video url or element or config object<ko>입력 비디오 URL 혹은 엘리먼트 혹은 설정객체를 활용(image 와 video 둘 중 하나만 설정)</ko>\n\t * @param {Object} param\n\t * @param {String} [param.projectionType={@link eg.view360.PanoViewer.PROJECTION_TYPE.EQUIRECTANGULAR}(\"equirectangular\")] Projection Type<ko>프로젝션 타입</ko>\n\t * @param {Object} param.cubemapConfig config cubemap projection layout. <ko>cubemap projection type 의 레이아웃 설정</ko>\n\t *\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setVideo(\"/path/to/video/video.mp4\", {\n\t *     projectionType: eg.view360.PanoViewer.PROJECTION_TYPE.EQUIRECTANGULAR\n\t * });\n\t */\n\tsetVideo(video, param = {}) {\n\t\tif (video) {\n\t\t\tthis.setImage(video, {\n\t\t\t\tprojectionType: param.projectionType,\n\t\t\t\tisVideo: true,\n\t\t\t\tcubemapConfig: param.cubemapConfig\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the image information that the viewer is currently using.\n\t * @ko 뷰어가 현재 사용하고있는 이미지 정보를 얻습니다.\n\t * @method eg.view360.PanoViewer#getImage\n\t * @return {Image} Image Object<ko>이미지 객체</ko>\n\t * @example\n\t * var imageObj = panoViewer.getImage();\n\t */\n\tgetImage() {\n\t\tif (this._isVideo) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._photoSphereRenderer.getContent();\n\t}\n\n\t/**\n\t * Set the image information to be used by the viewer.\n\t * @ko 뷰어가 사용할 이미지 정보를 설정합니다.\n\t * @method eg.view360.PanoViewer#setImage\n\t * @param {String|Image|Object} image Input image url or element or config object<ko>입력 이미지 URL 혹은 엘리먼트 혹은 설정객체를 활용(image 와 video 둘 중 하나만 설정한다.)</ko>\n\t * @param {Object} param Additional information<ko>이미지 추가 정보</ko>\n\t * @param {String} [param.projectionType=\"equirectangular\"] Projection Type<ko>프로젝션 타입</ko>\n\t * @param {Object} param.cubemapConfig config cubemap projection layout. <ko>cubemap projection type 레이아웃</ko>\n\t *\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setImage(\"/path/to/image/image.png\", {\n\t *     projectionType: eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP\n\t * });\n\t */\n\tsetImage(image, param = {}) {\n\t\tconst cubemapConfig = Object.assign({\n\t\t\torder: \"RLUDBF\",\n\t\t\ttileConfig: {\n\t\t\t\tflipHirozontal: false,\n\t\t\t\trotation: 0\n\t\t\t}\n\t\t}, param.cubemapConfig);\n\t\tconst isVideo = !!(param.isVideo);\n\n\t\tif (this._image && this._isVideo !== isVideo) {\n\t\t\t/* eslint-disable no-console */\n\t\t\tconsole.warn(\"Currently not supporting to change content type(Image <--> Video)\");\n\t\t\t/* eslint-enable no-console */\n\t\t\treturn this;\n\t\t}\n\n\t\tif (image) {\n\t\t\tthis._image = image;\n\t\t\tthis._isVideo = isVideo;\n\t\t\tthis._projectionType = param.projectionType || PROJECTION_TYPE.EQUIRECTANGULAR;\n\t\t\tthis._cubemapConfig = cubemapConfig;\n\n\t\t\tthis._deactivate();\n\t\t\tthis._initRenderer(this._yaw, this._pitch, this._fov, this._projectionType, this._cubemapConfig);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set whether the renderer always updates the texture and renders.\n\t * @ko 렌더러가 항상 텍스쳐를 갱신하고 화면을 렌더링 할지 여부를 설정할 수 있습니다.\n\t *\n\t * @method eg.view360.PanoViewer#keepUpdate\n\t * @param {Boolean} doUpdate When true viewer will always update texture and render, when false viewer will not update texture and render only camera config is changed.<ko>true면 항상 텍스쳐를 갱신하고 화면을 그리는 반면, false면 텍스쳐 갱신은 하지 않으며, 카메라 요소에 변화가 있을 때에만 화면을 그립니다.</ko>\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tkeepUpdate(doUpdate) {\n\t\tthis._photoSphereRenderer.keepUpdate(doUpdate);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get projection type (equirectangular/cube)\n\t * @ko 프로젝션 타입(Equirectangular 혹은 Cube)을 반환합니다.\n\t *\n\t * @method eg.view360.PanoViewer#getProjectionType\n\t * @return {String} {@link eg.view360.PanoViewer.PROJECTION_TYPE}\n\t */\n\tgetProjectionType() {\n\t\treturn this._projectionType;\n\t}\n\n\t_initRenderer(yaw, pitch, fov, projectionType, cubemapConfig) {\n\t\tthis._photoSphereRenderer = new PanoImageRenderer(\n\t\t\tthis._image,\n\t\t\tthis._width,\n\t\t\tthis._height,\n\t\t\tthis._isVideo,\n\t\t\t{\n\t\t\t\tinitialYaw: yaw,\n\t\t\t\tinitialPitch: pitch,\n\t\t\t\tfieldOfView: fov,\n\t\t\t\timageType: projectionType,\n\t\t\t\tcubemapConfig\n\t\t\t}\n\t\t);\n\n\t\tthis._bindRendererHandler();\n\n\t\tthis._photoSphereRenderer\n\t\t\t.bindTexture()\n\t\t\t.then(() => this._activate())\n\t\t\t.catch(() => {\n\t\t\t\tthis._triggerEvent(EVENTS.ERROR, {\n\t\t\t\t\ttype: ERROR_TYPE.FAIL_BIND_TEXTURE,\n\t\t\t\t\tmessage: \"failed to bind texture\"\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/**\n\t * update values of YawPitchControl if needed.\n\t * For example, In Panorama mode, initial fov and pitchRange is changed by aspect ratio of image.\n\t *\n\t * This function should be called after isReady status is true.\n\t */\n\t_updateYawPitchIfNeeded() {\n\t\tif (this._projectionType === PanoViewer.ProjectionType.PANORAMA) {\n\t\t\t// update fov by aspect ratio\n\t\t\tconst image = this._photoSphereRenderer.getContent();\n\t\t\tlet imageAspectRatio = image.naturalWidth / image.naturalHeight;\n\t\t\tlet isCircular;\n\t\t\tlet yawSize;\n\t\t\tlet maxFov;\n\n\t\t\t// If height is larger than width, then we assume it's rotated by 90 degree.\n\t\t\tif (imageAspectRatio < 1) {\n\t\t\t\t// So inverse the aspect ratio.\n\t\t\t\timageAspectRatio = 1 / imageAspectRatio;\n\t\t\t}\n\n\t\t\tif (imageAspectRatio < 6) {\n\t\t\t\tyawSize = glMatrix.toDegree(imageAspectRatio);\n\t\t\t\tisCircular = false;\n\t\t\t\t// 0.5 means ratio of half height of cylinder(0.5) and radius of cylider(1). 0.5/1 = 0.5\n\t\t\t\tmaxFov = glMatrix.toDegree(Math.atan(0.5)) * 2;\n\t\t\t} else {\n\t\t\t\tyawSize = 360;\n\t\t\t\tisCircular = true;\n\t\t\t\tmaxFov = (360 / imageAspectRatio); // Make it 5 fixed as axes does.\n\t\t\t}\n\n\t\t\t// console.log(\"_updateYawPitchIfNeeded\", maxFov, \"aspectRatio\", image.naturalWidth, image.naturalHeight, \"yawSize\", yawSize);\n\t\t\tconst minFov = (this._yawPitchControl.option(\"fovRange\"))[0];\n\n\t\t\t// this option should be called after fov is set.\n\t\t\tthis._yawPitchControl.option({\n\t\t\t\t\"fov\": maxFov, /* parameter for internal validation for pitchrange */\n\t\t\t\t\"yawRange\": [-yawSize / 2, yawSize / 2],\n\t\t\t\tisCircular,\n\t\t\t\t\"pitchRange\": [-maxFov / 2, maxFov / 2],\n\t\t\t\t\"fovRange\": [minFov, maxFov]\n\t\t\t});\n\t\t\tthis.lookAt({fov: maxFov});\n\t\t}\n\t}\n\n\t_bindRendererHandler() {\n\t\tthis._photoSphereRenderer.on(PanoImageRenderer.EVENTS.ERROR, e => {\n\t\t\tthis.trigger(EVENTS.ERROR, e);\n\t\t});\n\n\t\tthis._photoSphereRenderer.on(PanoImageRenderer.EVENTS.RENDERING_CONTEXT_LOST, e => {\n\t\t\tthis._deactivate();\n\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\ttype: ERROR_TYPE.RENDERING_CONTEXT_LOST,\n\t\t\t\tmessage: \"webgl rendering context lost\"\n\t\t\t});\n\t\t});\n\t}\n\n\t_initYawPitchControl(yawPitchConfig) {\n\t\tthis._yawPitchControl = new YawPitchControl(yawPitchConfig);\n\n\t\tthis._yawPitchControl.on(EVENTS.ANIMATION_END, e => {\n\t\t\tthis._triggerEvent(EVENTS.ANIMATION_END, e);\n\t\t});\n\n\t\tthis._yawPitchControl.on(\"change\", e => {\n\t\t\tthis._yaw = e.yaw;\n\t\t\tthis._pitch = e.pitch;\n\t\t\tthis._fov = e.fov;\n\t\t\tthis._quaternion = e.quaternion;\n\n\t\t\tthis._triggerEvent(EVENTS.VIEW_CHANGE, e);\n\t\t});\n\t}\n\n\t_triggerEvent(name, param) {\n\t\tconst evt = param || {};\n\n\t\t/**\n\t\t * Events that is fired when error occurs\n\t\t * @ko 에러 발생 시 발생하는 이벤트\n\t\t * @name eg.view360.PanoViewer#error\n\t\t * @event\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {Number} param.type Error type\n\t\t * \t\t10: INVALID_DEVICE: Unsupported device\n\t\t * \t\t11: NO_WEBGL: Webgl not support\n\t\t * \t\t12, FAIL_IMAGE_LOAD: Failed to load image\n\t\t * \t\t13: FAIL_BIND_TEXTURE: Failed to bind texture\n\t\t * \t\t14: INVALID_RESOURCE: Only one resource(image or video) should be specified\n\t\t * \t\t15: RENDERING_CONTEXT_LOST: WebGL context lost occurred\n\t\t * <ko>에러 종류\n\t\t * \t\t10: INVALID_DEVICE: 미지원 기기\n\t\t * \t\t11: NO_WEBGL: WEBGL 미지원\n\t\t * \t\t12, FAIL_IMAGE_LOAD: 이미지 로드 실패\n\t\t * \t\t13: FAIL_BIND_TEXTURE: 텍스쳐 바인딩 실패\n\t\t * \t\t14: INVALID_RESOURCE: 리소스 지정 오류 (image 혹은 video 중 하나만 지정되어야 함)\n\t\t * \t\t15: RENDERING_CONTEXT_LOST: WebGL context lost 발생\n\t\t * </ko>\n\t\t * @param {String} param.message Error message <ko>에러 메시지</ko>\n\t\t * @see {@link eg.view360.PanoViewer.ERROR_TYPE}\n\t\t * @example\n\t\t *\n\t\t * viwer.on({\n\t\t *\t\"error\" : function(evt) {\n\t\t *\t\t// evt.type === 13\n\t\t *\t\t// evt.message === \"failed to bind texture\"\n\t\t * });\n\t\t *\n\t\t * // constant can be used\n\t\t * viwer.on({\n\t\t *\teg.view360.PanoViewer.EVENTS.ERROR : function(evt) {\n\t\t *\t\t// evt.type === eg.view360.PanoViewer.ERROR_TYPE.FAIL_BIND_TEXTURE\n\t\t *\t\t// evt.message === \"failed to bind texture\"\n\t\t * });\n\t\t */\n\n\t\t/**\n\t\t * Events that is fired when PanoViewer is ready to go.\n\t\t * @ko PanoViewer 가 준비된 상태에 발생하는 이벤트\n\t\t * @name eg.view360.PanoViewer#ready\n\t\t * @event\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * viwer.on({\n\t\t *\t\"ready\" : function(evt) {\n\t\t *\t\t// PanoViewer is ready to show image and handle user interaction.\n\t\t * });\n\t\t */\n\n\t\t/**\n\t\t * Events that is fired when direction or fov is changed.\n\t\t * @ko PanoViewer 에서 바라보고 있는 방향이나 FOV(화각)가 변경되었을때 발생하는 이벤트\n\t\t * @name eg.view360.PanoViewer#viewChange\n\t\t * @event\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {Number} param.yaw yaw<ko>yaw</ko>\n\t\t * @param {Number} param.pitch pitch <ko>pitch</ko>\n\t\t * @param {Number} param.fov Field of view (fov) <ko>화각</ko>\n\t\t * @example\n\t\t *\n\t\t * viwer.on({\n\t\t *\t\"viewChange\" : function(evt) {\n\t\t *\t\t//evt.yaw, evt.pitch, evt.fov is available.\n\t\t * });\n\t\t */\n\n\t\t/**\n\t\t * Events that is fired when animation which is triggered by inertia is ended.\n\t\t * @ko 관성에 의한 애니메이션 동작이 완료되었을때 발생하는 이벤트\n\t\t * @name eg.view360.PanoViewer#animationEnd\n\t\t * @event\n\t\t * @example\n\t\t *\n\t\t * viwer.on({\n\t\t *\t\"animationEnd\" : function(evt) {\n\t\t *\t\t// animation is ended.\n\t\t * });\n\t\t */\n\t\treturn this.trigger(name, evt);\n\t}\n\n\t/**\n\t * When set true, enables zoom with the wheel or pinch gesture. However, in the case of touch, pinch works only when the touchDirection setting is {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL}.\n\t * @ko true 로 설정 시 휠 혹은 집기 동작으로 확대/축소 할 수 있습니다. false 설정 시 확대/축소 기능을 비활성화 합니다. 단, 터치인 경우 touchDirection 설정이 {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL} 인 경우에만 pinch 가 동작합니다.\n\t * @method eg.view360.PanoViewer#setUseZoom\n\t * @param {Boolean} useZoom\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tsetUseZoom(useZoom) {\n\t\ttypeof useZoom === \"boolean\" && this._yawPitchControl.option(\"useZoom\", useZoom);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * When true, enables the keyboard move key control: awsd, arrow keys\n\t * @ko true이면 키보드 이동 키 컨트롤을 활성화합니다. (awsd, 화살표 키)\n\t * @method eg.view360.PanoViewer#setUseKeyboard\n\t * @param {Boolean} useKeyboard\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tsetUseKeyboard(useKeyboard) {\n\t\tthis._yawPitchControl.option(\"useKeyboard\", useKeyboard);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables control through device motion. (\"none\", \"yawPitch\", \"VR\")\n\t * @ko 디바이스 움직임을 통한 컨트롤을 활성화 합니다. (\"none\", \"yawPitch\", \"VR\")\n\t * @method eg.view360.PanoViewer#setGyroMode\n\t * @param {String} gyroMode {@link eg.view360.PanoViewer.GYRO_MODE}\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setGyroMode(\"yawPitch\");\n\t * //equivalent\n\t * panoViewer.setGyroMode(eg.view360.PanoViewer.GYRO_MODE.YAWPITCH);\n\t */\n\tsetGyroMode(gyroMode) {\n\t\tthis._yawPitchControl.option(\"gyroMode\", gyroMode);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the range of controllable FOV values\n\t * @ko 제어 가능한 FOV 구간을 설정합니다.\n\t * @method eg.view360.PanoViewer#setFovRange\n\t * @param {Array} range\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setFovRange([50, 90]);\n\t */\n\tsetFovRange(range) {\n\t\tthis._yawPitchControl.option(\"fovRange\", range);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Getting the range of controllable FOV values\n\t * @ko 제어 가능한 FOV 구간을 반환합니다.\n\t * @method eg.view360.PanoViewer#getFovRange\n\t * @return {Array}\n\t * @example\n\t * var range = panoViewer.getFovRange(); //[50, 90]\n\t */\n\tgetFovRange() {\n\t\treturn this._yawPitchControl.option(\"fovRange\");\n\t}\n\n\t/**\n\t * Update size of canvas element by it's container element's or specified size. If size is not specified, the size of the container area is obtained and updated to that size.\n\t * @ko 캔버스 엘리먼트의 크기를 컨테이너 엘리먼트의 크기나 지정된 크기로 업데이트합니다. 만약 size 가 지정되지 않으면 컨테이너 영역의 크기를 얻어와 해당 크기로 갱신합니다.\n\t * @method eg.view360.PanoViewer#updateViewportDimensions\n\t * @param {Object} [size]\n\t * @param {Number} [size.width=width of container]\n\t * @param {Number} [size.height=height of container]\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tupdateViewportDimensions(size = {width: undefined, height: undefined}) {\n\t\tif (!this._isReady) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet containerSize;\n\n\t\tif (size.width === undefined || size.height === undefined) {\n\t\t\tcontainerSize = window.getComputedStyle(this._container);\n\t\t}\n\n\t\tconst width = size.width || parseInt(containerSize.width, 10);\n\t\tconst height = size.height || parseInt(containerSize.height, 10);\n\n\t\t// Skip if viewport is not changed.\n\t\tif (width === this._width && height === this._height) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tthis._aspectRatio = width / height;\n\t\tthis._photoSphereRenderer.updateViewportDimensions(width, height);\n\t\tthis._yawPitchControl.option(\"aspectRatio\", this._aspectRatio);\n\t\tthis._yawPitchControl.updatePanScale({height});\n\n\t\tthis.lookAt({}, 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the current field of view(FOV)\n\t * @ko 현재 field of view(FOV) 값을 반환합니다.\n\t * @method eg.view360.PanoViewer#getFov\n\t * @return {Number}\n\t */\n\tgetFov() {\n\t\treturn this._fov;\n\t}\n\n\t/**\n\t * Get the horizontal field of view in degree\n\t */\n\t_getHFov() {\n\t\treturn glMatrix.toDegree(\n\t\t\t2 * Math.atan(this._aspectRatio * Math.tan(glMatrix.toRadian(this._fov) / 2)));\n\t}\n\n\t/**\n\t * Get current yaw value\n\t * @ko 현재 yaw 값을 반환합니다.\n\t * @method eg.view360.PanoViewer#getYaw\n\t * @return {Number}\n\t */\n\tgetYaw() {\n\t\treturn this._yaw;\n\t}\n\n\t/**\n\t * Get current pitch value\n\t * @ko 현재 pitch 값을 반환합니다.\n\t * @method eg.view360.PanoViewer#getPitch\n\t * @return {Number}\n\t */\n\tgetPitch() {\n\t\treturn this._pitch;\n\t}\n\n\t/**\n\t * Get the range of controllable Yaw values\n\t * @ko 컨트롤 가능한 Yaw 구간을 반환합니다.\n\t * @method eg.view360.PanoViewer#getYawRange\n\t * @return {Array}\n\t */\n\tgetYawRange() {\n\t\treturn this._yawPitchControl.option(\"yawRange\");\n\t}\n\n\t/**\n\t * Get the range of controllable Pitch values\n\t * @ko 컨트롤 가능한 Pitch 구간을 가져옵니다.\n\t * @method eg.view360.PanoViewer#getPitchRange\n\t * @return {Array}\n\t */\n\tgetPitchRange() {\n\t\treturn this._yawPitchControl.option(\"pitchRange\");\n\t}\n\n\t/**\n\t * Set the range of controllable yaw\n\t * @ko 컨트롤 가능한 Yaw 구간을 반환합니다.\n\t * @method eg.view360.PanoViewer#setYawRange\n\t * @param {Array} range\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setYawRange([-90, 90]);\n\t */\n\tsetYawRange(yawRange) {\n\t\tthis._yawPitchControl.option(\"yawRange\", yawRange);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the range of controllable Pitch values\n\t * @ko 컨트롤 가능한 Pitch 구간을 설정합니다.\n\t * @method eg.view360.PanoViewer#setPitchRange\n\t * @param {Array} range\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setPitchRange([-40, 40]);\n\t */\n\tsetPitchRange(pitchRange) {\n\t\tthis._yawPitchControl.option(\"pitchRange\", pitchRange);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Specifies whether to display the pole by limiting the pitch range. If it is true, pole point can be displayed. If it is false, it is not displayed.\n\t * @ko pitch 범위를 제한하여 극점을 표시할지를 지정합니다. true 인 경우 극점까지 표현할 수 있으며 false 인 경우 극점까지 표시하지 않습니다.\n\t * @method eg.view360.PanoViewer#setShowPolePoint\n\t * @param {Boolean} showPolePoint\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tsetShowPolePoint(showPolePoint) {\n\t\tthis._yawPitchControl.option(\"showPolePoint\", showPolePoint);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set a new view by setting camera configuration. Any parameters not specified remain the same.\n\t * @ko 카메라 설정을 지정하여 화면을 갱신합니다. 지정되지 않은 매개 변수는 동일하게 유지됩니다.\n\t * @method eg.view360.PanoViewer#lookAt\n\t * @param {Object} orientation\n\t * @param {Number} orientation.yaw Target yaw in degree <ko>목표 yaw (degree 단위)</ko>\n\t * @param {Number} orientation.pitch Target pitch in degree <ko>목표 pitch (degree 단위)</ko>\n\t * @param {Number} orientation.fov Target vertical fov in degree <ko>목표 수직 fov (degree 단위)</ko>\n\t * @param {Number} duration Animation duration in milliseconds <ko>애니메이션 시간 (밀리 초)</ko>\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * // Change the yaw angle (absolute angle) to 30 degrees for one second.\n\t * panoViewer.lookAt({yaw: 30}, 1000);\n\t */\n\tlookAt(orientation, duration) {\n\t\tif (!this._isReady) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst yaw = orientation.yaw !== undefined ? orientation.yaw : this._yaw;\n\t\tconst pitch = orientation.pitch !== undefined ? orientation.pitch : this._pitch;\n\t\tconst pitchRange = this._yawPitchControl.option(\"pitchRange\");\n\t\tconst verticalAngleOfImage = pitchRange[1] - pitchRange[0];\n\t\tlet fov = orientation.fov !== undefined ? orientation.fov : this._fov;\n\n\t\tif (verticalAngleOfImage < fov) {\n\t\t\tfov = verticalAngleOfImage;\n\t\t}\n\n\t\tthis._yawPitchControl.lookAt({yaw, pitch, fov}, duration);\n\n\t\tif (duration === 0) {\n\t\t\tthis._photoSphereRenderer.render(yaw, pitch, fov);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_activate() {\n\t\tthis._photoSphereRenderer.attachTo(this._container);\n\t\tthis._yawPitchControl.enable();\n\n\t\tthis.updateViewportDimensions();\n\n\t\tthis._isReady = true;\n\n\t\t// update yawPitchControl after isReady status is true.\n\t\tthis._updateYawPitchIfNeeded();\n\n\t\tthis._triggerEvent(EVENTS.READY);\n\t\tthis._startRender();\n\t}\n\n\t/**\n\t * Register the callback on the raf to call _renderLoop every frame.\n\t */\n\t_startRender() {\n\t\tthis._renderLoop = this._renderLoop.bind(this);\n\t\tthis._rafId = window.requestAnimationFrame(this._renderLoop);\n\t}\n\n\t_renderLoop() {\n\t\tif (this._photoSphereRenderer) {\n\t\t\tif (this._quaternion) {\n\t\t\t\tthis._photoSphereRenderer.renderWithQuaternion(this._quaternion, this._fov);\n\t\t\t} else {\n\t\t\t\tthis._photoSphereRenderer.render(this._yaw, this._pitch, this._fov);\n\t\t\t}\n\t\t}\n\t\tthis._rafId = window.requestAnimationFrame(this._renderLoop);\n\t}\n\n\t_stopRender() {\n\t\tif (this._rafId) {\n\t\t\twindow.cancelAnimationFrame(this._rafId);\n\t\t\tdelete this._rafId;\n\t\t}\n\t}\n\n\t/**\n\t * Destroy webgl context and block user interaction and stop rendering\n\t */\n\t_deactivate() {\n\t\tif (this._photoSphereRenderer) {\n\t\t\tthis._photoSphereRenderer.destroy();\n\t\t\tthis._photoSphereRenderer = null;\n\t\t}\n\n\t\tif (this._isReady) {\n\t\t\tthis._yawPitchControl.disable();\n\t\t\tthis._stopRender();\n\t\t\tthis._isReady = false;\n\t\t}\n\t}\n\n\tstatic _isValidTouchDirection(direction) {\n\t\treturn direction === PanoViewer.TOUCH_DIRECTION.NONE ||\n\t\t\tdirection === PanoViewer.TOUCH_DIRECTION.YAW ||\n\t\t\tdirection === PanoViewer.TOUCH_DIRECTION.PITCH ||\n\t\t\tdirection === PanoViewer.TOUCH_DIRECTION.ALL;\n\t}\n\n\t/**\n\t * Set touch direction by which user can control.\n\t * @ko 사용자가 조작가능한 터치 방향을 지정합니다.\n\t * @method eg.view360.PanoViewer#setTouchDirection\n\t * @param {Number} direction of the touch. {@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>컨트롤 가능한 방향 {@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n\t * @return {eg.view360.PanoViewer} PanoViewer instance\n\t * @example\n\t *\n\t * panoViewer = new PanoViewer(el);\n\t * // Limit the touch direction to the yaw direction only.\n\t * panoViewer.setTouchDirection(eg.view360.PanoViewer.TOUCH_DIRECTION.YAW);\n\t */\n\tsetTouchDirection(direction) {\n\t\tif (PanoViewer._isValidTouchDirection(direction)) {\n\t\t\tthis._yawPitchControl.option(\"touchDirection\", direction);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns touch direction by which user can control\n\t * @ko 사용자가 조작가능한 터치 방향을 반환한다.\n\t * @method eg.view360.PanoViewer#getTouchDirection\n\t * @return {Number} direction of the touch. {@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>컨트롤 가능한 방향 {@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n\t * @example\n\t *\n\t * panoViewer = new PanoViewer(el);\n\t * // Returns the current touch direction.\n\t * var dir = panoViewer.getTouchDirection();\n\t */\n\tgetTouchDirection() {\n\t\treturn this._yawPitchControl.option(\"touchDirection\");\n\t}\n\n\t/**\n\t * Destroy viewer. Remove all registered event listeners and remove viewer canvas.\n\t * @ko 뷰어 인스턴스를 해제합니다. 모든 등록된 이벤트리스너를 제거하고 뷰어 캔버스를 삭제합니다.\n\t * @method eg.view360.PanoViewer#destroy\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tdestroy() {\n\t\tthis._deactivate();\n\n\t\tif (this._yawPitchControl) {\n\t\t\tthis._yawPitchControl.destroy();\n\t\t\tthis._yawPitchControl = null;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Check whether the current environment can execute PanoViewer\n\t * @ko 현재 브라우저 환경에서 PanoViewer 실행이 가능한지 여부를 반환합니다.\n\t * @function isSupported\n\t * @memberof eg.view360.PanoViewer\n\t * @return {Boolean} PanoViewer executable <ko>PanoViewer 실행가능 여부</ko>\n\t * @static\n\t */\n\tstatic isSupported() {\n\t\treturn WebGLUtils.isWebGLAvailable() && WebGLUtils.isStableWebGL();\n\t}\n\n\t/**\n\t * Check whether the current environment supports the WebGL\n\t * @ko 현재 브라우저 환경이 WebGL 을 지원하는지 여부를 확인합니다.\n\t * @function isWebGLAvailable\n\t * @memberof eg.view360.PanoViewer\n\t * @return {Boolean} WebGL support <ko>WebGL 지원여부</ko>\n\t * @static\n\t */\n\tstatic isWebGLAvailable() {\n\t\treturn WebGLUtils.isWebGLAvailable();\n\t}\n\n\t/**\n\t * Check whether the current environment supports the gyro sensor.\n\t * @ko 현재 브라우저 환경이 자이로 센서를 지원하는지 여부를 확인합니다.\n\t * @function isGyroSensorAvailable\n\t * @memberof eg.view360.PanoViewer\n\t * @param {Function} callback Function to take the gyro sensor availability as argument <ko>자이로 센서를 지원하는지 여부를 인자로 받는 함수</ko>\n\t * @static\n\t */\n\tstatic isGyroSensorAvailable(callback) {\n\t\tif (!DeviceMotionEvent) {\n\t\t\tcallback && callback(false);\n\t\t\treturn;\n\t\t}\n\n\t\tlet onDeviceMotionChange;\n\n\t\tfunction checkGyro() {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\tonDeviceMotionChange = function(deviceMotion) {\n\t\t\t\t\tconst isGyroSensorAvailable = !(deviceMotion.rotationRate.alpha == null);\n\n\t\t\t\t\tres(isGyroSensorAvailable);\n\t\t\t\t};\n\n\t\t\t\twindow.addEventListener(\"devicemotion\", onDeviceMotionChange);\n\t\t\t});\n\t\t}\n\n\t\tfunction timeout() {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\tsetTimeout(() => res(false), 1000);\n\t\t\t});\n\t\t}\n\n\t\tPromise.race([checkGyro(), timeout()]).then(isGyroSensorAvailable => {\n\t\t\twindow.removeEventListener(\"devicemotion\", onDeviceMotionChange);\n\n\t\t\tcallback && callback(isGyroSensorAvailable);\n\n\t\t\tPanoViewer.isGyroSensorAvailable = function(fb) {\n\t\t\t\tfb && fb(isGyroSensorAvailable);\n\t\t\t\treturn isGyroSensorAvailable;\n\t\t\t};\n\t\t});\n\t}\n}\n"],"names":["win","window","Math","self","Function","doc","document","Float32Array","Array","getComputedStyle","userAgent","navigator","SUPPORT_TOUCH","SUPPORT_DEVICEMOTION","DeviceMotionEvent","devicePixelRatio","docStyle","documentElement","style","target","i","len","length","CSS","supports","v1","r","MathUtil","degToRad","PI","radToDeg","Vector2","x","y","prototype","constructor","set","this","copy","v","subVectors","a","b","Vector3","z","sqrt","normalize","scalar","invScalar","multiplyScalar","applyQuaternion","q","qx","qy","qz","qw","w","ix","iy","iz","iw","dot","crossVectors","ax","ay","az","bx","by","bz","Quaternion","undefined","quaternion","setFromEulerXYZ","c1","cos","c2","c3","s1","sin","s2","s3","setFromEulerYXZ","setFromAxisAngle","axis","angle","halfAngle","s","multiply","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","inverse","l","slerp","qb","t","cosHalfTheta","halfTheta","acos","sinHalfTheta","abs","ratioA","ratioB","setFromUnitVectors","vFrom","vTo","module","isIOS","isWebViewAndroid","isSafari","isFirefoxAndroid","isR7","Util","MIN_TIMESTEP","MAX_TIMESTEP","base64","mimeType","clamp","value","min","max","lerp","race","promises","Promise","resolve","reject","then","test","platform","indexOf","isLandscapeMode","rtn","orientation","isTimestampDeltaValid","timestampDeltaS","isNaN","getScreenWidth","screen","width","height","getScreenHeight","requestFullscreen","element","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","getFullscreenElement","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","linkProgram","gl","vertexSource","fragmentSource","attribLocationMap","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attribName","attachShader","bindAttribLocation","deleteShader","getProgramUniforms","uniforms","uniformCount","getProgramParameter","ACTIVE_UNIFORMS","uniformName","getActiveUniform","name","replace","getUniformLocation","orthoMatrix","out","left","right","bottom","top","near","far","lr","bt","nf","copyArray","source","dest","n","isMobile","check","vendor","opera","substr","extend","src","key","hasOwnProperty","safariCssSizeWorkaround","canvas","parseInt","setTimeout","isDebug","getQueryParameter","results","RegExp","exec","location","search","decodeURIComponent","frameDataFromPose","piOver180","rad45","defaultOrientation","defaultPosition","updateEyeMatrices","projection","view","pose","parameters","vrDisplay","fov","upTan","downTan","leftTan","rightTan","xScale","yScale","fieldOfView","depthNear","depthFar","tan","upDegrees","downDegrees","leftDegrees","rightDegrees","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","position","offset","frameData","timestamp","leftProjectionMatrix","leftViewMatrix","getEyeParameters","rightProjectionMatrix","rightViewMatrix","isInsideCrossDomainIFrame","isFramed","refDomain","getDomainFromUrl","referrer","thisDomain","href","url","split","PosePredictor","predictionTimeS","previousQ","previousTimestampS","deltaQ","outQ","getPrediction","currentQ","gyro","timestampS","angularSpeed","console","log","toFixed","predictAngle","glMatrix","ARRAY_TYPE","degree","toRadian","toDegree","EPSILON","vec3","c","p","vec2","quat","rad","aw","bw","a0","a1","a2","a3","b0","b1","b2","b3","mat4","create","identity","rotateX","rotateY","fromQuat","yx","zx","zy","perspective","fovy","aspect","f","util","extractPitchFromQuat","baseV","fromValues","transformQuat","atan2","pow","ROTATE_CONSTANT","PITCH_DELTA","YAW_DELTA_BY_ROLL","YAW_DELTA_BY_YAW","targetAxis","meshPoint","getRotationDelta","prevQ","curQ","rotateKind","prevQuaternion","clone","curQuaternion","prevPoint","curPoint","meshPoint3","rotateDirection","cross","meshPoint2","vecU","vecV","vecN","coefficientA","coefficientB","coefficientC","distance","projectedPrevPoint","subtract","scale","trigonometricRatio","theta","crossVec","deltaRadian","version","branch","build","match","CHROME_VERSION","IS_CHROME_WITHOUT_DEVICE_MOTION","IS_ANDROID","MC_BIND_SCALE","GYRO_MODE","NONE","YAWPITCH","VR","DeviceMotion","_onDeviceMotion","_this","bind","_onDeviceOrientation","_onChromeWithoutDeviceMotion","isWithoutDeviceMotion","isAndroid","stillGyroVec","rawGyroVec","adjustedGyroVec","_timer","lastDevicemotionTimestamp","_isEnabled","enable","e","alpha","beta","gamma","trigger","inputEvent","deviceorientation","clearTimeout","Date","getTime","_this2","isGyroSensorAvailable","rotationRate","isGravitySensorAvailable","accelerationIncludingGravity","interval","devicemotionEvent","_extends","timeStamp","type","acceleration","adjustedRotationRate","addEventListener","disable","removeEventListener","Component","SensorSample","sample","sensorSample","ComplementaryFilter","kFilter","currentAccelMeasurement","currentGyroMeasurement","previousGyroMeasurement","filterQ","previousFilterQ","accelQ","isOrientationInitialized","estimatedGravity","measuredGravity","gyroIntegralQ","addAccelMeasurement","vector","addGyroMeasurement","deltaT","run_","accelToQuaternion_","gyroDeltaQ","gyroToQuaternionDelta_","invFilterQ","getQuaternionAngle","targetQ","getOrientation","accel","normAccel","dt","isFilterQuaternionInitialized","FusionPoseSensor","deviceMotion","accelerometer","gyroscope","_onDeviceMotionChange","_onScreenOrientationChange","filter","posePredictor","filterToWorldQ","isChromeUsingDegrees","inverseWorldToScreenQ","worldToScreenQ","originalPoseAdjustQ","_setScreenTransform","resetQ","on","isEnabled","destroy","_triggerChange","_prevOrientation","equals","_deviceOrientationQ","deviceOrientationFixQ","_alpha","out_","_convertFusionToPredicted","predictedQ","accGravity","rotRate","screenOrientation","TiltMotionInput","el","options","_prevQuaternion","_quaternion","fusionPoseSensor","threshold","_onPoseChange","mapAxes","axes","connect","observer","_attachEvent","disconnect","_dettachEvent","event","prvQ","yawDeltaByYaw","change","reduce","acc","off","screenRotationAngleInst","refCount","ScreenRotationAngle","_onOrientationChange","_spinR","_screenOrientationAngle","betaR","gammaR","getRadian","unref","RotationPanInput","_useRotation","_screenRotationAngle","setUseRotation","useRotation","_userDirection","Axes","DIRECTION_ALL","_direction","getOffset","properties","useDirection","newOffset","cosTheta","sinTheta","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","PanInput","ORIGIN_VECTOR","X_AXIS_VECTOR","Y_AXIS_VECTOR","DeviceQuaternion","_fusionPoseSensor","isTrusted","getCombinedQuaternion","yaw","pitch","deviceR","pitchAxis","rotateZ","yawQ","setAxisAngle","pitchQ","conj","conjugate","VERSION","DEFAULT_YAW_RANGE","DEFAULT_PITCH_RANGE","CIRCULAR_PITCH_RANGE","YawPitchControl","opt","showPolePoint","useZoom","useKeyboard","gyroMode","touchDirection","TOUCH_DIRECTION_YAW","yawRange","pitchRange","fovRange","aspectRatio","_element","_initialFov","_enabled","_isAnimating","_deviceQuaternion","_initAxes","option","yRange","_updateYawRange","pRange","_updatePitchRange","axesPanInput","axesWheelInput","WheelInput","axesTiltMotionInput","axesPinchInput","PinchInput","axesMoveKeyInput","MoveKeyInput","range","circular","isCircular","bounce","deceleration","maximumDuration","hold","evt","delta","_updateControlScale","updatePanScale","release","animationStart","animationEnd","param","get","areaHeight","args","argLen","_getOptions","beforeOptions","newOptions","changedKeyList","Object","keys","push","_setOptions","_getValidatedOptions","_applyOptions","_getValidYawRange","_getValidPitchRange","arguments","prevOptions","some","map","prevFov","nextFov","setTo","isVR","isYawPitch","_initDeviceQuaternion","_togglePinchInputByOption","_enableTouch","_inputs","direction","yawEnabled","pitchEnabled","_this3","newYawRange","newFov","newAspectRatio","ratio","adjustAspectRatio","horizontalFov","newPitchRange","changeEvt","pos","verticalAngle","halfFov","horizontalAngle","MAGIC_NUMBER","halfHorizontalFov","targetElement","input","inputRange","outputRange","rangeIdx","inputA","fraction","persistOrientation","_resetOrientation","lookAt","duration","Infinity","setBy","getYaw","getPitch","getFov","axisPanInput","axesDeviceOrientationInput","CONTROL_MODE_VR","CONTROL_MODE_YAWPITCH","TOUCH_DIRECTION_ALL","TOUCH_DIRECTION_PITCH","TOUCH_DIRECTION_NONE","STATUS","EVENT","ImageLoader","image","_image","_onceHandlers","_loadStatus","res","rej","LOADED","getElement","LOADING","isMaybeLoaded","createElement","onceLoaded","ERROR","img","_img","Image","crossOrigin","result","complete","naturalWidth","onload","onerror","targets","loadPromises","_this4","_once","all","reason","listener","fn","getStatus","forEach","handler","READY_STATUS","READYSTATECHANGE_EVENT_NAME","VideoLoader","video","_handlers","_sourceCount","_thresholdReadyState","_thresholdEventName","readyState","_onerror","_errorCount","_detachErrorHandler","_appendSourceElement","videoUrl","videoSrc","videoType","sourceElement","_video","appendChild","_reset","HTMLVideoElement","setAttribute","querySelectorAll","load","_attachErrorHandler","_sources","call","rejector","latIdx","lngIdx","WEBGL_ERROR_CODE","webglAvailability","WebGLUtils","shader","getShaderParameter","COMPILE_STATUS","LINK_STATUS","deleteProgram","initBuffer","data","itemSize","attr","buffer","createBuffer","bindBuffer","bufferData","STATIC_DRAW","numItems","enableVertexAttribArray","vertexAttribPointer","FLOAT","getWebglContext","userContextAttributes","webglIdentifiers","context","contextAttributes","preserveDrawingBuffer","antialias","onWebglcontextcreationerror","statusMessage","getContext","createTexture","textureTarget","texture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","isWebGLAvailable","webglContext","loseContextExtension","getExtension","loseContext","isStableWebGL","agentInfo","agent","isStableWebgl","os","parseFloat","browser","getErrorNameFromWebGLErrorCode","code","texImage2D","pixels","RGBA","UNSIGNED_BYTE","error","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","Agent","isIE11","EVENTS","Renderer","_forceDimension","_pixelCanvas","_pixelContext","getDimension","pixelSource","videoWidth","naturalHeight","videoHeight","updateShaderData","_initPixelSource","forceDimension","_getPixelSource","contentDimension","textureDimension","drawImage","_extractTileConfig","imageConfig","tileConfig","isArray","config","flipHorizontal","rotation","_triggerError","message","CubeRenderer","getVertexPositionData","_VERTEX_POSITION_DATA","getIndexData","_INDEX_DATA","indexData","vertexPositionData","extractOrder","order","getTextureCoordData","base","face","ordermap_","shift","unshift","pop","tileVertex","slice","elemSize","tileTemp","j","splice","join","getVertexShaderSource","getFragmentShaderSource","updateTexture","orderMap","surfaceIdx","tileIdx","TEXTURE_CUBE_MAP_POSITIVE_X","maxCubeMapTextureSize","getMaxCubeMapTextureSize","tile","extractTileFromImage","TEXTURE_CUBE_MAP","getSourceTileSize","outputTextureSize","inputTextureSize","tilePerRow","MAX_CUBE_MAP_TEXTURE_SIZE","_imageWidth","isPowerOfTwo","CubeStripRenderer","_vertices","coords","rows","coord","tileConfigs","_shrinkCoord","_transformCoord","index","val","concat","TEXTURE_2D","size","maxSize","activeTexture","TEXTURE0","pixelStorei","UNPACK_FLIP_Y_WEBGL","newCoord","_flipHorizontalCoord","_rotateCoord","rotationAngle","moved","shiftCount","ANGLE_CORRECTION_FOR_CENTER_ALIGN","textureCoordData","phi","sinPhi","u","SphereRenderer","_isStereoscopic","isStereoscopic","_TEXTURE_COORD_DATA","CylinderRenderer","resizeDimension","cylinderMaxRadian","halfCylinderY","rotated","imageAspectRatio","CYLIDER_Y","startAngleForCenterAlign","yIdx","yLength","ERROR_TYPE","INVALID_DEVICE","NO_WEBGL","FAIL_IMAGE_LOAD","FAIL_BIND_TEXTURE","INVALID_RESOURCE","RENDERING_CONTEXT_LOST","READY","VIEW_CHANGE","ANIMATION_END","PROJECTION_TYPE","EQUIRECTANGULAR","CUBEMAP","CUBESTRIP","PANORAMA","STEREOSCOPIC_EQUI","ImageType","DEVICE_PIXEL_RATIO","BIND_TEXTURE","IMAGE_LOADED","RENDERING_CONTEXT_RESTORE","RENDERER_ERROR","PanoImageRenderer","isVideo","sphericalConfig","renderingContextAttributes","_lastQuaternion","_lastYaw","_lastPitch","_lastFieldOfView","pMatrix","mvMatrix","textureCoordBuffer","vertexBuffer","indexBuffer","_initCanvas","_renderingContextAttributes","_imageConfig","_imageIsReady","_shouldForceDraw","_keepUpdate","_onContentLoad","_onContentError","setImage","imageType","cubemapConfig","getContent","_isVideo","flipHirozontal","_setImageType","_contentLoader","_imageType","_isCubeMap","_renderer","_initWebGL","margin","maxHeight","maxWidth","outline","_onWebglcontextlost","_onWebglcontextrestored","_triggerContentLoad","content","projectionType","isImageLoaded","_bindTexture","attachTo","parentElement","detach","forceContextLoss","hasRenderingContext","removeChild","isContextLost","shaderProgram","preventDefault","updateFieldOfView","_updateViewport","updateViewportDimensions","viewPortChanged","h","viewport","drawingBufferWidth","drawingBufferHeight","_initRenderingContext","_initShaderProgram","Error","getError","clearColor","deleteTexture","CULL_FACE","WebGLRenderingContext","vertexShaderSource","fragmentShaderSource","useProgram","vertexPositionAttribute","getAttribLocation","pMatrixUniform","mvMatrixUniform","samplerUniform","textureCoordAttribute","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","uniform1i","_initBuffers","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","Uint16Array","isEAC","uniform1f","_updateTexture","keepUpdate","doUpdate","renderWithQuaternion","exactEquals","_draw","render","uniformMatrix4fv","drawElements","TRIANGLES","UNSIGNED_SHORT","getProjectionRenderer","PanoViewer","container","_container","_projectionType","_cubemapConfig","_width","_height","_yaw","_pitch","_fov","_gyroMode","_aspectRatio","_isValidTouchDirection","yawPitchConfig","_isReady","_initYawPitchControl","_initRenderer","getVideo","_photoSphereRenderer","setVideo","getImage","warn","_deactivate","getProjectionType","initialYaw","initialPitch","_bindRendererHandler","_activate","_triggerEvent","_updateYawPitchIfNeeded","ProjectionType","yawSize","maxFov","atan","minFov","_yawPitchControl","setUseZoom","setUseKeyboard","setGyroMode","setFovRange","getFovRange","containerSize","_getHFov","getYawRange","getPitchRange","setYawRange","setPitchRange","setShowPolePoint","verticalAngleOfImage","_startRender","_renderLoop","_rafId","requestAnimationFrame","_stopRender","cancelAnimationFrame","TOUCH_DIRECTION","YAW","PITCH","ALL","setTouchDirection","getTouchDirection","isSupported","callback","onDeviceMotionChange","fb"],"mappings":"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"}