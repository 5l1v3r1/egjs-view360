{"version":3,"file":"view360.min.js","sources":["../node_modules/es6-promise/dist/es6-promise.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/quat.js","../node_modules/gl-matrix/esm/vec2.js","../src/utils/browser.js","../src/utils/browserFeature.js","../src/utils/math-util.js","../node_modules/webvr-polyfill/src/math-util.js","../node_modules/webvr-polyfill/src/sensor-fusion/pose-predictor.js","../node_modules/object-assign/index.js","../node_modules/webvr-polyfill/src/util.js","../src/YawPitchControl/consts.js","../src/YawPitchControl/input/DeviceMotion.js","../node_modules/webvr-polyfill/src/sensor-fusion/sensor-sample.js","../node_modules/webvr-polyfill/src/sensor-fusion/complementary-filter.js","../src/YawPitchControl/input/ComplementaryFilter.js","../src/YawPitchControl/input/FusionPoseSensor.js","../src/YawPitchControl/input/TiltMotionInput.js","../src/YawPitchControl/utils.js","../src/YawPitchControl/ScreenRotationAngle.js","../src/YawPitchControl/input/RotationPanInput.js","../src/YawPitchControl/DeviceQuaternion.js","../src/version.js","../src/YawPitchControl/YawPitchControl.js","../src/PanoImageRenderer/ImageLoader.js","../src/PanoImageRenderer/VideoLoader.js","../src/PanoImageRenderer/renderer/SphereRenderer.js","../src/PanoImageRenderer/WebGLUtils.js","../src/PanoImageRenderer/renderer/Renderer.js","../src/PanoImageRenderer/renderer/CubeRenderer.js","../src/PanoImageRenderer/renderer/CubeStripRenderer.js","../src/PanoViewer/consts.js","../src/PanoImageRenderer/renderer/CylinderRenderer.js","../src/PanoImageRenderer/vr/VRManager.js","../src/PanoImageRenderer/vr/XRManager.js","../src/PanoImageRenderer/WebGLAnimator.js","../src/PanoImageRenderer/PanoImageRenderer.js","../src/PanoViewer/PanoViewer.js","../src/SpinViewer/SpriteImage.js","../src/SpinViewer/SpinViewer.js"],"sourcesContent":["/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.8+1e68dce6\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then$$1 = void 0;\n    try {\n      then$$1 = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then$$1);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable no-new-func, no-nested-ternary */\nconst win = typeof window !== \"undefined\" && window.Math === Math ? window : typeof self !== \"undefined\" && self.Math === Math ? self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nconst doc = win.document;\nconst userAgent = (win.navigator && win.navigator.userAgent) || \"\";\nconst IS_IOS = navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\nconst IS_SAFARI_ON_DESKTOP =\n\tuserAgent.indexOf(\"Safari\") !== -1 &&\n\tuserAgent.indexOf(\"Chrome\") === -1 &&\n\tuserAgent.indexOf(\"Mac OS X\") !== -1 &&\n\t!IS_IOS;\nconst IS_SAMSUNG_BROWSER = /SamsungBrowser/i.test(userAgent);\n\nexport {\n\twin as window,\n\tdoc as document,\n\tIS_IOS,\n\tIS_SAFARI_ON_DESKTOP,\n\tIS_SAMSUNG_BROWSER\n};\n","/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport {window as win, document as doc} from \"./browser\";\n\nwin.Float32Array = (typeof win.Float32Array !== \"undefined\") ? win.Float32Array : win.Array;\n\nconst Float32Array = win.Float32Array;\nconst getComputedStyle = win.getComputedStyle;\nconst userAgent = win.navigator.userAgent;\nconst SUPPORT_TOUCH = \"ontouchstart\" in win;\nconst SUPPORT_DEVICEMOTION = \"ondevicemotion\" in win;\nconst DeviceMotionEvent = win.DeviceMotionEvent;\nconst devicePixelRatio = win.devicePixelRatio;\n\nconst TRANSFORM = (function() {\n\tconst docStyle = doc.documentElement.style;\n\tconst target = [\"transform\", \"webkitTransform\", \"msTransform\", \"mozTransform\"];\n\n\tfor (let i = 0, len = target.length; i < len; i++) {\n\t\tif (target[i] in docStyle) {\n\t\t\treturn target[i];\n\t\t}\n\t}\n\treturn \"\";\n})();\n\n// check for will-change support\nconst SUPPORT_WILLCHANGE = win.CSS && win.CSS.supports &&\n\twin.CSS.supports(\"will-change\", \"transform\");\n\nlet WEBXR_SUPPORTED = false;\n\nconst checkXRSupport = () => {\n\tif (!navigator.xr) {\n\t\treturn;\n\t}\n\n\tif (navigator.xr.isSessionSupported) {\n\t\tnavigator.xr.isSessionSupported(\"immersive-vr\").then(res => {\n\t\t\tWEBXR_SUPPORTED = res;\n\t\t}).catch(() => {});\n\t} else if (navigator.xr.supportsSession) {\n\t\tnavigator.xr.supportsSession(\"immersive-vr\").then(res => {\n\t\t\tWEBXR_SUPPORTED = res;\n\t\t}).catch(() => {});\n\t}\n}\n\nexport {\n\tFloat32Array,\n\tgetComputedStyle,\n\tuserAgent,\n\tTRANSFORM,\n\tSUPPORT_TOUCH,\n\tSUPPORT_DEVICEMOTION,\n\tSUPPORT_WILLCHANGE,\n\tcheckXRSupport,\n\tWEBXR_SUPPORTED,\n\tDeviceMotionEvent,\n\tdevicePixelRatio\n};\n\n","/**\n * Original Code\n * https://github.com/toji/gl-matrix/blob/v2.3.2/src/gl-matrix.js\n * Math Util\n * modified by egjs\n */\n/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.2\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n// Some minimal math functionality borrowed from gl-Matrix and stripped down\n// for the purposes of this library.\n\nimport {vec2, vec3, quat} from \"gl-matrix\";\n\nfunction quatToVec3(quaternion) {\n\tconst baseV = vec3.fromValues(0, 0, 1);\n\n\tvec3.transformQuat(baseV, baseV, quaternion);\n\treturn baseV;\n}\n\nfunction toDegree(a){\n\treturn a * 180 / Math.PI;\n}\n\nconst util = {};\n\nutil.isPowerOfTwo = function(n) {\n\treturn n && (n & (n - 1)) === 0;\n};\n\nutil.extractPitchFromQuat = function(quaternion) {\n\tconst baseV = quatToVec3(quaternion);\n\n\treturn -1 * Math.atan2(\n\t\tbaseV[1],\n\t\tMath.sqrt(Math.pow(baseV[0], 2) + Math.pow(baseV[2], 2)));\n};\n\nutil.hypot = Math.hypot || function(x, y) {\n\treturn Math.sqrt(x * x + y * y);\n};\n\n// implement reference\n// the general equation of a plane : http://www.gisdeveloper.co.kr/entry/평면의-공식\n// calculating angle between two vectors : http://darkpgmr.tistory.com/121\nconst ROTATE_CONSTANT = {\n\tPITCH_DELTA: 1,\n\tYAW_DELTA_BY_ROLL: 2,\n\tYAW_DELTA_BY_YAW: 3,\n};\n\nROTATE_CONSTANT[ROTATE_CONSTANT.PITCH_DELTA] = {\n\ttargetAxis: [0, 1, 0],\n\tmeshPoint: [0, 0, 1],\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_ROLL] = {\n\ttargetAxis: [0, 1, 0],\n\tmeshPoint: [1, 0, 0],\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_YAW] = {\n\ttargetAxis: [1, 0, 0],\n\tmeshPoint: [0, 0, 1],\n};\n\nfunction getRotationDelta(prevQ, curQ, rotateKind) {\n\tconst targetAxis = vec3.fromValues(\n\t\tROTATE_CONSTANT[rotateKind].targetAxis[0],\n\t\tROTATE_CONSTANT[rotateKind].targetAxis[1],\n\t\tROTATE_CONSTANT[rotateKind].targetAxis[2]\n\t);\n\tconst meshPoint = ROTATE_CONSTANT[rotateKind].meshPoint;\n\n\tconst prevQuaternion = quat.clone(prevQ);\n\tconst curQuaternion = quat.clone(curQ);\n\n\tquat.normalize(prevQuaternion, prevQuaternion);\n\tquat.normalize(curQuaternion, curQuaternion);\n\n\tlet prevPoint = vec3.fromValues(0, 0, 1);\n\tlet curPoint = vec3.fromValues(0, 0, 1);\n\n\tvec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n\tvec3.transformQuat(curPoint, curPoint, curQuaternion);\n\tvec3.transformQuat(targetAxis, targetAxis, curQuaternion);\n\n\tconst rotateDistance = vec3.dot(targetAxis, vec3.cross(vec3.create(), prevPoint, curPoint));\n\tconst rotateDirection = rotateDistance > 0 ? 1 : -1;\n\n\t// when counter clock wise, use vec3.fromValues(0,1,0)\n\t// when clock wise, use vec3.fromValues(0,-1,0)\n\t// const meshPoint1 = vec3.fromValues(0, 0, 0);\n\tconst meshPoint2 = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\n\tlet meshPoint3;\n\n\tif (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n\t\tmeshPoint3 = vec3.fromValues(0, rotateDirection, 0);\n\t} else {\n\t\tmeshPoint3 = vec3.fromValues(rotateDirection, 0, 0);\n\t}\n\n\tvec3.transformQuat(meshPoint2, meshPoint2, curQuaternion);\n\tvec3.transformQuat(meshPoint3, meshPoint3, curQuaternion);\n\n\tconst vecU = meshPoint2;\n\tconst vecV = meshPoint3;\n\tconst vecN = vec3.create();\n\n\tvec3.cross(vecN, vecU, vecV);\n\tvec3.normalize(vecN, vecN);\n\n\tconst coefficientA = vecN[0];\n\tconst coefficientB = vecN[1];\n\tconst coefficientC = vecN[2];\n//\tconst coefficientD = -1 * vec3.dot(vecN, meshPoint1);\n\n\t// a point on the plane\n\tcurPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\tvec3.transformQuat(curPoint, curPoint, curQuaternion);\n\n\t// a point should project on the plane\n\tprevPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\tvec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n\n\t// distance between prevPoint and the plane\n\tlet distance = Math.abs(\n\t\tprevPoint[0] * coefficientA +\n\t\tprevPoint[1] * coefficientB +\n\t\tprevPoint[2] * coefficientC\n\t);\n\n\tconst projectedPrevPoint = vec3.create();\n\n\tvec3.subtract(projectedPrevPoint, prevPoint, vec3.scale(vec3.create(), vecN, distance));\n\n\tlet trigonometricRatio =\n\t\t(projectedPrevPoint[0] * curPoint[0] +\n\t\tprojectedPrevPoint[1] * curPoint[1] +\n\t\tprojectedPrevPoint[2] * curPoint[2]) /\n\t\t(vec3.length(projectedPrevPoint) * vec3.length(curPoint));\n\n\t// defensive block\n\ttrigonometricRatio > 1 && (trigonometricRatio = 1);\n\n\tconst theta = Math.acos(trigonometricRatio);\n\n\tconst crossVec = vec3.cross(vec3.create(), curPoint, projectedPrevPoint);\n\n\tdistance =\n\t\tcoefficientA * crossVec[0] +\n\t\tcoefficientB * crossVec[1] +\n\t\tcoefficientC * crossVec[2];\n\n\tlet thetaDirection;\n\n\tif (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n\t\tthetaDirection = distance > 0 ? 1 : -1;\n\t} else {\n\t\tthetaDirection = distance < 0 ? 1 : -1;\n\t}\n\n\tconst deltaRadian = theta * thetaDirection * rotateDirection;\n\n\treturn toDegree(deltaRadian);\n}\n\nfunction angleBetweenVec2(v1, v2) {\n\tconst det = v1[0] * v2[1] - v2[0] * v1[1];\n\tconst theta = -Math.atan2(det, vec2.dot(v1, v2));\n\treturn theta;\n}\n\nutil.yawOffsetBetween = function(viewDir, targetDir) {\n\tconst viewDirXZ = vec2.fromValues(viewDir[0], viewDir[2]);\n\tconst targetDirXZ = vec2.fromValues(targetDir[0], targetDir[2]);\n\n\tvec2.normalize(viewDirXZ, viewDirXZ);\n\tvec2.normalize(targetDirXZ, targetDirXZ);\n\n\tconst theta = -angleBetweenVec2(viewDirXZ, targetDirXZ);\n\n\treturn theta;\n}\n\nutil.toDegree = toDegree;\nutil.getRotationDelta = getRotationDelta;\nutil.angleBetweenVec2 = angleBetweenVec2;\n\nexport {\n\tutil,\n\tROTATE_CONSTANT,\n};\n","/*\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar MathUtil = window.MathUtil || {};\n\nMathUtil.degToRad = Math.PI / 180;\nMathUtil.radToDeg = 180 / Math.PI;\n\n// Some minimal math functionality borrowed from THREE.Math and stripped down\n// for the purposes of this library.\n\n\nMathUtil.Vector2 = function ( x, y ) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nMathUtil.Vector2.prototype = {\n  constructor: MathUtil.Vector2,\n\n  set: function ( x, y ) {\n    this.x = x;\n    this.y = y;\n\n    return this;\n  },\n\n  copy: function ( v ) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  },\n\n  subVectors: function ( a, b ) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  },\n};\n\nMathUtil.Vector3 = function ( x, y, z ) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nMathUtil.Vector3.prototype = {\n  constructor: MathUtil.Vector3,\n\n  set: function ( x, y, z ) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n  },\n\n  copy: function ( v ) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n  },\n\n  length: function () {\n    return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n  },\n\n  normalize: function () {\n    var scalar = this.length();\n\n    if ( scalar !== 0 ) {\n      var invScalar = 1 / scalar;\n\n      this.multiplyScalar(invScalar);\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n\n  multiplyScalar: function ( scalar ) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n  },\n\n  applyQuaternion: function ( q ) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w;\n\n    // calculate quat * vector\n    var ix =  qw * x + qy * z - qz * y;\n    var iy =  qw * y + qz * x - qx * z;\n    var iz =  qw * z + qx * y - qy * x;\n    var iw = - qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n    this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n    this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n    return this;\n  },\n\n  dot: function ( v ) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n\n  crossVectors: function ( a, b ) {\n    var ax = a.x, ay = a.y, az = a.z;\n    var bx = b.x, by = b.y, bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n  },\n};\n\nMathUtil.Quaternion = function ( x, y, z, w ) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = ( w !== undefined ) ? w : 1;\n};\n\nMathUtil.Quaternion.prototype = {\n  constructor: MathUtil.Quaternion,\n\n  set: function ( x, y, z, w ) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n\n    return this;\n  },\n\n  copy: function ( quaternion ) {\n    this.x = quaternion.x;\n    this.y = quaternion.y;\n    this.z = quaternion.z;\n    this.w = quaternion.w;\n\n    return this;\n  },\n\n  setFromEulerXYZ: function( x, y, z ) {\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    return this;\n  },\n\n  setFromEulerYXZ: function( x, y, z ) {\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 - s1 * s2 * c3;\n    this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    return this;\n  },\n\n  setFromAxisAngle: function ( axis, angle ) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n\n    var halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n    this.x = axis.x * s;\n    this.y = axis.y * s;\n    this.z = axis.z * s;\n    this.w = Math.cos( halfAngle );\n\n    return this;\n  },\n\n  multiply: function ( q ) {\n    return this.multiplyQuaternions( this, q );\n  },\n\n  multiplyQuaternions: function ( a, b ) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n    var qax = a.x, qay = a.y, qaz = a.z, qaw = a.w;\n    var qbx = b.x, qby = b.y, qbz = b.z, qbw = b.w;\n\n    this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n    return this;\n  },\n\n  inverse: function () {\n    this.x *= -1;\n    this.y *= -1;\n    this.z *= -1;\n\n    this.normalize();\n\n    return this;\n  },\n\n  normalize: function () {\n    var l = Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n    if ( l === 0 ) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    } else {\n      l = 1 / l;\n\n      this.x = this.x * l;\n      this.y = this.y * l;\n      this.z = this.z * l;\n      this.w = this.w * l;\n    }\n\n    return this;\n  },\n\n  slerp: function ( qb, t ) {\n    if ( t === 0 ) return this;\n    if ( t === 1 ) return this.copy( qb );\n\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n\n    // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb.w + x * qb.x + y * qb.y + z * qb.z;\n\n    if ( cosHalfTheta < 0 ) {\n      this.w = - qb.w;\n      this.x = - qb.x;\n      this.y = - qb.y;\n      this.z = - qb.z;\n\n      cosHalfTheta = - cosHalfTheta;\n    } else {\n      this.copy( qb );\n    }\n\n    if ( cosHalfTheta >= 1.0 ) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n\n      return this;\n    }\n\n    var halfTheta = Math.acos( cosHalfTheta );\n    var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n    if ( Math.abs( sinHalfTheta ) < 0.001 ) {\n      this.w = 0.5 * ( w + this.w );\n      this.x = 0.5 * ( x + this.x );\n      this.y = 0.5 * ( y + this.y );\n      this.z = 0.5 * ( z + this.z );\n\n      return this;\n    }\n\n    var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n    ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n    this.w = ( w * ratioA + this.w * ratioB );\n    this.x = ( x * ratioA + this.x * ratioB );\n    this.y = ( y * ratioA + this.y * ratioB );\n    this.z = ( z * ratioA + this.z * ratioB );\n\n    return this;\n  },\n\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n\n    var v1, r;\n    var EPS = 0.000001;\n\n    return function ( vFrom, vTo ) {\n      if ( v1 === undefined ) v1 = new MathUtil.Vector3();\n\n      r = vFrom.dot( vTo ) + 1;\n\n      if ( r < EPS ) {\n        r = 0;\n\n        if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n          v1.set( - vFrom.y, vFrom.x, 0 );\n        } else {\n          v1.set( 0, - vFrom.z, vFrom.y );\n        }\n      } else {\n        v1.crossVectors( vFrom, vTo );\n      }\n\n      this.x = v1.x;\n      this.y = v1.y;\n      this.z = v1.z;\n      this.w = r;\n\n      this.normalize();\n\n      return this;\n    }\n  }(),\n};\n\nmodule.exports = MathUtil;\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MathUtil = require('../math-util.js');\nvar DEBUG = false;\n\n/**\n * Given an orientation and the gyroscope data, predicts the future orientation\n * of the head. This makes rendering appear faster.\n *\n * Also see: http://msl.cs.uiuc.edu/~lavalle/papers/LavYerKatAnt14.pdf\n *\n * @param {Number} predictionTimeS time from head movement to the appearance of\n * the corresponding image.\n */\nfunction PosePredictor(predictionTimeS) {\n  this.predictionTimeS = predictionTimeS;\n\n  // The quaternion corresponding to the previous state.\n  this.previousQ = new MathUtil.Quaternion();\n  // Previous time a prediction occurred.\n  this.previousTimestampS = null;\n\n  // The delta quaternion that adjusts the current pose.\n  this.deltaQ = new MathUtil.Quaternion();\n  // The output quaternion.\n  this.outQ = new MathUtil.Quaternion();\n}\n\nPosePredictor.prototype.getPrediction = function(currentQ, gyro, timestampS) {\n  if (!this.previousTimestampS) {\n    this.previousQ.copy(currentQ);\n    this.previousTimestampS = timestampS;\n    return currentQ;\n  }\n\n  // Calculate axis and angle based on gyroscope rotation rate data.\n  var axis = new MathUtil.Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n\n  var angularSpeed = gyro.length();\n\n  // If we're rotating slowly, don't do prediction.\n  if (angularSpeed < MathUtil.degToRad * 20) {\n    if (DEBUG) {\n      console.log('Moving slowly, at %s deg/s: no prediction',\n                  (MathUtil.radToDeg * angularSpeed).toFixed(1));\n    }\n    this.outQ.copy(currentQ);\n    this.previousQ.copy(currentQ);\n    return this.outQ;\n  }\n\n  // Get the predicted angle based on the time delta and latency.\n  var deltaT = timestampS - this.previousTimestampS;\n  var predictAngle = angularSpeed * this.predictionTimeS;\n\n  this.deltaQ.setFromAxisAngle(axis, predictAngle);\n  this.outQ.copy(this.previousQ);\n  this.outQ.multiply(this.deltaQ);\n\n  this.previousQ.copy(currentQ);\n\n  return this.outQ;\n};\n\n\nmodule.exports = PosePredictor;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar objectAssign = require('object-assign');\n\nvar Util = window.Util || {};\n\nUtil.MIN_TIMESTEP = 0.001;\nUtil.MAX_TIMESTEP = 1;\n\nUtil.base64 = function(mimeType, base64) {\n  return 'data:' + mimeType + ';base64,' + base64;\n};\n\nUtil.clamp = function(value, min, max) {\n  return Math.min(Math.max(min, value), max);\n};\n\nUtil.lerp = function(a, b, t) {\n  return a + ((b - a) * t);\n};\n\nUtil.isIOS = (function() {\n  var isIOS = /iPad|iPhone|iPod/.test(navigator.platform);\n  return function() {\n    return isIOS;\n  };\n})();\n\nUtil.isSafari = (function() {\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  return function() {\n    return isSafari;\n  };\n})();\n\nUtil.isFirefoxAndroid = (function() {\n  var isFirefoxAndroid = navigator.userAgent.indexOf('Firefox') !== -1 &&\n      navigator.userAgent.indexOf('Android') !== -1;\n  return function() {\n    return isFirefoxAndroid;\n  };\n})();\n\nUtil.isLandscapeMode = function() {\n  return (window.orientation == 90 || window.orientation == -90);\n};\n\n// Helper method to validate the time steps of sensor timestamps.\nUtil.isTimestampDeltaValid = function(timestampDeltaS) {\n  if (isNaN(timestampDeltaS)) {\n    return false;\n  }\n  if (timestampDeltaS <= Util.MIN_TIMESTEP) {\n    return false;\n  }\n  if (timestampDeltaS > Util.MAX_TIMESTEP) {\n    return false;\n  }\n  return true;\n};\n\nUtil.getScreenWidth = function() {\n  return Math.max(window.screen.width, window.screen.height) *\n      window.devicePixelRatio;\n};\n\nUtil.getScreenHeight = function() {\n  return Math.min(window.screen.width, window.screen.height) *\n      window.devicePixelRatio;\n};\n\nUtil.requestFullscreen = function(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\nUtil.exitFullscreen = function() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\nUtil.getFullscreenElement = function() {\n  return document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n};\n\nUtil.linkProgram = function(gl, vertexSource, fragmentSource, attribLocationMap) {\n  // No error checking for brevity.\n  var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexSource);\n  gl.compileShader(vertexShader);\n\n  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentSource);\n  gl.compileShader(fragmentShader);\n\n  var program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  for (var attribName in attribLocationMap)\n    gl.bindAttribLocation(program, attribLocationMap[attribName], attribName);\n\n  gl.linkProgram(program);\n\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n\n  return program;\n};\n\nUtil.getProgramUniforms = function(gl, program) {\n  var uniforms = {};\n  var uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformName = '';\n  for (var i = 0; i < uniformCount; i++) {\n    var uniformInfo = gl.getActiveUniform(program, i);\n    uniformName = uniformInfo.name.replace('[0]', '');\n    uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n  }\n  return uniforms;\n};\n\nUtil.orthoMatrix = function (out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right),\n      bt = 1 / (bottom - top),\n      nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n};\n\nUtil.isMobile = function() {\n  var check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n};\n\nUtil.extend = objectAssign;\n\nUtil.safariCssSizeWorkaround = function(canvas) {\n  // TODO(smus): Remove this workaround when Safari for iOS is fixed.\n  // iOS only workaround (for https://bugs.webkit.org/show_bug.cgi?id=152556).\n  //\n  // \"To the last I grapple with thee;\n  //  from hell's heart I stab at thee;\n  //  for hate's sake I spit my last breath at thee.\"\n  // -- Moby Dick, by Herman Melville\n  if (Util.isIOS()) {\n    var width = canvas.style.width;\n    var height = canvas.style.height;\n    canvas.style.width = (parseInt(width) + 1) + 'px';\n    canvas.style.height = (parseInt(height)) + 'px';\n    console.log('Resetting width to...', width);\n    setTimeout(function() {\n      console.log('Done. Width is now', width);\n      canvas.style.width = width;\n      canvas.style.height = height;\n    }, 100);\n  }\n\n  // Debug only.\n  window.Util = Util;\n  window.canvas = canvas;\n};\n\nmodule.exports = Util;\n","import {userAgent} from \"../utils/browserFeature\";\n/**\n * Returns a number value indiciating the version of Chrome being used,\n * or otherwise `null` if not on Chrome.\n *\n * Ref: https://github.com/immersive-web/cardboard-vr-display/pull/19\n */\n/**\n * In Chrome m65, `devicemotion` events are broken but subsequently fixed\n * in 65.0.3325.148. Since many browsers use Chromium, ensure that\n * we scope this detection by branch and build numbers to provide\n * a proper fallback.\n * https://github.com/immersive-web/webvr-polyfill/issues/307\n */\nlet version = -1; // It should not be null because it will be compared with number\nlet branch = null;\nlet build = null;\n\nconst match = /Chrome\\/([0-9]+)\\.(?:[0-9]*)\\.([0-9]*)\\.([0-9]*)/i.exec(userAgent);\n\nif (match) {\n\tversion = parseInt(match[1], 10);\n\tbranch = match[2];\n\tbuild = match[3];\n}\n\nconst CHROME_VERSION = version;\nconst IS_CHROME_WITHOUT_DEVICE_MOTION = version === 65 && branch === \"3325\" && parseInt(build, 10) < 148;\nconst IS_ANDROID = /Android/i.test(userAgent);\n\nconst CONTROL_MODE_VR = 1;\nconst CONTROL_MODE_YAWPITCH = 2;\n\nconst TOUCH_DIRECTION_NONE = 1;\nconst TOUCH_DIRECTION_YAW = 2;\nconst TOUCH_DIRECTION_PITCH = 4;\nconst TOUCH_DIRECTION_ALL = TOUCH_DIRECTION_YAW | TOUCH_DIRECTION_PITCH;\n\n/* Const for MovableCoord */\nconst MC_DECELERATION = 0.0014;\nconst MC_MAXIMUM_DURATION = 1000;\nconst MC_BIND_SCALE = [0.20, 0.20];\n\nconst MIN_FIELD_OF_VIEW = 20;\nconst MAX_FIELD_OF_VIEW = 110;\nconst PAN_SCALE = 320;\n\n// const DELTA_THRESHOLD = 0.015;\n// const DELTA_THRESHOLD = 0.09; // Note4\n// const DELTA_THRESHOLD = 0.0825;\n// const DELTA_THRESHOLD = 0.075;\n// const DELTA_THRESHOLD = 0.06;\n// const DELTA_THRESHOLD = 0.045;\nconst DELTA_THRESHOLD = 0.0375; // Note2\n\nconst YAW_RANGE_HALF = 180;\nconst PITCH_RANGE_HALF = 90;\nconst CIRCULAR_PITCH_RANGE_HALF = 180;\nconst PINCH_EVENTS = \"pinchstart pinchmove pinchend\";\n\nconst KEYMAP = {\n\tLEFT_ARROW: 37,\n\tA: 65,\n\tUP_ARROW: 38,\n\tW: 87,\n\tRIGHT_ARROW: 39,\n\tD: 68,\n\tDOWN_ARROW: 40,\n\tS: 83,\n};\n\nconst GYRO_MODE = {\n\tNONE: \"none\",\n\tYAWPITCH: \"yawPitch\",\n\tVR: \"VR\"\n};\n\nexport {\n\tGYRO_MODE,\n\n\tCONTROL_MODE_VR,\n\tCONTROL_MODE_YAWPITCH,\n\n\tTOUCH_DIRECTION_NONE,\n\tTOUCH_DIRECTION_YAW,\n\tTOUCH_DIRECTION_PITCH,\n\tTOUCH_DIRECTION_ALL,\n\n\tMC_DECELERATION,\n\tMC_MAXIMUM_DURATION,\n\tMC_BIND_SCALE,\n\tMIN_FIELD_OF_VIEW,\n\tMAX_FIELD_OF_VIEW,\n\tPAN_SCALE,\n\tDELTA_THRESHOLD,\n\tYAW_RANGE_HALF,\n\tPITCH_RANGE_HALF,\n\tCIRCULAR_PITCH_RANGE_HALF,\n\tPINCH_EVENTS,\n\tKEYMAP,\n\n\tCHROME_VERSION,\n\tIS_CHROME_WITHOUT_DEVICE_MOTION,\n\tIS_ANDROID\n};\n","import Component from \"@egjs/component\";\nimport {vec3} from \"gl-matrix\";\nimport {window} from \"../../utils/browser\";\nimport {IS_CHROME_WITHOUT_DEVICE_MOTION, IS_ANDROID} from \"../consts\";\n\nconst STILLNESS_THRESHOLD = 200; // millisecond\n\nexport default class DeviceMotion extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._onDeviceMotion = this._onDeviceMotion.bind(this);\n\t\tthis._onDeviceOrientation = this._onDeviceOrientation.bind(this);\n\t\tthis._onChromeWithoutDeviceMotion = this._onChromeWithoutDeviceMotion.bind(this);\n\n\t\tthis.isWithoutDeviceMotion = IS_CHROME_WITHOUT_DEVICE_MOTION;\n\t\tthis.isAndroid = IS_ANDROID;\n\n\t\tthis.stillGyroVec = vec3.create();\n\t\tthis.rawGyroVec = vec3.create();\n\t\tthis.adjustedGyroVec = vec3.create();\n\n\t\tthis._timer = null;\n\n\t\tthis.lastDevicemotionTimestamp = 0;\n\t\tthis._isEnabled = false;\n\t\tthis.enable();\n\t}\n\t_onChromeWithoutDeviceMotion(e) {\n\t\tlet {alpha, beta, gamma} = e;\n\n\t\t// There is deviceorientation event trigged with empty values\n\t\t// on Headless Chrome.\n\t\tif (alpha === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// convert to radian\n\t\talpha = (alpha || 0) * Math.PI / 180;\n\t\tbeta = (beta || 0) * Math.PI / 180;\n\t\tgamma = (gamma || 0) * Math.PI / 180;\n\n\t\tthis.trigger(\"devicemotion\", {\n\t\t\tinputEvent: {\n\t\t\t\tdeviceorientation: {\n\t\t\t\t\talpha,\n\t\t\t\t\tbeta,\n\t\t\t\t\tgamma: -gamma\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t_onDeviceOrientation() {\n\t\tthis._timer && clearTimeout(this._timer);\n\t\tthis._timer = setTimeout(() => {\n\t\t\tif ((new Date().getTime() - this.lastDevicemotionTimestamp) < STILLNESS_THRESHOLD) {\n\t\t\t\tvec3.copy(this.stillGyroVec, this.rawGyroVec);\n\t\t\t}\n\t\t}, STILLNESS_THRESHOLD);\n\t}\n\t_onDeviceMotion(e) {\n\t\t// desktop chrome triggers devicemotion event with empthy sensor values.\n\t\t// Those events should ignored.\n\t\tconst isGyroSensorAvailable = !(e.rotationRate.alpha == null);\n\t\tconst isGravitySensorAvailable = !(e.accelerationIncludingGravity.x == null);\n\n\t\tif (e.interval === 0 || !(isGyroSensorAvailable && isGravitySensorAvailable)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst devicemotionEvent = Object.assign({}, e);\n\n\t\tdevicemotionEvent.interval = e.interval;\n\t\tdevicemotionEvent.timeStamp = e.timeStamp;\n\t\tdevicemotionEvent.type = e.type;\n\t\tdevicemotionEvent.rotationRate = {\n\t\t\talpha: e.rotationRate.alpha,\n\t\t\tbeta: e.rotationRate.beta,\n\t\t\tgamma: e.rotationRate.gamma,\n\t\t};\n\t\tdevicemotionEvent.accelerationIncludingGravity = {\n\t\t\tx: e.accelerationIncludingGravity.x,\n\t\t\ty: e.accelerationIncludingGravity.y,\n\t\t\tz: e.accelerationIncludingGravity.z,\n\t\t};\n\t\tdevicemotionEvent.acceleration = {\n\t\t\tx: e.acceleration.x,\n\t\t\ty: e.acceleration.y,\n\t\t\tz: e.acceleration.z,\n\t\t};\n\n\t\tif (this.isAndroid) {\n\t\t\tvec3.set(\n\t\t\t\tthis.rawGyroVec,\n\t\t\t\te.rotationRate.alpha || 0,\n\t\t\t\te.rotationRate.beta || 0,\n\t\t\t\te.rotationRate.gamma || 0);\n\t\t\tvec3.subtract(this.adjustedGyroVec, this.rawGyroVec, this.stillGyroVec);\n\t\t\tthis.lastDevicemotionTimestamp = new Date().getTime();\n\n\t\t\tdevicemotionEvent.adjustedRotationRate = {\n\t\t\t\talpha: this.adjustedGyroVec[0],\n\t\t\t\tbeta: this.adjustedGyroVec[1],\n\t\t\t\tgamma: this.adjustedGyroVec[2]};\n\t\t}\n\n\t\tthis.trigger(\"devicemotion\", {\n\t\t\tinputEvent: devicemotionEvent\n\t\t});\n\t}\n\tenable() {\n\t\tif (this.isAndroid) {\n\t\t\twindow.addEventListener(\"deviceorientation\", this._onDeviceOrientation);\n\t\t}\n\t\tif (this.isWithoutDeviceMotion) {\n\t\t\twindow.addEventListener(\"deviceorientation\", this._onChromeWithoutDeviceMotion);\n\t\t} else {\n\t\t\twindow.addEventListener(\"devicemotion\", this._onDeviceMotion);\n\t\t}\n\t\tthis._isEnabled = true;\n\t}\n\tdisable() {\n\t\twindow.removeEventListener(\"deviceorientation\", this._onDeviceOrientation);\n\t\twindow.removeEventListener(\"deviceorientation\", this._onChromeWithoutDeviceMotion);\n\t\twindow.removeEventListener(\"devicemotion\", this._onDeviceMotion);\n\t\tthis._isEnabled = false;\n\t}\n}\n","function SensorSample(sample, timestampS) {\n  this.set(sample, timestampS);\n};\n\nSensorSample.prototype.set = function(sample, timestampS) {\n  this.sample = sample;\n  this.timestampS = timestampS;\n};\n\nSensorSample.prototype.copy = function(sensorSample) {\n  this.set(sensorSample.sample, sensorSample.timestampS);\n};\n\nmodule.exports = SensorSample;\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO: Fix up all \"new THREE\" instantiations to improve performance.\n */\nvar SensorSample = require('./sensor-sample.js');\nvar MathUtil = require('../math-util.js');\nvar Util = require('../util.js');\n\nvar DEBUG = false;\n\n/**\n * An implementation of a simple complementary filter, which fuses gyroscope and\n * accelerometer data from the 'devicemotion' event.\n *\n * Accelerometer data is very noisy, but stable over the long term.\n * Gyroscope data is smooth, but tends to drift over the long term.\n *\n * This fusion is relatively simple:\n * 1. Get orientation estimates from accelerometer by applying a low-pass filter\n *    on that data.\n * 2. Get orientation estimates from gyroscope by integrating over time.\n * 3. Combine the two estimates, weighing (1) in the long term, but (2) for the\n *    short term.\n */\nfunction ComplementaryFilter(kFilter) {\n  this.kFilter = kFilter;\n\n  // Raw sensor measurements.\n  this.currentAccelMeasurement = new SensorSample();\n  this.currentGyroMeasurement = new SensorSample();\n  this.previousGyroMeasurement = new SensorSample();\n\n  // Current filter orientation\n  this.filterQ = new MathUtil.Quaternion();\n  this.previousFilterQ = new MathUtil.Quaternion();\n\n  // Orientation based on the accelerometer.\n  this.accelQ = new MathUtil.Quaternion();\n  // Whether or not the orientation has been initialized.\n  this.isOrientationInitialized = false;\n  // Running estimate of gravity based on the current orientation.\n  this.estimatedGravity = new MathUtil.Vector3();\n  // Measured gravity based on accelerometer.\n  this.measuredGravity = new MathUtil.Vector3();\n\n  // Debug only quaternion of gyro-based orientation.\n  this.gyroIntegralQ = new MathUtil.Quaternion();\n}\n\nComplementaryFilter.prototype.addAccelMeasurement = function(vector, timestampS) {\n  this.currentAccelMeasurement.set(vector, timestampS);\n};\n\nComplementaryFilter.prototype.addGyroMeasurement = function(vector, timestampS) {\n  this.currentGyroMeasurement.set(vector, timestampS);\n\n  var deltaT = timestampS - this.previousGyroMeasurement.timestampS;\n  if (Util.isTimestampDeltaValid(deltaT)) {\n    this.run_();\n  }\n\n  this.previousGyroMeasurement.copy(this.currentGyroMeasurement);\n};\n\nComplementaryFilter.prototype.run_ = function() {\n\n  if (!this.isOrientationInitialized) {\n    this.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n    this.previousFilterQ.copy(this.accelQ);\n    this.isOrientationInitialized = true;\n    return;\n  }\n\n  var deltaT = this.currentGyroMeasurement.timestampS -\n      this.previousGyroMeasurement.timestampS;\n\n  // Convert gyro rotation vector to a quaternion delta.\n  var gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n  this.gyroIntegralQ.multiply(gyroDeltaQ);\n\n  // filter_1 = K * (filter_0 + gyro * dT) + (1 - K) * accel.\n  this.filterQ.copy(this.previousFilterQ);\n  this.filterQ.multiply(gyroDeltaQ);\n\n  // Calculate the delta between the current estimated gravity and the real\n  // gravity vector from accelerometer.\n  var invFilterQ = new MathUtil.Quaternion();\n  invFilterQ.copy(this.filterQ);\n  invFilterQ.inverse();\n\n  this.estimatedGravity.set(0, 0, -1);\n  this.estimatedGravity.applyQuaternion(invFilterQ);\n  this.estimatedGravity.normalize();\n\n  this.measuredGravity.copy(this.currentAccelMeasurement.sample);\n  this.measuredGravity.normalize();\n\n  // Compare estimated gravity with measured gravity, get the delta quaternion\n  // between the two.\n  var deltaQ = new MathUtil.Quaternion();\n  deltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n  deltaQ.inverse();\n\n  if (DEBUG) {\n    console.log('Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)',\n                MathUtil.radToDeg * Util.getQuaternionAngle(deltaQ),\n                (this.estimatedGravity.x).toFixed(1),\n                (this.estimatedGravity.y).toFixed(1),\n                (this.estimatedGravity.z).toFixed(1),\n                (this.measuredGravity.x).toFixed(1),\n                (this.measuredGravity.y).toFixed(1),\n                (this.measuredGravity.z).toFixed(1));\n  }\n\n  // Calculate the SLERP target: current orientation plus the measured-estimated\n  // quaternion delta.\n  var targetQ = new MathUtil.Quaternion();\n  targetQ.copy(this.filterQ);\n  targetQ.multiply(deltaQ);\n\n  // SLERP factor: 0 is pure gyro, 1 is pure accel.\n  this.filterQ.slerp(targetQ, 1 - this.kFilter);\n\n  this.previousFilterQ.copy(this.filterQ);\n};\n\nComplementaryFilter.prototype.getOrientation = function() {\n  return this.filterQ;\n};\n\nComplementaryFilter.prototype.accelToQuaternion_ = function(accel) {\n  var normAccel = new MathUtil.Vector3();\n  normAccel.copy(accel);\n  normAccel.normalize();\n  var quat = new MathUtil.Quaternion();\n  quat.setFromUnitVectors(new MathUtil.Vector3(0, 0, -1), normAccel);\n  quat.inverse();\n  return quat;\n};\n\nComplementaryFilter.prototype.gyroToQuaternionDelta_ = function(gyro, dt) {\n  // Extract axis and angle from the gyroscope data.\n  var quat = new MathUtil.Quaternion();\n  var axis = new MathUtil.Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n  quat.setFromAxisAngle(axis, gyro.length() * dt);\n  return quat;\n};\n\n\nmodule.exports = ComplementaryFilter;\n","import MathUtil from \"webvr-polyfill/src/math-util\";\nimport ComplementaryFilter from \"webvr-polyfill/src/sensor-fusion/complementary-filter\";\n\nComplementaryFilter.prototype.run_ = function() {\n\tif (!this.isOrientationInitialized) {\n\t\tthis.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n\t\tthis.previousFilterQ.copy(this.accelQ);\n\t\tthis.isOrientationInitialized = true;\n\t\treturn;\n\t}\n\n\tconst deltaT = this.currentGyroMeasurement.timestampS -\n\tthis.previousGyroMeasurement.timestampS;\n\n\t// Convert gyro rotation vector to a quaternion delta.\n\tconst gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n\n\tthis.gyroIntegralQ.multiply(gyroDeltaQ);\n\n\t// filter_1 = K * (filter_0 + gyro * dT) + (1 - K) * accel.\n\tthis.filterQ.copy(this.previousFilterQ);\n\tthis.filterQ.multiply(gyroDeltaQ);\n\n\t// Calculate the delta between the current estimated gravity and the real\n\t// gravity vector from accelerometer.\n\tconst invFilterQ = new MathUtil.Quaternion();\n\n\tinvFilterQ.copy(this.filterQ);\n\tinvFilterQ.inverse();\n\n\tthis.estimatedGravity.set(0, 0, -1);\n\tthis.estimatedGravity.applyQuaternion(invFilterQ);\n\tthis.estimatedGravity.normalize();\n\n\tthis.measuredGravity.copy(this.currentAccelMeasurement.sample);\n\tthis.measuredGravity.normalize();\n\n\t// Compare estimated gravity with measured gravity, get the delta quaternion\n\t// between the two.\n\tconst deltaQ = new MathUtil.Quaternion();\n\n\tdeltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n\tdeltaQ.inverse();\n\n\t// Calculate the SLERP target: current orientation plus the measured-estimated\n\t// quaternion delta.\n\tconst targetQ = new MathUtil.Quaternion();\n\n\ttargetQ.copy(this.filterQ);\n\ttargetQ.multiply(deltaQ);\n\n\t// SLERP factor: 0 is pure gyro, 1 is pure accel.\n\tthis.filterQ.slerp(targetQ, 1 - this.kFilter);\n\n\tthis.previousFilterQ.copy(this.filterQ);\n\n\tif (!this.isFilterQuaternionInitialized) {\n\t\tthis.isFilterQuaternionInitialized = true;\n\t}\n};\n\nComplementaryFilter.prototype.getOrientation = function() {\n\tif (this.isFilterQuaternionInitialized) {\n\t\treturn this.filterQ;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport default ComplementaryFilter;\n","import Component from \"@egjs/component\";\nimport {quat} from \"gl-matrix\";\nimport PosePredictor from \"webvr-polyfill/src/sensor-fusion/pose-predictor\";\nimport MathUtil from \"webvr-polyfill/src/math-util\";\nimport Util from \"webvr-polyfill/src/util\";\nimport {window} from \"../../utils/browser\";\nimport DeviceMotion from \"./DeviceMotion\";\nimport ComplementaryFilter from \"./ComplementaryFilter\";\nimport {CHROME_VERSION} from \"../consts\";\n\nconst K_FILTER = 0.98;\nconst PREDICTION_TIME_S = 0.040;\n\nexport default class FusionPoseSensor extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.deviceMotion = new DeviceMotion();\n\n\t\tthis.accelerometer = new MathUtil.Vector3();\n\t\tthis.gyroscope = new MathUtil.Vector3();\n\n\t\tthis._onDeviceMotionChange = this._onDeviceMotionChange.bind(this);\n\t\tthis._onScreenOrientationChange = this._onScreenOrientationChange.bind(this);\n\n\t\tthis.filter = new ComplementaryFilter(K_FILTER);\n\t\tthis.posePredictor = new PosePredictor(PREDICTION_TIME_S);\n\n\t\tthis.filterToWorldQ = new MathUtil.Quaternion();\n\n\t\tthis.isFirefoxAndroid = Util.isFirefoxAndroid();\n\t\tthis.isIOS = Util.isIOS();\n\n\t\t// Ref https://github.com/immersive-web/cardboard-vr-display/issues/18\n\t\tthis.isChromeUsingDegrees = CHROME_VERSION >= 66;\n\n\t\tthis._isEnabled = false;\n\n\t\t// Set the filter to world transform, depending on OS.\n\t\tif (this.isIOS) {\n\t\t\tthis.filterToWorldQ.setFromAxisAngle(new MathUtil.Vector3(1, 0, 0), Math.PI / 2);\n\t\t} else {\n\t\t\tthis.filterToWorldQ.setFromAxisAngle(new MathUtil.Vector3(1, 0, 0), -Math.PI / 2);\n\t\t}\n\n\t\tthis.inverseWorldToScreenQ = new MathUtil.Quaternion();\n\t\tthis.worldToScreenQ = new MathUtil.Quaternion();\n\t\tthis.originalPoseAdjustQ = new MathUtil.Quaternion();\n\t\tthis.originalPoseAdjustQ.setFromAxisAngle(new MathUtil.Vector3(0, 0, 1),\n\t\t\t-window.orientation * Math.PI / 180);\n\n\t\tthis._setScreenTransform();\n\t\t// Adjust this filter for being in landscape mode.\n\t\tif (Util.isLandscapeMode()) {\n\t\t\tthis.filterToWorldQ.multiply(this.inverseWorldToScreenQ);\n\t\t}\n\n\t\t// Keep track of a reset transform for resetSensor.\n\t\tthis.resetQ = new MathUtil.Quaternion();\n\n\t\tthis.deviceMotion.on(\"devicemotion\", this._onDeviceMotionChange);\n\t\tthis.enable();\n\t}\n\tenable() {\n\t\tif (this.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.deviceMotion.enable();\n\t\tthis._isEnabled = true;\n\t\twindow.addEventListener(\"orientationchange\", this._onScreenOrientationChange);\n\t}\n\tdisable() {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.deviceMotion.disable();\n\t\tthis._isEnabled = false;\n\t\twindow.removeEventListener(\"orientationchange\", this._onScreenOrientationChange);\n\t}\n\tisEnabled() {\n\t\treturn this._isEnabled;\n\t}\n\tdestroy() {\n\t\tthis.disable();\n\t\tthis.deviceMotion = null;\n\t}\n\t_triggerChange() {\n\t\tconst orientation = this.getOrientation();\n\n\t\t// if orientation is not prepared. don't trigger change event\n\t\tif (!orientation) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._prevOrientation) {\n\t\t\tthis._prevOrientation = orientation;\n\t\t\treturn;\n\t\t}\n\n\t\tif (quat.equals(this._prevOrientation, orientation)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.trigger(\"change\", {quaternion: orientation});\n\t}\n\tgetOrientation() {\n\t\tlet orientation;\n\n\t\t// Hack around using deviceorientation instead of devicemotion\n\t\tif (this.deviceMotion.isWithoutDeviceMotion && this._deviceOrientationQ) {\n\t\t\tthis.deviceOrientationFixQ = this.deviceOrientationFixQ || (() => {\n\t\t\t\tconst y = new MathUtil.Quaternion()\n\t\t\t\t\t.setFromAxisAngle(new MathUtil.Vector3(0, 1, 0), -this._alpha);\n\n\t\t\t\treturn y;\n\t\t\t})();\n\n\t\t\torientation = this._deviceOrientationQ;\n\t\t\tconst out = new MathUtil.Quaternion();\n\n\t\t\tout.copy(orientation);\n\t\t\tout.multiply(this.filterToWorldQ);\n\t\t\tout.multiply(this.resetQ);\n\t\t\tout.multiply(this.worldToScreenQ);\n\t\t\tout.multiplyQuaternions(this.deviceOrientationFixQ, out);\n\n\t\t\t// return quaternion as glmatrix quaternion object\n\t\t\tconst out_ = quat.fromValues(\n\t\t\t\tout.x,\n\t\t\t\tout.y,\n\t\t\t\tout.z,\n\t\t\t\tout.w\n\t\t\t);\n\n\t\t\treturn quat.normalize(out_, out_);\n\t\t} else {\n\t\t\t// Convert from filter space to the the same system used by the\n\t\t\t// deviceorientation event.\n\t\t\torientation = this.filter.getOrientation();\n\n\t\t\tif (!orientation) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst out = this._convertFusionToPredicted(orientation);\n\n\t\t\t// return quaternion as glmatrix quaternion object\n\t\t\tconst out_ = quat.fromValues(\n\t\t\t\tout.x,\n\t\t\t\tout.y,\n\t\t\t\tout.z,\n\t\t\t\tout.w\n\t\t\t);\n\n\t\t\treturn quat.normalize(out_, out_);\n\t\t}\n\t}\n\t_convertFusionToPredicted(orientation) {\n\t\t// Predict orientation.\n\t\tthis.predictedQ =\n\t\t\tthis.posePredictor.getPrediction(orientation, this.gyroscope, this.previousTimestampS);\n\n\t\t// Convert to THREE coordinate system: -Z forward, Y up, X right.\n\t\tconst out = new MathUtil.Quaternion();\n\n\t\tout.copy(this.filterToWorldQ);\n\t\tout.multiply(this.resetQ);\n\t\tout.multiply(this.predictedQ);\n\t\tout.multiply(this.worldToScreenQ);\n\n\t\treturn out;\n\t}\n\t_onDeviceMotionChange({inputEvent}) {\n\t\tconst deviceorientation = inputEvent.deviceorientation;\n\t\tconst deviceMotion = inputEvent;\n\t\tconst accGravity = deviceMotion.accelerationIncludingGravity;\n\t\tconst rotRate = deviceMotion.adjustedRotationRate || deviceMotion.rotationRate;\n\t\tlet timestampS = deviceMotion.timeStamp / 1000;\n\n\t\tif (deviceorientation) {\n\t\t\tif (!this._alpha) {\n\t\t\t\tthis._alpha = deviceorientation.alpha;\n\t\t\t}\n\t\t\tthis._deviceOrientationQ = this._deviceOrientationQ || new MathUtil.Quaternion();\n\t\t\tthis._deviceOrientationQ.setFromEulerYXZ(\n\t\t\t\tdeviceorientation.beta,\n\t\t\t\tdeviceorientation.alpha,\n\t\t\t\tdeviceorientation.gamma\n\t\t\t);\n\n\t\t\tthis._triggerChange();\n\t\t} else {\n\t\t\t// Firefox Android timeStamp returns one thousandth of a millisecond.\n\t\t\tif (this.isFirefoxAndroid) {\n\t\t\t\ttimestampS /= 1000;\n\t\t\t}\n\n\t\t\tthis.accelerometer.set(-accGravity.x, -accGravity.y, -accGravity.z);\n\t\t\tthis.gyroscope.set(rotRate.alpha, rotRate.beta, rotRate.gamma);\n\n\t\t\t// Browsers on iOS, Firefox/Android, and Chrome m66/Android `rotationRate`\n\t\t\t// is reported in degrees, so we first convert to radians.\n\t\t\tif (this.isIOS || this.isFirefoxAndroid || this.isChromeUsingDegrees) {\n\t\t\t\tthis.gyroscope.multiplyScalar(Math.PI / 180);\n\t\t\t}\n\n\t\t\tthis.filter.addAccelMeasurement(this.accelerometer, timestampS);\n\t\t\tthis.filter.addGyroMeasurement(this.gyroscope, timestampS);\n\n\t\t\tthis._triggerChange();\n\n\t\t\tthis.previousTimestampS = timestampS;\n\t\t}\n\t}\n\t_onScreenOrientationChange(screenOrientation) {\n\t\tthis._setScreenTransform(window.orientation);\n\t}\n\t_setScreenTransform() {\n\t\tthis.worldToScreenQ.set(0, 0, 0, 1);\n\n\t\tconst orientation = window.orientation;\n\n\t\tswitch (orientation) {\n\t\t\tcase 0:\n\t\t\t\tbreak;\n\t\t\tcase 90:\n\t\t\tcase -90:\n\t\t\tcase 180:\n\t\t\t\tthis.worldToScreenQ\n\t\t\t\t\t.setFromAxisAngle(new MathUtil.Vector3(0, 0, 1), orientation / -180 * Math.PI);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.inverseWorldToScreenQ.copy(this.worldToScreenQ);\n\t\tthis.inverseWorldToScreenQ.inverse();\n\t}\n}\n","import Component from \"@egjs/component\";\nimport {quat} from \"gl-matrix\";\nimport {toAxis} from \"../utils\";\nimport FusionPoseSensor from \"./FusionPoseSensor\";\nimport {util, ROTATE_CONSTANT} from \"../../utils/math-util\";\n\nfunction getDeltaYaw(prvQ, curQ) {\n\tconst yawDeltaByYaw = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_YAW);\n\tconst yawDeltaByRoll = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_ROLL) *\n\t\tMath.sin(util.extractPitchFromQuat(curQ));\n\n\treturn yawDeltaByRoll + yawDeltaByYaw;\n}\n\nfunction getDeltaPitch(prvQ, curQ) {\n\tconst pitchDelta = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.PITCH_DELTA);\n\n\treturn pitchDelta;\n}\n\nexport default class TiltMotionInput extends Component {\n\tconstructor(el, options) {\n\t\tsuper();\n\t\tthis.element = el;\n\n\t\tthis._prevQuaternion = null;\n\t\tthis._quaternion = null;\n\n\t\tthis.fusionPoseSensor = null;\n\n\t\tthis.options = Object.assign({\n\t\t\tscale: 1,\n\t\t\tthreshold: 0,\n\t\t}, options);\n\n\t\tthis._onPoseChange = this._onPoseChange.bind(this);\n\t}\n\tmapAxes(axes) {\n\t\tthis.axes = axes;\n\t}\n\tconnect(observer) {\n\t\tif (this.observer) {\n\t\t\treturn this;\n\t\t}\n\t\tthis.observer = observer;\n\t\tthis.fusionPoseSensor = new FusionPoseSensor();\n\t\tthis.fusionPoseSensor.enable();\n\t\tthis._attachEvent();\n\t\treturn this;\n\t}\n\tdisconnect() {\n\t\tif (!this.observer) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._dettachEvent();\n\t\tthis.fusionPoseSensor.disable();\n\t\tthis.fusionPoseSensor.destroy();\n\t\tthis.fusionPoseSensor = null;\n\t\tthis.observer = null;\n\t\treturn this;\n\t}\n\tdestroy() {\n\t\tthis.disconnect();\n\t\tthis.element = null;\n\t\tthis.options = null;\n\t\tthis.axes = null;\n\t\tthis._prevQuaternion = null;\n\t\tthis._quaternion = null;\n\t}\n\t_onPoseChange(event) {\n\t\tif (!this._prevQuaternion) {\n\t\t\tthis._prevQuaternion = quat.clone(event.quaternion);\n\t\t\tthis._quaternion = quat.clone(event.quaternion);\n\t\t\treturn;\n\t\t}\n\n\t\tquat.copy(this._prevQuaternion, this._quaternion);\n\t\tquat.copy(this._quaternion, event.quaternion);\n\n\t\tthis.observer.change(this, event, toAxis(this.axes, [\n\t\t\tgetDeltaYaw(this._prevQuaternion, this._quaternion),\n\t\t\tgetDeltaPitch(this._prevQuaternion, this._quaternion)\n\t\t]));\n\t}\n\t_attachEvent() {\n\t\tthis.fusionPoseSensor.on(\"change\", this._onPoseChange);\n\t}\n\t_dettachEvent() {\n\t\tthis.fusionPoseSensor.off(\"change\", this._onPoseChange);\n\t}\n}\n","import {\n\tutil as mathUtil,\n\tROTATE_CONSTANT,\n} from \"../utils/math-util\";\n\nexport function toAxis(source, offset) {\n\treturn offset.reduce((acc, v, i) => {\n\t\tif (source[i]) {\n\t\t\tacc[source[i]] = v;\n\t\t}\n\t\treturn acc;\n\t}, {});\n}\n\nexport function getDeltaYaw(prvQ, curQ) {\n\tconst yawDeltaByYaw = mathUtil.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_YAW);\n\tconst yawDeltaByRoll = mathUtil.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_ROLL) *\n\t\tMath.sin(mathUtil.extractPitchFromQuat(curQ));\n\n\treturn yawDeltaByRoll + yawDeltaByYaw;\n}\n\nexport function getDeltaPitch(prvQ, curQ) {\n\tconst pitchDelta = mathUtil.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.PITCH_DELTA);\n\n\treturn pitchDelta;\n}\n","import {glMatrix} from \"gl-matrix\";\nimport {window} from \"../utils/browser\";\n\n// Singleton\nlet screenRotationAngleInst = null;\nlet refCount = 0;\n\nexport default class ScreenRotationAngle {\n\tconstructor() {\n\t\trefCount++;\n\n\t\tif (screenRotationAngleInst) {\n\t\t\treturn screenRotationAngleInst;\n\t\t}\n\t\t/* eslint-disable */\n\t\tscreenRotationAngleInst = this;\n\t\t/* eslint-enable */\n\t\tthis._onDeviceOrientation = this._onDeviceOrientation.bind(this);\n\t\tthis._onOrientationChange = this._onOrientationChange.bind(this);\n\n\t\tthis._spinR = 0;\n\n\t\tthis._screenOrientationAngle = 0;\n\t\twindow.addEventListener(\"deviceorientation\", this._onDeviceOrientation);\n\t\twindow.addEventListener(\"orientationchange\", this._onOrientationChange);\n\t}\n\n\t_onDeviceOrientation(e) {\n\t\tif (e.beta === null || e.gamma === null) {\n\t\t\t// (Chrome) deviceorientation is fired with invalid information {alpha=null, beta=null, ...} despite of not dispatching it. We skip it.\n\t\t\treturn;\n\t\t}\n\n\t\t// Radian\n\t\tconst betaR = glMatrix.toRadian(e.beta);\n\t\tconst gammaR = glMatrix.toRadian(e.gamma);\n\n\t\t/* spinR range = [-180, 180], left side: 0 ~ -180(deg), right side: 0 ~ 180(deg) */\n\t\tthis._spinR = Math.atan2(Math.cos(betaR) * Math.sin(gammaR), Math.sin(betaR));\n\t}\n\n\t_onOrientationChange(e) {\n\t\tif (window.screen && window.screen.orientation && window.screen.orientation.angle !== undefined) {\n\t\t\tthis._screenOrientationAngle = screen.orientation.angle;\n\t\t} else if (window.orientation !== undefined) {\n\t\t\t/* iOS */\n\t\t\tthis._screenOrientationAngle = window.orientation >= 0 ?\n\t\t\t\twindow.orientation : 360 + window.orientation;\n\t\t}\n\t}\n\n\tgetRadian() {\n\t\t// Join with screen orientation\n\t\t// this._testVal = this._spinR + \", \" + this._screenOrientationAngle + \", \" + window.orientation;\n\t\treturn this._spinR + glMatrix.toRadian(this._screenOrientationAngle);\n\t}\n\n\tunref() {\n\t\tif (--refCount > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.removeEventListener(\"deviceorientation\", this._onDeviceOrientation);\n\t\twindow.removeEventListener(\"orientationchange\", this._onOrientationChange);\n\n\t\tthis._spinR = 0;\n\t\tthis._screenOrientationAngle = 0;\n\t\t/* eslint-disable */\n\t\tscreenRotationAngleInst = null;\n\t\t/* eslint-enable */\n\t\trefCount = 0;\n\t}\n}\n","import Axes, {PanInput} from \"@egjs/axes\";\nimport ScreenRotationAngle from \"../ScreenRotationAngle\";\n\n/**\n * RotationPanInput is extension of PanInput to compensate coordinates by screen rotation angle.\n *\n * The reason for using this function is that in VR mode,\n * the roll angle is adjusted in the direction opposite to the screen rotation angle.\n *\n * Therefore, the angle that the user touches and moves does not match the angle at which the actual object should move.\n * @extends PanInput\n */\nexport default class RotationPanInput extends PanInput {\n\t/**\n\t * Constructor\n\t *\n\t * @private\n\t * @param {HTMLElement} el target element\n\t * @param {Object} [options] The option object\n\t * @param {Boolean} [options.useRotation]  Whether to use rotation(or VR)\n\t */\n\tconstructor(el, options) {\n\t\tsuper(el, options);\n\n\t\tthis._useRotation = false;\n\t\tthis._screenRotationAngle = null;\n\n\t\tthis.setUseRotation(!!(options && options.useRotation));\n\n\t\tthis._userDirection = Axes.DIRECTION_ALL;\n\t}\n\n\tsetUseRotation(useRotation) {\n\t\tthis._useRotation = useRotation;\n\n\t\tif (this._screenRotationAngle) {\n\t\t\tthis._screenRotationAngle.unref();\n\t\t\tthis._screenRotationAngle = null;\n\t\t}\n\n\t\tif (this._useRotation) {\n\t\t\tthis._screenRotationAngle = new ScreenRotationAngle();\n\t\t}\n\t}\n\n\tconnect(observer) {\n\t\t// User intetened direction\n\t\tthis._userDirection = this._direction;\n\n\t\t// In VR Mode, Use ALL direction if direction is not none\n\t\t// Because horizontal and vertical is changed dynamically by screen rotation.\n\t\t// this._direction is used to initialize hammerjs\n\t\tif (this._useRotation && (this._direction & Axes.DIRECTION_ALL)) {\n\t\t\tthis._direction = Axes.DIRECTION_HORIZONTAL;\n\t\t}\n\n\t\tsuper.connect(observer);\n\t}\n\n\tgetOffset(properties, useDirection) {\n\t\tif (this._useRotation === false) {\n\t\t\treturn super.getOffset(properties, useDirection);\n\t\t}\n\n\t\tconst offset = super.getOffset(properties, [true, true]);\n\t\tconst newOffset = [0, 0];\n\n\t\tconst theta = this._screenRotationAngle.getRadian();\n\n\t\tconst cosTheta = Math.cos(theta);\n\t\tconst sinTheta = Math.sin(theta);\n\n\t\t// RotateZ\n\t\tnewOffset[0] = offset[0] * cosTheta - offset[1] * sinTheta;\n\t\tnewOffset[1] = offset[1] * cosTheta + offset[0] * sinTheta;\n\n\t\t// Use only user allowed direction.\n\t\tif (!(this._userDirection & Axes.DIRECTION_HORIZONTAL)) {\n\t\t\tnewOffset[0] = 0;\n\t\t} else if (!(this._userDirection & Axes.DIRECTION_VERTICAL)) {\n\t\t\tnewOffset[1] = 0;\n\t\t}\n\n\t\treturn newOffset;\n\t}\n\n\tdestroy() {\n\t\tif (this._useRotation) {\n\t\t\tthis._screenRotationAngle && this._screenRotationAngle.unref();\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n}\n\n/**\n * Override getDirectionByAngle to return DIRECTION_ALL\n * Ref: https://github.com/naver/egjs-axes/issues/99\n *\n * But we obey axes's rule. If axes's rule is problem, let's apply following code.\n */\n// PanInput.getDirectionByAngle = function (angle, thresholdAngle) {\n// \treturn DIRECTION_ALL;\n// };\n","import Component from \"@egjs/component\";\nimport {vec3, glMatrix, quat} from \"gl-matrix\";\nimport FusionPoseSensor from \"./input/FusionPoseSensor\";\n\nconst Y_AXIS_VECTOR = vec3.fromValues(0, 1, 0);\n\nexport default class DeviceQuaternion extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._fusionPoseSensor = new FusionPoseSensor();\n\t\tthis._quaternion = quat.create();\n\n\t\tthis._fusionPoseSensor.enable();\n\t\tthis._fusionPoseSensor.on(\"change\", e => {\n\t\t\tthis._quaternion = e.quaternion;\n\n\t\t\tthis.trigger(\"change\", {isTrusted: true});\n\t\t});\n\t}\n\n\tgetCombinedQuaternion(yaw) {\n\t\tconst yawQ = quat.setAxisAngle(quat.create(), Y_AXIS_VECTOR, glMatrix.toRadian(-yaw));\n\t\tconst conj = quat.conjugate(quat.create(), this._quaternion);\n\t\t// Multiply pitch quaternion -> device quaternion -> yaw quaternion\n\t\tconst outQ = quat.multiply(quat.create(), conj, yawQ);\n\n\t\treturn outQ;\n\t}\n\n\tdestroy() {\n\t\t// detach all event handler\n\t\tthis.off();\n\n\t\tif (this._fusionPoseSensor) {\n\t\t\tthis._fusionPoseSensor.off();\n\t\t\tthis._fusionPoseSensor.destroy();\n\t\t\tthis._fusionPoseSensor = null;\n\t\t}\n\t}\n}\n","const VERSION = \"#__VERSION__#\";\n\nexport {\n\tVERSION\n};\n","import Component from \"@egjs/component\";\nimport Axes, {PinchInput, MoveKeyInput, WheelInput} from \"@egjs/axes\";\nimport {vec2, glMatrix} from \"gl-matrix\";\nimport {getComputedStyle, SUPPORT_TOUCH, SUPPORT_DEVICEMOTION} from \"../utils/browserFeature\";\nimport TiltMotionInput from \"./input/TiltMotionInput\";\nimport RotationPanInput from \"./input/RotationPanInput\";\nimport DeviceQuaternion from \"./DeviceQuaternion\";\nimport {util as mathUtil} from \"../utils/math-util\";\nimport {\n\tGYRO_MODE,\n\tTOUCH_DIRECTION_YAW,\n\tTOUCH_DIRECTION_PITCH,\n\tTOUCH_DIRECTION_ALL,\n\tMC_DECELERATION,\n\tMC_MAXIMUM_DURATION,\n\tMC_BIND_SCALE,\n\tMAX_FIELD_OF_VIEW,\n\tPAN_SCALE,\n\tYAW_RANGE_HALF,\n\tPITCH_RANGE_HALF,\n\tCIRCULAR_PITCH_RANGE_HALF,\n\tCONTROL_MODE_VR,\n\tCONTROL_MODE_YAWPITCH,\n\tTOUCH_DIRECTION_NONE,\n} from \"./consts\";\nimport {VERSION} from \"../version\";\n\nconst DEFAULT_YAW_RANGE = [-YAW_RANGE_HALF, YAW_RANGE_HALF];\nconst DEFAULT_PITCH_RANGE = [-PITCH_RANGE_HALF, PITCH_RANGE_HALF];\nconst CIRCULAR_PITCH_RANGE = [-CIRCULAR_PITCH_RANGE_HALF, CIRCULAR_PITCH_RANGE_HALF];\n\n/**\n * A module used to provide coordinate based on yaw/pitch orientation. This module receives user touch action, keyboard, mouse and device orientation(if it exists) as input, then combines them and converts it to yaw/pitch coordinates.\n *\n * @alias eg.YawPitchControl\n * @extends eg.Component\n *\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n */\nclass YawPitchControl extends Component {\n\tstatic VERSION = VERSION;\n\t// Expose DeviceOrientationControls sub module for test purpose\n\tstatic CONTROL_MODE_VR = CONTROL_MODE_VR;\n\tstatic CONTROL_MODE_YAWPITCH = CONTROL_MODE_YAWPITCH;\n\tstatic TOUCH_DIRECTION_ALL = TOUCH_DIRECTION_ALL;\n\tstatic TOUCH_DIRECTION_YAW = TOUCH_DIRECTION_YAW;\n\tstatic TOUCH_DIRECTION_PITCH = TOUCH_DIRECTION_PITCH;\n\tstatic TOUCH_DIRECTION_NONE = TOUCH_DIRECTION_NONE;\n\t/**\n\t * @param {Object} options The option object of the eg.YawPitch module\n\t * @param {Element}[options.element=null] element A base element for the eg.YawPitch module\n\t * @param {Number} [options.yaw=0] initial yaw (degree)\n\t * @param {Number} [options.pitch=0] initial pitch (degree)\n\t * @param {Number} [options.fov=65] initial field of view (degree)\n\t * @param {Boolean} [optiosn.showPolePoint=true] Indicates whether pole is shown\n\t * @param {Boolean} [options.useZoom=true] Indicates whether zoom is available\n\t * @param {Boolean} [options.useKeyboard=true] Indicates whether keyboard is enabled\n\t * @param {String} [config.gyroMode=yawPitch] Enables control through device motion.\n\t * @param {Number} [options.touchDirection=TOUCH_DIRECTION_ALL] Direction of the touch movement (TOUCH_DIRECTION_ALL: all,  TOUCH_DIRECTION_YAW: horizontal, TOUCH_DIRECTION_PITCH: vertical, TOUCH_DIRECTION_NONE: no move)\n\t * @param {Array} [options.yawRange=[-180, 180] Range of visible yaw\n\t * @param {Array} [options.pitchRange=[-90, 90] Range of visible pitch\n\t * @param {Array} [options.fovRange=[30, 110] Range of FOV\n\t * @param {Number} [options.aspectRatio=1] Aspect Ratio\n\t */\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tconst opt = Object.assign({\n\t\t\telement: null,\n\t\t\tyaw: 0,\n\t\t\tpitch: 0,\n\t\t\tfov: 65,\n\t\t\tshowPolePoint: false,\n\t\t\tuseZoom: true,\n\t\t\tuseKeyboard: true,\n\t\t\tgyroMode: GYRO_MODE.YAWPITCH,\n\t\t\ttouchDirection: TOUCH_DIRECTION_ALL,\n\t\t\tyawRange: DEFAULT_YAW_RANGE,\n\t\t\tpitchRange: DEFAULT_PITCH_RANGE,\n\t\t\tfovRange: [30, 110],\n\t\t\taspectRatio: 1, /* TODO: Need Mandatory? */\n\t\t}, options);\n\n\t\tthis._element = opt.element;\n\t\tthis._initialFov = opt.fov;\n\t\tthis._enabled = false;\n\t\tthis._isAnimating = false;\n\t\tthis._deviceQuaternion = null;\n\n\t\tthis._initAxes(opt);\n\t\tthis.option(opt);\n\t}\n\n\t_initAxes(opt) {\n\t\tconst yRange = this._updateYawRange(opt.yawRange, opt.fov, opt.aspectRatio);\n\t\tconst pRange = this._updatePitchRange(opt.pitchRange, opt.fov, opt.showPolePoint);\n\t\tconst useRotation = opt.gyroMode === GYRO_MODE.VR;\n\n\t\tthis.axesPanInput = new RotationPanInput(this._element, {useRotation});\n\t\tthis.axesWheelInput = new WheelInput(this._element, {scale: -4});\n\t\tthis.axesTiltMotionInput = null;\n\t\tthis.axesPinchInput = SUPPORT_TOUCH ? new PinchInput(this._element, {scale: -1}) : null;\n\t\tthis.axesMoveKeyInput = new MoveKeyInput(this._element, {scale: [-6, 6]});\n\n\t\tthis.axes = new Axes({\n\t\t\tyaw: {\n\t\t\t\trange: yRange,\n\t\t\t\tcircular: YawPitchControl.isCircular(yRange),\n\t\t\t\tbounce: [0, 0]\n\t\t\t},\n\t\t\tpitch: {\n\t\t\t\trange: pRange,\n\t\t\t\tcircular: YawPitchControl.isCircular(pRange),\n\t\t\t\tbounce: [0, 0]\n\t\t\t},\n\t\t\tfov: {\n\t\t\t\trange: opt.fovRange,\n\t\t\t\tcircular: [false, false],\n\t\t\t\tbounce: [0, 0]\n\t\t\t},\n\t\t}, {\n\t\t\tdeceleration: MC_DECELERATION,\n\t\t\tmaximumDuration: MC_MAXIMUM_DURATION\n\t\t}, {\n\t\t\tyaw: opt.yaw,\n\t\t\tpitch: opt.pitch,\n\t\t\tfov: opt.fov\n\t\t}).on({\n\t\t\thold: evt => {\n\t\t\t\t// Restore maximumDuration not to be spin too mush.\n\t\t\t\tthis.axes.options.maximumDuration = MC_MAXIMUM_DURATION;\n\n\t\t\t\tthis.trigger(\"hold\", {isTrusted: evt.isTrusted});\n\t\t\t},\n\t\t\tchange: evt => {\n\t\t\t\tif (evt.delta.fov !== 0) {\n\t\t\t\t\tthis._updateControlScale(evt);\n\t\t\t\t\tthis.updatePanScale();\n\t\t\t\t}\n\t\t\t\tthis._triggerChange(evt);\n\t\t\t},\n\t\t\trelease: evt => {\n\t\t\t\tthis._triggerChange(evt);\n\t\t\t},\n\t\t\tanimationStart: evt => {\n\t\t\t},\n\t\t\tanimationEnd: evt => {\n\t\t\t\tthis.trigger(\"animationEnd\", {isTrusted: evt.isTrusted});\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Update Pan Scale\n\t *\n\t * Scale(Sensitivity) values of panning is related with fov and height.\n\t * If at least one of them is changed, this function need to be called.\n\t * @param {*} param\n\t */\n\tupdatePanScale(param = {}) {\n\t\tconst fov = this.axes.get().fov;\n\t\tconst areaHeight = param.height || parseInt(getComputedStyle(this._element).height, 10);\n\t\tconst scale = MC_BIND_SCALE[0] * fov / this._initialFov * PAN_SCALE / areaHeight;\n\n\t\tthis.axesPanInput.options.scale = [scale, scale];\n\t\tthis.axes.options.deceleration = MC_DECELERATION * fov / MAX_FIELD_OF_VIEW;\n\n\t\treturn this;\n\t}\n\n\t/*\n\t * Override component's option method\n\t * to call method for updating values which is affected by option change.\n\t *\n\t * @param {*} args\n\t */\n\toption(...args) {\n\t\tconst argLen = args.length;\n\n\t\t// Getter\n\t\tif (argLen === 0) {\n\t\t\treturn this._getOptions();\n\t\t} else if (argLen === 1 && typeof args[0] === \"string\") {\n\t\t\treturn this._getOptions(args[0]);\n\t\t}\n\n\t\t// Setter\n\t\tconst beforeOptions = Object.assign({}, this.options);\n\t\tlet newOptions = {};\n\t\tlet changedKeyList = []; // TODO: if value is not changed, then do not push on changedKeyList.\n\n\t\tif (argLen === 1) {\n\t\t\tchangedKeyList = Object.keys(args[0]);\n\t\t\tnewOptions = Object.assign({}, args[0]);\n\t\t} else if (argLen >= 2) {\n\t\t\tchangedKeyList.push(args[0]);\n\t\t\tnewOptions[args[0]] = args[1];\n\t\t}\n\n\t\tthis._setOptions(this._getValidatedOptions(newOptions));\n\t\tthis._applyOptions(changedKeyList, beforeOptions);\n\t\treturn this;\n\t}\n\n\t_getValidatedOptions(newOptions) {\n\t\tif (newOptions.yawRange) {\n\t\t\tnewOptions.yawRange =\n\t\t\t\tthis._getValidYawRange(newOptions.yawRange, newOptions.fov, newOptions.aspectRatio);\n\t\t}\n\t\tif (newOptions.pitchRange) {\n\t\t\tnewOptions.pitchRange = this._getValidPitchRange(newOptions.pitchRange, newOptions.fov);\n\t\t}\n\t\treturn newOptions;\n\t}\n\n\t_getOptions(key) {\n\t\tlet value;\n\n\t\tif (typeof key === \"string\") {\n\t\t\tvalue = this.options[key];\n\t\t} else if (arguments.length === 0) {\n\t\t\tvalue = this.options;\n\t\t}\n\t\treturn value;\n\t}\n\n\t_setOptions(options) {\n\t\tfor (const key in options) {\n\t\t\tthis.options[key] = options[key];\n\t\t}\n\t}\n\n\t_applyOptions(keys, prevOptions) {\n\t\tconst options = this.options;\n\t\tconst axes = this.axes;\n\t\tconst isVR = options.gyroMode === GYRO_MODE.VR;\n\t\tconst isYawPitch = options.gyroMode === GYRO_MODE.YAWPITCH;\n\t\t// If it's VR mode, restrict user interaction to yaw direction only\n\t\tconst touchDirection = isVR ?\n\t\t\t(TOUCH_DIRECTION_YAW & options.touchDirection) :\n\t\t\toptions.touchDirection;\n\n\t\t// If one of below is changed, call updateControlScale()\n\t\tif (keys.some(key =>\n\t\t\tkey === \"showPolePoint\" || key === \"fov\" || key === \"aspectRatio\" ||\n\t\t\tkey === \"yawRange\" || key === \"pitchRange\"\n\t\t)) {\n\t\t\t// If fov is changed, update pan scale\n\t\t\tif (keys.indexOf(\"fov\") >= 0) {\n\t\t\t\taxes.setTo({\"fov\": options.fov});\n\t\t\t\tthis.updatePanScale();\n\t\t\t}\n\n\t\t\tthis._updateControlScale();\n\t\t}\n\n\t\tif (keys.some(key => key === \"fovRange\")) {\n\t\t\tconst fovRange = options.fovRange;\n\t\t\tconst prevFov = axes.get().fov;\n\t\t\tlet nextFov = axes.get().fov;\n\n\t\t\tvec2.copy(axes.axis.fov.range, fovRange);\n\n\t\t\tif (nextFov < fovRange[0]) {\n\t\t\t\tnextFov = fovRange[0];\n\t\t\t} else if (prevFov > fovRange[1]) {\n\t\t\t\tnextFov = fovRange[1];\n\t\t\t}\n\n\t\t\tif (prevFov !== nextFov) {\n\t\t\t\taxes.setTo({\n\t\t\t\t\tfov: nextFov\n\t\t\t\t}, 0);\n\t\t\t\tthis._updateControlScale();\n\t\t\t\tthis.updatePanScale();\n\t\t\t}\n\t\t}\n\n\t\tif (keys.some(key => key === \"gyroMode\") && SUPPORT_DEVICEMOTION) {\n\t\t\t// Disconnect first\n\t\t\tif (this.axesTiltMotionInput) {\n\t\t\t\tthis.axes.disconnect(this.axesTiltMotionInput);\n\t\t\t\tthis.axesTiltMotionInput.destroy();\n\t\t\t\tthis.axesTiltMotionInput = null;\n\t\t\t}\n\n\t\t\tif (this._deviceQuaternion) {\n\t\t\t\tthis._deviceQuaternion.destroy();\n\t\t\t\tthis._deviceQuaternion = null;\n\t\t\t}\n\n\t\t\tif (isVR) {\n\t\t\t\tthis._initDeviceQuaternion();\n\t\t\t} else if (isYawPitch) {\n\t\t\t\tthis.axesTiltMotionInput = new TiltMotionInput(this._element);\n\t\t\t\tthis.axes.connect([\"yaw\", \"pitch\"], this.axesTiltMotionInput);\n\t\t\t}\n\n\t\t\tthis.axesPanInput.setUseRotation(isVR);\n\t\t}\n\n\t\tif (keys.some(key => key === \"useKeyboard\")) {\n\t\t\tconst useKeyboard = options.useKeyboard;\n\n\t\t\tif (useKeyboard) {\n\t\t\t\taxes.connect([\"yaw\", \"pitch\"], this.axesMoveKeyInput);\n\t\t\t} else {\n\t\t\t\taxes.disconnect(this.axesMoveKeyInput);\n\t\t\t}\n\t\t}\n\n\t\tif (keys.some(key => key === \"useZoom\")) {\n\t\t\tconst useZoom = options.useZoom;\n\n\t\t\t// Disconnect first\n\t\t\taxes.disconnect(this.axesWheelInput);\n\t\t\tif (useZoom) {\n\t\t\t\taxes.connect([\"fov\"], this.axesWheelInput);\n\t\t\t}\n\t\t}\n\n\t\tthis._togglePinchInputByOption(options.touchDirection, options.useZoom);\n\n\t\tif (keys.some(key => key === \"touchDirection\")) {\n\t\t\tthis._enabled && this._enableTouch(touchDirection);\n\t\t}\n\t}\n\n\t_togglePinchInputByOption(touchDirection, useZoom) {\n\t\tif (this.axesPinchInput) {\n\t\t\t// disconnect first\n\t\t\tthis.axes.disconnect(this.axesPinchInput);\n\n\t\t\t// If the touchDirection option is not ALL, pinchInput should be disconnected to make use of a native scroll.\n\t\t\tif (\n\t\t\t\tuseZoom &&\n\t\t\t\ttouchDirection === TOUCH_DIRECTION_ALL &&\n\t\t\t\t// TODO: Get rid of using private property of axes instance.\n\t\t\t\tthis.axes._inputs.indexOf(this.axesPinchInput) === -1\n\t\t\t) {\n\t\t\t\tthis.axes.connect([\"fov\"], this.axesPinchInput);\n\t\t\t}\n\t\t}\n\t}\n\n\t_enableTouch(direction) {\n\t\t// Disconnect first\n\t\tthis.axesPanInput && this.axes.disconnect(this.axesPanInput);\n\n\t\tconst yawEnabled = direction & TOUCH_DIRECTION_YAW ? \"yaw\" : null;\n\t\tconst pitchEnabled = direction & TOUCH_DIRECTION_PITCH ? \"pitch\" : null;\n\n\t\tthis.axes.connect([yawEnabled, pitchEnabled], this.axesPanInput);\n\t}\n\n\t_initDeviceQuaternion() {\n\t\tthis._deviceQuaternion = new DeviceQuaternion();\n\t\tthis._deviceQuaternion.on(\"change\", e => {\n\t\t\tthis._triggerChange(e);\n\t\t});\n\t}\n\n\t_getValidYawRange(newYawRange, newFov, newAspectRatio) {\n\t\tconst ratio = YawPitchControl.adjustAspectRatio(newAspectRatio || this.options.aspectRatio || 1);\n\t\tconst fov = newFov || this.axes.get().fov;\n\t\tconst horizontalFov = fov * ratio;\n\t\tconst isValid = newYawRange[1] - newYawRange[0] >= horizontalFov;\n\n\t\tif (isValid) {\n\t\t\treturn newYawRange;\n\t\t} else {\n\t\t\treturn this.options.yawRange || DEFAULT_YAW_RANGE;\n\t\t}\n\t}\n\n\t_getValidPitchRange(newPitchRange, newFov) {\n\t\tconst fov = newFov || this.axes.get().fov;\n\t\tconst isValid = newPitchRange[1] - newPitchRange[0] >= fov;\n\n\t\tif (isValid) {\n\t\t\treturn newPitchRange;\n\t\t} else {\n\t\t\treturn this.options.pitchRange || DEFAULT_PITCH_RANGE;\n\t\t}\n\t}\n\n\tstatic isCircular(range) {\n\t\treturn range[1] - range[0] < 360 ? [false, false] : [true, true];\n\t}\n\n\t/**\n\t * Update yaw/pitch min/max by 5 factor\n\t *\n\t * 1. showPolePoint\n\t * 2. fov\n\t * 3. yawRange\n\t * 4. pitchRange\n\t * 5. aspectRatio\n\t *\n\t * If one of above is changed, call this function\n\t */\n\t_updateControlScale(changeEvt) {\n\t\tconst opt = this.options;\n\t\tconst fov = this.axes.get().fov;\n\n\t\tconst pRange = this._updatePitchRange(opt.pitchRange, fov, opt.showPolePoint);\n\t\tconst yRange = this._updateYawRange(opt.yawRange, fov, opt.aspectRatio);\n\n\t\t// TODO: If not changed!?\n\t\tconst pos = this.axes.get();\n\t\tlet y = pos.yaw;\n\t\tlet p = pos.pitch;\n\n\t\tvec2.copy(this.axes.axis.yaw.range, yRange);\n\t\tvec2.copy(this.axes.axis.pitch.range, pRange);\n\t\tthis.axes.axis.yaw.circular = YawPitchControl.isCircular(yRange);\n\t\tthis.axes.axis.pitch.circular = YawPitchControl.isCircular(pRange);\n\n\t\t/**\n\t\t * update yaw/pitch by it's range.\n\t\t */\n\t\tif (y < yRange[0]) {\n\t\t\ty = yRange[0];\n\t\t} else if (y > yRange[1]) {\n\t\t\ty = yRange[1];\n\t\t}\n\n\t\tif (p < pRange[0]) {\n\t\t\tp = pRange[0];\n\t\t} else if (p > pRange[1]) {\n\t\t\tp = pRange[1];\n\t\t}\n\n\t\tif (changeEvt) {\n\t\t\tchangeEvt.set({\n\t\t\t\tyaw: y,\n\t\t\t\tpitch: p,\n\t\t\t});\n\t\t}\n\n\t\tthis.axes.setTo({\n\t\t\tyaw: y,\n\t\t\tpitch: p,\n\t\t}, 0);\n\n\t\treturn this;\n\t}\n\n\t_updatePitchRange(pitchRange, fov, showPolePoint) {\n\t\tif (this.options.gyroMode === GYRO_MODE.VR) {\n\t\t\t// Circular pitch on VR\n\t\t\treturn CIRCULAR_PITCH_RANGE;\n\t\t}\n\n\t\tconst verticalAngle = pitchRange[1] - pitchRange[0];\n\t\tconst halfFov = fov / 2;\n\t\tconst isPanorama = verticalAngle < 180;\n\n\t\tif (showPolePoint && !isPanorama) {\n\t\t\t// Use full pinch range\n\t\t\treturn pitchRange.concat();\n\t\t}\n\n\t\t// Round value as movableCood do.\n\t\treturn [pitchRange[0] + halfFov, pitchRange[1] - halfFov];\n\t}\n\n\t_updateYawRange(yawRange, fov, aspectRatio) {\n\t\tif (this.options.gyroMode === GYRO_MODE.VR) {\n\t\t\treturn DEFAULT_YAW_RANGE;\n\t\t}\n\n\t\tconst horizontalAngle = yawRange[1] - yawRange[0];\n\n\t\t/**\n\t\t * Full 360 Mode\n\t\t */\n\t\tif (horizontalAngle >= 360) {\n\t\t\t// Don't limit yaw range on Full 360 mode.\n\t\t\treturn yawRange.concat();\n\t\t}\n\n\t\t/**\n\t\t * Panorama mode\n\t\t */\n\t\t// Ref : https://github.com/naver/egjs-view360/issues/290\n\t\tconst halfHorizontalFov =\n\t\t\tmathUtil.toDegree(Math.atan2(aspectRatio, 1 / Math.tan(glMatrix.toRadian(fov / 2))));\n\n\t\t// Round value as movableCood do.\n\t\treturn [\n\t\t\tyawRange[0] + halfHorizontalFov,\n\t\t\tyawRange[1] - halfHorizontalFov\n\t\t];\n\t}\n\n\t_triggerChange(evt) {\n\t\tconst pos = this.axes.get();\n\t\tconst opt = this.options;\n\t\tconst event = {\n\t\t\ttargetElement: opt.element,\n\t\t\tisTrusted: evt.isTrusted,\n\t\t};\n\n\t\tevent.yaw = pos.yaw;\n\t\tevent.pitch = pos.pitch;\n\t\tevent.fov = pos.fov;\n\n\t\tif (opt.gyroMode === GYRO_MODE.VR && this._deviceQuaternion) {\n\t\t\tevent.quaternion = this._deviceQuaternion.getCombinedQuaternion(pos.yaw);\n\t\t}\n\t\tthis.trigger(\"change\", event);\n\t}\n\n\t// TODO: makes constant to be logic\n\tstatic adjustAspectRatio(input) {\n\t\tconst inputRange = [\n\t\t\t0.520, 0.540, 0.563, 0.570, 0.584, 0.590, 0.609, 0.670,\n\t\t\t0.702, 0.720, 0.760, 0.780, 0.820, 0.920, 0.970, 1.00, 1.07, 1.14, 1.19,\n\t\t\t1.25, 1.32, 1.38, 1.40, 1.43, 1.53, 1.62, 1.76, 1.77, 1.86, 1.96, 2.26,\n\t\t\t2.30, 2.60, 3.00, 5.00, 6.00\n\t\t];\n\t\tconst outputRange = [\n\t\t\t0.510, 0.540, 0.606, 0.560, 0.628, 0.630, 0.647, 0.710,\n\t\t\t0.736, 0.757, 0.780, 0.770, 0.800, 0.890, 0.975, 1.00, 1.07, 1.10, 1.15,\n\t\t\t1.18, 1.22, 1.27, 1.30, 1.33, 1.39, 1.45, 1.54, 1.55, 1.58, 1.62, 1.72,\n\t\t\t1.82, 1.92, 2.00, 2.24, 2.30\n\t\t];\n\n\t\tlet rangeIdx = -1;\n\n\t\tfor (let i = 0; i < inputRange.length - 1; i++) {\n\t\t\tif (inputRange[i] <= input && inputRange[i + 1] >= input) {\n\t\t\t\trangeIdx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (rangeIdx === -1) {\n\t\t\tif (inputRange[0] > input) {\n\t\t\t\treturn outputRange[0];\n\t\t\t} else {\n\t\t\t\treturn outputRange[outputRange[0].length - 1];\n\t\t\t}\n\t\t}\n\n\t\tconst inputA = inputRange[rangeIdx];\n\t\tconst inputB = inputRange[rangeIdx + 1];\n\t\tconst outputA = outputRange[rangeIdx];\n\t\tconst outputB = outputRange[rangeIdx + 1];\n\n\t\treturn YawPitchControl.lerp(outputA, outputB, (input - inputA) / (inputB - inputA));\n\t}\n\n\tstatic lerp(a, b, fraction) {\n\t\treturn a + fraction * (b - a);\n\t}\n\n\t/**\n\t * Enable YawPitch functionality\n\t *\n\t * @method eg.YawPitch#enable\n\t */\n\tenable() {\n\t\tif (this._enabled) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._enabled = true;\n\n\t\t// touchDirection is decided by parameter is valid string (Ref. Axes.connect)\n\t\tthis._applyOptions(Object.keys(this.options), this.options);\n\n\t\t// TODO: Is this code is needed? Check later.\n\t\tthis.updatePanScale();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Disable YawPitch functionality\n\t *\n\t * @method eg.YawPitch#disable\n\t */\n\tdisable(persistOrientation) {\n\t\tif (!this._enabled) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// TODO: Check peristOrientation is needed!\n\t\tif (!persistOrientation) {\n\t\t\tthis._resetOrientation();\n\t\t}\n\t\tthis.axes.disconnect();\n\t\tthis._enabled = false;\n\t\treturn this;\n\t}\n\n\t_resetOrientation() {\n\t\tconst opt = this.options;\n\n\t\tthis.axes.setTo({\n\t\t\tyaw: opt.yaw,\n\t\t\tpitch: opt.pitch,\n\t\t\tfov: opt.fov,\n\t\t}, 0);\n\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Set one or more of yaw, pitch, fov\n\t *\n\t * @param {Object} coordinate yaw, pitch, fov\n\t * @param {Number} duration Animation duration. if it is above 0 then it's animated.\n\t */\n\tlookAt({yaw, pitch, fov}, duration) {\n\t\tconst pos = this.axes.get();\n\n\t\tconst y = yaw === undefined ? 0 : yaw - pos.yaw;\n\t\tconst p = pitch === undefined ? 0 : pitch - pos.pitch;\n\t\tconst f = fov === undefined ? 0 : fov - pos.fov;\n\n\t\t// Allow duration of animation to have more than MC_MAXIMUM_DURATION.\n\t\tthis.axes.options.maximumDuration = Infinity;\n\n\t\tthis.axes.setBy({\n\t\t\tyaw: y,\n\t\t\tpitch: p,\n\t\t\tfov: f\n\t\t}, duration);\n\t}\n\n\tgetYawPitch() {\n\t\tconst yawPitch = this.axes.get();\n\n\t\treturn {\n\t\t\tyaw: yawPitch.yaw,\n\t\t\tpitch: yawPitch.pitch,\n\t\t};\n\t}\n\n\tgetFov() {\n\t\treturn this.axes.get().fov;\n\t}\n\n\tgetQuaternion() {\n\t\tconst pos = this.axes.get();\n\n\t\treturn this._deviceQuaternion.getCombinedQuaternion(pos.yaw);\n\t}\n\n\tshouldRenderWithQuaternion() {\n\t\treturn this.options.gyroMode === GYRO_MODE.VR;\n\t}\n\n\t/**\n\t * Destroys objects\n\t */\n\tdestroy() {\n\t\tthis.axes && this.axes.destroy();\n\t\tthis.axisPanInput && this.axisPanInput.destroy();\n\t\tthis.axesWheelInput && this.axesWheelInput.destroy();\n\t\tthis.axesTiltMotionInput && this.axesTiltMotionInput.destroy();\n\t\tthis.axesDeviceOrientationInput && this.axesDeviceOrientationInput.destroy();\n\t\tthis.axesPinchInput && this.axesPinchInput.destroy();\n\t\tthis.axesMoveKeyInput && this.axesMoveKeyInput.destroy();\n\t\tthis._deviceQuaternion && this._deviceQuaternion.destroy();\n\t}\n}\n\nexport default YawPitchControl;\n","import Component from \"@egjs/component\";\n\nconst STATUS = {\n\t\"NONE\": 0,\n\t\"LOADING\": 1,\n\t\"LOADED\": 2,\n\t\"ERROR\": 3\n};\n\nconst EVENT = {\n\t\"READYSTATECHANGE\": \"readystatechange\"\n};\n\nclass ImageLoader extends Component {\n\tstatic STATUS = STATUS;\n\tconstructor(image) {\n\t\t// Super constructor\n\t\tsuper();\n\n\t\tthis._image = null;\n\t\tthis._onceHandlers = [];\n\t\tthis._loadStatus = STATUS.NONE;\n\n\t\timage && this.set(image);\n\t}\n\n\tget() {\n\t\treturn new Promise((res, rej) => {\n\t\t\tif (!this._image) {\n\t\t\t\trej(\"ImageLoader: image is not defiend\");\n\t\t\t} else if (this._loadStatus === STATUS.LOADED) {\n\t\t\t\tres(this.getElement());\n\t\t\t} else if (this._loadStatus === STATUS.LOADING) {\n\t\t\t\t/* Check isMaybeLoaded() first because there may have\n\t\t\t\t\tposibilities that image already loaded before get is called.\n\t\t\t\t\tfor example calling get on external image onload callback.*/\n\t\t\t\tif (ImageLoader.isMaybeLoaded(this._image)) {\n\t\t\t\t\tthis._loadStatus = STATUS.LOADED;\n\t\t\t\t\tres(this.getElement());\n\t\t\t\t} else {\n\t\t\t\t\tthis.on(EVENT.READYSTATECHANGE, e => {\n\t\t\t\t\t\tif (e.type === STATUS.LOADED) {\n\t\t\t\t\t\t\tres(this.getElement());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trej(\"ImageLoader: failed to load images.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trej(\"ImageLoader: failed to load images\");\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @param image img element or img url or array of img element or array of img url\n\t */\n\tset(image) {\n\t\tthis._loadStatus = STATUS.LOADING;\n\n\t\tthis._image = ImageLoader.createElement(image);\n\n\t\tif (ImageLoader.isMaybeLoaded(this._image)) {\n\t\t\tthis._loadStatus = STATUS.LOADED;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onceLoaded(\n\t\t\tthis._image,\n\t\t\t() => {\n\t\t\t\tthis._loadStatus = STATUS.LOADED;\n\t\t\t\tthis.trigger(EVENT.READYSTATECHANGE, {\n\t\t\t\t\ttype: STATUS.LOADED\n\t\t\t\t});\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis._loadStatus = STATUS.ERROR;\n\t\t\t\tthis.trigger(EVENT.READYSTATECHANGE, {\n\t\t\t\t\ttype: STATUS.ERROR\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tstatic createElement(image) {\n\t\tconst images = image instanceof Array ? image : [image];\n\n\t\treturn images.map(img => {\n\t\t\tlet _img = img;\n\n\t\t\tif (typeof img === \"string\") {\n\t\t\t\t_img = new Image();\n\t\t\t\t_img.crossOrigin = \"anonymous\";\n\t\t\t\t_img.src = img;\n\t\t\t}\n\t\t\treturn _img;\n\t\t});\n\t}\n\n\tgetElement() {\n\t\treturn this._image.length === 1 ? this._image[0] : this._image;\n\t}\n\n\tstatic isMaybeLoaded(image) {\n\t\tlet result = false;\n\n\t\tif (image instanceof Image) {\n\t\t\tresult = image.complete && image.naturalWidth !== 0;\n\t\t} else if (image instanceof Array) {\n\t\t\tresult = !image.some(img => !img.complete || img.naturalWidth === 0);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tonceLoaded(target, onload, onerror) {\n\t\tconst targets = target instanceof Array ? target : [target];\n\t\tconst targetsNotLoaded = targets.filter(img => !ImageLoader.isMaybeLoaded(img));\n\t\tconst loadPromises = targetsNotLoaded.map(img => new Promise((res, rej) => {\n\t\t\tthis._once(img, \"load\", () => (res(img)));\n\t\t\tthis._once(img, \"error\", () => (rej(img)));\n\t\t}));\n\n\t\tPromise.all(loadPromises).then(\n\t\t\tresult => (onload(targets.length === 1 ? targets[0] : targets)),\n\t\t\treason => (onerror(reason))\n\t\t);\n\t}\n\n\t_once(target, type, listener) {\n\t\tconst fn = event => {\n\t\t\ttarget.removeEventListener(type, fn);\n\t\t\tlistener(event);\n\t\t};\n\n\t\ttarget.addEventListener(type, fn);\n\t\tthis._onceHandlers.push({target, type, fn});\n\t}\n\n\tgetStatus() {\n\t\treturn this._loadStatus;\n\t}\n\n\tdestroy() {\n\t\tthis._onceHandlers.forEach(handler => {\n\t\t\thandler.target.removeEventListener(handler.type, handler.fn);\n\t\t});\n\t\tthis._onceHandlers = [];\n\t\tthis._image.src = \"\";\n\t\tthis._image = null;\n\t\tthis._loadStatus = STATUS.NONE;\n\t}\n}\n\nexport default ImageLoader;\n","// import Agent from \"@egjs/agent\";\n\n/* Ref https://www.w3schools.com/tags/av_prop_readystate.asp */\nconst READY_STATUS = {\n\tHAVE_NOTHING: 0, // no information whether or not the audio/video is ready\n\tHAVE_METADATA: 1, // HAVE_METADATA - metadata for the audio/video is ready\n\tHAVE_CURRENT_DATA: 2, // data for the current playback position is available, but not enough data to play next frame/millisecond\n\tHAVE_FUTURE_DATA: 3, // data for the current and at least the next frame is available\n\tHAVE_ENOUGH_DATA: 4, // enough data available to start playing\n\t// below is custom status for failed to load status\n\tLOADING_FAILED: -1\n};\n\nconst READYSTATECHANGE_EVENT_NAME = {};\n\nREADYSTATECHANGE_EVENT_NAME[READY_STATUS.HAVE_METADATA] = \"loadedmetadata\";\nREADYSTATECHANGE_EVENT_NAME[READY_STATUS.HAVE_CURRENT_DATA] = \"loadeddata\";\nREADYSTATECHANGE_EVENT_NAME[READY_STATUS.HAVE_FUTURE_DATA] = \"canplay\";\nREADYSTATECHANGE_EVENT_NAME[READY_STATUS.HAVE_ENOUGH_DATA] = \"canplaythrough\";\n\nexport default class VideoLoader {\n\tconstructor(video) {\n\t\tthis._handlers = [];\n\t\tthis._sourceCount = 0;\n\n\t\t// on iOS safari, 'loadeddata' will not triggered unless the user hits play,\n\t\t// so used 'loadedmetadata' instead.\n\t\tthis._thresholdReadyState = READY_STATUS.HAVE_METADATA;\n\t\tthis._thresholdEventName = READYSTATECHANGE_EVENT_NAME[this._thresholdReadyState];\n\n\t\tthis._loadStatus = (video && video.readyState) || READY_STATUS.HAVE_NOTHING;\n\n\t\tthis._onerror = this._onerror.bind(this);\n\n\t\tvideo && this.set(video);\n\t}\n\n\t_onerror() {\n\t\tthis._errorCount++;\n\t\tif (this._errorCount >= this._sourceCount) {\n\t\t\tthis._loadStatus = READY_STATUS.LOADING_FAILED;\n\t\t\tthis._detachErrorHandler(this._onerror);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {Object | String} video Object or String containing Video Source URL<ko>비디오 URL 정보를 담고 있는 문자열이나 객체 {type, src}</ko>\n\t */\n\t_appendSourceElement(videoUrl) {\n\t\tlet videoSrc;\n\t\tlet videoType;\n\n\t\tif (typeof videoUrl === \"object\") {\n\t\t\tvideoSrc = videoUrl.src;\n\t\t\tvideoType = videoUrl.type;\n\t\t} else if (typeof videoUrl === \"string\") {\n\t\t\tvideoSrc = videoUrl;\n\t\t}\n\n\t\tif (!videoSrc) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst sourceElement = document.createElement(\"source\");\n\n\t\tsourceElement.src = videoSrc;\n\t\tvideoType && (sourceElement.type = videoType);\n\n\t\tthis._video.appendChild(sourceElement);\n\t\treturn true;\n\t}\n\n\tset(video) {\n\t\tthis._reset(); // reset resources.\n\n\t\tif (!video) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (video instanceof HTMLVideoElement) {\n\t\t\t// video tag\n\t\t\tthis._video = video;\n\t\t} else if (typeof video === \"string\" || typeof video === \"object\") {\n\t\t\t// url\n\t\t\tthis._video = document.createElement(\"video\");\n\t\t\tthis._video.setAttribute(\"crossorigin\", \"anonymous\");\n\t\t\tthis._video.setAttribute(\"webkit-playsinline\", \"\");\n\t\t\tthis._video.setAttribute(\"playsinline\", \"\");\n\n\t\t\tif (video instanceof Array) {\n\t\t\t\tvideo.forEach(v => this._appendSourceElement(v));\n\t\t\t} else {\n\t\t\t\tthis._appendSourceElement(video);\n\t\t\t}\n\n\t\t\tthis._sourceCount = this._video.querySelectorAll(\"source\").length;\n\n\t\t\tif (this._sourceCount > 0) {\n\t\t\t\tif (this._video.readyState < this._thresholdReadyState) {\n\t\t\t\t\tthis._video.load();\n\t\t\t\t\t// attach loading error listener\n\t\t\t\t\tthis._attachErrorHandler(this._onerror);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._video = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t_attachErrorHandler(handler) {\n\t\tthis._video.addEventListener(\"error\", handler);\n\t\tthis._sources = this._video.querySelectorAll(\"source\");\n\t\t[].forEach.call(this._sources, source => {\n\t\t\tsource.addEventListener(\"error\", handler);\n\t\t});\n\t}\n\n\t_detachErrorHandler(handler) {\n\t\tthis._video.removeEventListener(\"error\", handler);\n\t\t[].forEach.call(this._sources, source => {\n\t\t\tsource.removeEventListener(\"error\", handler);\n\t\t});\n\t}\n\n\tget() {\n\t\treturn new Promise((res, rej) => {\n\t\t\tif (!this._video) {\n\t\t\t\trej(\"VideoLoader: video is undefined\");\n\t\t\t} else if (this._loadStatus === READY_STATUS.LOADING_FAILED) {\n\t\t\t\trej(\"VideoLoader: video source is invalid\");\n\t\t\t} else if (this._video.readyState >= this._thresholdReadyState) {\n\t\t\t\tres(this._video);\n\t\t\t} else {\n\t\t\t\t// check errorCnt and reject\n\t\t\t\tconst rejector = () => {\n\t\t\t\t\tif (this._loadStatus === READY_STATUS.LOADING_FAILED) {\n\t\t\t\t\t\tthis._detachErrorHandler(rejector);\n\t\t\t\t\t\trej(\"VideoLoader: video source is invalid\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis._attachErrorHandler(rejector);\n\t\t\t\tthis._once(this._thresholdEventName, () => res(this._video));\n\t\t\t}\n\t\t});\n\t}\n\n\tgetElement() {\n\t\treturn this._video;\n\t}\n\n\tdestroy() {\n\t\tthis._reset();\n\t}\n\n\t_reset() {\n\t\tthis._handlers.forEach(handler => {\n\t\t\tthis._video.removeEventListener(handler.type, handler.fn);\n\t\t});\n\t\tthis._handlers = [];\n\t\tthis._video = null;\n\n\t\tthis._sourceCount = 0;\n\t\tthis._errorCount = 0;\n\t}\n\n\t_once(type, listener) {\n\t\tconst target = this._video;\n\n\t\tconst fn = event => {\n\t\t\ttarget.removeEventListener(type, fn);\n\t\t\tlistener(event);\n\t\t};\n\n\t\t/* By useCapture mode enabled, you can capture the error event being fired on source(child)*/\n\t\ttarget.addEventListener(type, fn, true);\n\t\tthis._handlers.push({type, fn});\n\t}\n}\n","import Renderer from \"./Renderer\";\nimport WebGLUtils from \"../WebGLUtils\";\nimport {STEREO_FORMAT} from \"../../PanoViewer/consts\";\n\nconst latitudeBands = 60;\nconst longitudeBands = 60;\nconst radius = 2;\nconst ANGLE_CORRECTION_FOR_CENTER_ALIGN = -0.5 * Math.PI;\n\nconst textureCoordData = [];\nconst vertexPositionData = [];\nconst indexData = [];\nlet latIdx;\nlet lngIdx;\n\nfor (latIdx = 0; latIdx <= latitudeBands; latIdx++) {\n\tconst theta = (latIdx / latitudeBands - 0.5) * Math.PI;\n\tconst sinTheta = Math.sin(theta);\n\tconst cosTheta = Math.cos(theta);\n\n\tfor (lngIdx = 0; lngIdx <= longitudeBands; lngIdx++) {\n\t\tconst phi = (lngIdx / longitudeBands - 0.5) * 2 * Math.PI + ANGLE_CORRECTION_FOR_CENTER_ALIGN;\n\t\tconst sinPhi = Math.sin(phi);\n\t\tconst cosPhi = Math.cos(phi);\n\t\tconst x = cosPhi * cosTheta;\n\t\tconst y = sinTheta;\n\t\tconst z = sinPhi * cosTheta;\n\t\tconst u = lngIdx / longitudeBands;\n\t\tconst v = latIdx / latitudeBands;\n\n\t\ttextureCoordData.push(u, v);\n\t\tvertexPositionData.push(radius * x, radius * y, radius * z);\n\n\t\tif (lngIdx !== longitudeBands && latIdx !== latitudeBands) {\n\t\t\tconst a = latIdx * (longitudeBands + 1) + lngIdx;\n\t\t\tconst b = a + longitudeBands + 1;\n\n\t\t\tindexData.push(a, b, a + 1, b, b + 1, a + 1);\n\t\t}\n\t}\n}\n\nclass SphereRenderer extends Renderer {\n\tstatic _VERTEX_POSITION_DATA = vertexPositionData;\n\tstatic _TEXTURE_COORD_DATA = textureCoordData;\n\tstatic _INDEX_DATA = indexData;\n\n\tconstructor(format) {\n\t\tsuper();\n\n\t\tthis._stereoFormat = format;\n\t}\n\n\trender(ctx) {\n\t\tconst {gl, shaderProgram} = ctx;\n\n\t\tlet leftEyeScaleOffset;\n\t\tlet rightEyeScaleOffset;\n\n\t\tswitch (this._stereoFormat) {\n\t\t\tcase STEREO_FORMAT.TOP_BOTTOM:\n\t\t\t\tleftEyeScaleOffset = [1, 0.5, 0, 0];\n\t\t\t\trightEyeScaleOffset = [1, 0.5, 0, 0.5];\n\t\t\t\tbreak;\n\t\t\tcase STEREO_FORMAT.LEFT_RIGHT:\n\t\t\t\tleftEyeScaleOffset = [0.5, 1, 0, 0];\n\t\t\t\trightEyeScaleOffset = [0.5, 1, 0.5, 0];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tleftEyeScaleOffset = [1, 1, 0, 0];\n\t\t\t\trightEyeScaleOffset = [1, 1, 0, 0];\n\t\t}\n\n\t\tconst uTexScaleOffset = gl.getUniformLocation(shaderProgram, \"uTexScaleOffset\");\n\n\t\tgl.uniform4fv(uTexScaleOffset, [...leftEyeScaleOffset, ...rightEyeScaleOffset]);\n\n\t\tsuper.render(ctx);\n\t}\n\n\tgetVertexPositionData() {\n\t\treturn SphereRenderer._VERTEX_POSITION_DATA;\n\t}\n\n\tgetIndexData() {\n\t\treturn SphereRenderer._INDEX_DATA;\n\t}\n\n\tgetTextureCoordData() {\n\t\treturn SphereRenderer._TEXTURE_COORD_DATA;\n\t}\n\n\tgetVertexShaderSource() {\n\t\treturn `\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nuniform float uEye;\nuniform vec4 uTexScaleOffset[2];\nvarying highp vec2 vTextureCoord;\nvoid main(void) {\n\tvec4 scaleOffset = uTexScaleOffset[int(uEye)];\n\tvTextureCoord = aTextureCoord.xy * scaleOffset.xy + scaleOffset.zw;\n\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n}`;\n\t}\n\n\tgetFragmentShaderSource() {\n\t\treturn `\nprecision highp float;\nvarying highp vec2 vTextureCoord;\nuniform sampler2D uSampler;\nvoid main(void) {\n\tgl_FragColor = texture2D(uSampler, vTextureCoord.st);\n}`;\n\t}\n\n\tupdateTexture(gl, image) {\n\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n\t}\n\n\tbindTexture(gl, texture, image) {\n\t\t// Make sure image isn't too big\n\t\tconst {width, height} = this.getDimension(image);\n\t\tconst size = Math.max(width, height);\n\t\tconst maxSize = WebGLUtils.getMaxTextureSize(gl);\n\n\t\tif (size > maxSize) {\n\t\t\tthis._triggerError(`Image width(${width}) exceeds device limit(${maxSize}))`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Pixel Source for IE11 & Video\n\t\tthis._initPixelSource(image);\n\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\tthis.updateTexture(gl, image);\n\t}\n}\n\nexport default SphereRenderer;\n","import agent from \"@egjs/agent\";\n\nconst WEBGL_ERROR_CODE = {\n\t\"0\": \"NO_ERROR\",\n\t\"1280\": \"INVALID_ENUM\",\n\t\"1281\": \"INVALID_VALUE\",\n\t\"1282\": \"INVALID_OPERATION\",\n\t\"1285\": \"OUT_OF_MEMORY\",\n\t\"1286\": \"INVALID_FRAMEBUFFER_OPERATION\",\n\t\"37442\": \"CONTEXT_LOST_WEBGL\"\n};\n\nlet webglAvailability = null;\nlet MAX_TEXTURE_SIZE_FOR_TEST = null;\n\nexport default class WebGLUtils {\n\tstatic createShader(gl, type, source) {\n\t\tconst shader = gl.createShader(type);\n\n\t\tgl.shaderSource(shader, source);\n\t\tgl.compileShader(shader);\n\t\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n\t\tif (success) {\n\t\t\treturn shader;\n\t\t} else {\n\t\t\t// eslint-disable-next-line\n\t\t\tconsole.error(gl.getShaderInfoLog(shader));\n\t\t}\n\t\treturn null;\n\t}\n\n\tstatic createProgram(gl, vertexShader, fragmentShader) {\n\t\tconst program = gl.createProgram();\n\n\t\tgl.attachShader(program, vertexShader);\n\t\tgl.attachShader(program, fragmentShader);\n\t\tgl.linkProgram(program);\n\n\t\tgl.detachShader(program, vertexShader);\n\t\tgl.detachShader(program, fragmentShader);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\n\t\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n\t\tif (success) {\n\t\t\treturn program;\n\t\t}\n\n\t\tgl.deleteProgram(program);\n\t\treturn null;\n\t}\n\n\tstatic initBuffer(gl, target /* bind point */, data, itemSize, attr) {\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer(target, buffer);\n\t\tgl.bufferData(target, data, gl.STATIC_DRAW);\n\n\t\tif (buffer) {\n\t\t\tbuffer.itemSize = itemSize;\n\t\t\tbuffer.numItems = data.length / itemSize;\n\t\t}\n\n\t\tif (attr !== undefined) {\n\t\t\tgl.enableVertexAttribArray(attr);\n\t\t\tgl.vertexAttribPointer(attr, buffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\t}\n\n\t\treturn buffer;\n\t}\n\n\tstatic getWebglContext(canvas, userContextAttributes) {\n\t\tconst webglIdentifiers = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\n\t\tlet context = null;\n\t\tconst contextAttributes = Object.assign({\n\t\t\tpreserveDrawingBuffer: false,\n\t\t\tantialias: false,\n\t\t\txrCompatible: true\n\t\t}, userContextAttributes);\n\n\t\tfunction onWebglcontextcreationerror(e) {\n\t\t\treturn e.statusMessage;\n\t\t}\n\n\t\tcanvas.addEventListener(\"webglcontextcreationerror\", onWebglcontextcreationerror);\n\n\t\tfor (let i = 0; i < webglIdentifiers.length; i++) {\n\t\t\ttry {\n\t\t\t\tcontext = canvas.getContext(webglIdentifiers[i], contextAttributes);\n\t\t\t} catch (t) {}\n\t\t\tif (context) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tcanvas.removeEventListener(\"webglcontextcreationerror\", onWebglcontextcreationerror);\n\n\t\treturn context;\n\t}\n\n\tstatic createTexture(gl, textureTarget) {\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture(textureTarget, texture);\n\t\tgl.texParameteri(textureTarget, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\tgl.texParameteri(textureTarget, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\tgl.texParameteri(textureTarget, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(textureTarget, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tgl.bindTexture(textureTarget, null);\n\n\t\treturn texture;\n\t}\n\n\t/**\n\t * Returns the webgl availability of the current browser.\n\t * @method WebGLUtils#isWebGLAvailable\n\t * @retuen {Boolean} isWebGLAvailable\n\t */\n\tstatic isWebGLAvailable() {\n\t\tif (webglAvailability === null) {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tconst webglContext = WebGLUtils.getWebglContext(canvas);\n\n\t\t\twebglAvailability = !!webglContext;\n\n\t\t\t// webglContext Resource forced collection\n\t\t\tif (webglContext) {\n\t\t\t\tconst loseContextExtension = webglContext.getExtension(\"WEBGL_lose_context\");\n\n\t\t\t\tloseContextExtension && loseContextExtension.loseContext();\n\t\t\t}\n\t\t}\n\t\treturn webglAvailability;\n\t}\n\n\t/**\n\t * Returns whether webgl is stable in the current browser.\n\t * @method WebGLUtils#isStableWebGL\n\t * @retuen {Boolean} isStableWebGL\n\t */\n\tstatic isStableWebGL() {\n\t\tconst agentInfo = agent();\n\t\tlet isStableWebgl = true;\n\n\t\tif (agentInfo.os.name === \"android\" && parseFloat(agentInfo.os.version) <= 4.3) {\n\t\t\tisStableWebgl = false;\n\t\t} else if (agentInfo.os.name === \"android\" && parseFloat(agentInfo.os.version) === 4.4) {\n\t\t\tif (agentInfo.browser.name !== \"chrome\") {\n\t\t\t\tisStableWebgl = false;\n\t\t\t}\n\t\t}\n\t\treturn isStableWebgl;\n\t}\n\n\tstatic getErrorNameFromWebGLErrorCode(code) {\n\t\tif (!(code in WEBGL_ERROR_CODE)) {\n\t\t\treturn \"UNKNOWN_ERROR\";\n\t\t}\n\n\t\treturn WEBGL_ERROR_CODE[code];\n\t}\n\n\n\t/**\n\t * This function is wrapper for texImage2D to handle exceptions on texImage2D.\n\t * Purpose is to prevent service from being stopped by script error.\n\t *\n\t * @param {*} gl\n\t * @param {*} target\n\t * @param {*} pixels\n\t */\n\tstatic texImage2D(gl, target, pixels) {\n\t\ttry {\n\t\t\tgl.texImage2D(target, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\t\t} catch (error) {\n\t\t\t/* eslint-disable no-console */\n\t\t\tconsole.error(\"WebGLUtils.texImage2D error:\", error);\n\t\t\t/* eslint-enable no-console */\n\t\t}\n\t}\n\n\tstatic getMaxTextureSize(gl) {\n\t\t// WARN: MAX_TEXTURE_SIZE_FOR_TEST is used for test\n\t\treturn MAX_TEXTURE_SIZE_FOR_TEST || gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t}\n}\n\n/**\n * This function should not be used in service code. It's provided only for test purpose.\n * It should be set to null or 0 when test is done.\n *\n * @param {Number} size\n */\nfunction setMaxTextureSizeForTestOnlyPurpose(size) {\n\tMAX_TEXTURE_SIZE_FOR_TEST = size;\n}\n\nexport {\n\tsetMaxTextureSizeForTestOnlyPurpose\n};\n","import Component from \"@egjs/component\";\nimport Agent from \"@egjs/agent\";\n\nconst agent = Agent();\nconst isIE11 = agent.browser.name === \"ie\" && agent.browser.version === \"11.0\";\n\nconst EVENTS = {\n\tERROR: \"error\"\n};\n\n/**\n *\n * Extends Component for firing errors occurs internally.\n */\nclass Renderer extends Component {\n\tstatic EVENTS = EVENTS;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._forceDimension = null;\n\t\tthis._pixelCanvas = null;\n\t\tthis._pixelContext = null;\n\t}\n\n\trender({gl, shaderProgram, indexBuffer, mvMatrix, pMatrix}) {\n\t\tgl.uniformMatrix4fv(shaderProgram.pMatrixUniform, false, pMatrix);\n\t\tgl.uniformMatrix4fv(shaderProgram.mvMatrixUniform, false, mvMatrix);\n\n\t\tif (indexBuffer) {\n\t\t\tgl.drawElements(gl.TRIANGLES, indexBuffer.numItems, gl.UNSIGNED_SHORT, 0);\n\t\t}\n\t}\n\n\t// Define interface for Renderers\n\t/**\n\t * Following MUST BE DEFINED on Child of Renderer\n\t *\n\t * DATA\n\t *\n\t *  - getVertexPositionData\n\t *  - getIndexData\n\t *  - getTextureCoordData\n\t *\n\t * SOURCE\n\t *\n\t *  - getVertexShaderSource\n\t *  - getFragmentShaderSource\n\t *\n\t * TEXTURE\n\t *\n\t *  - bindTexture\n\t */\n\tgetDimension(pixelSource) {\n\t\tconst width = pixelSource.naturalWidth || pixelSource.videoWidth;\n\t\tconst height = pixelSource.naturalHeight || pixelSource.videoHeight;\n\n\t\treturn {width, height};\n\t}\n\n\t/**\n\t * Update data used by shader\n\t * \t-\n\t *\n\t *\n\t * @param {*} param\n\t */\n\tupdateShaderData(param) {\n\t\t/*\n\t\t* Update following data in implementation layer.\n\t\t* If the data is not changed, it does not need to implement this function.\n\t\t*\n\t\t* - _VERTEX_POSITION_DATA\n\t\t* - _TEXTURE_COORD_DATA\n\t\t* - _INDEX_DATA\n\t\t*/\n\t}\n\n\t/**\n\t *\n\t * @param {HTMLImageElement | HTMLVideoElement} image\n\t * @param {Object = {width, height}} forceDimension Forced dimension to resize\n\t */\n\t_initPixelSource(image, forceDimension) {\n\t\tconst isIE11Video = isIE11 && (image instanceof HTMLVideoElement);\n\n\t\tif (isIE11Video || forceDimension) {\n\t\t\tconst {width, height} = forceDimension || this.getDimension(image);\n\n\t\t\tthis._pixelCanvas = document.createElement(\"canvas\");\n\t\t\tthis._pixelCanvas.width = width;\n\t\t\tthis._pixelCanvas.height = height;\n\t\t\tthis._pixelContext = this._pixelCanvas.getContext(\"2d\");\n\t\t}\n\t\tthis._forceDimension = forceDimension;\n\t}\n\n\t_getPixelSource(image) {\n\t\tif (!this._pixelCanvas) {\n\t\t\treturn image;\n\t\t}\n\n\t\t/**\n\t\t * IE11 && Video\n\t\t * or\n\t\t * Dimension is forced (Image is larger than texture size.)\n\t\t */\n\t\tconst contentDimension = this.getDimension(image);\n\t\tconst textureDimension = this._forceDimension || contentDimension;\n\n\t\tif (this._pixelCanvas.width !== textureDimension.width) {\n\t\t\tthis._pixelCanvas.width = textureDimension.width;\n\t\t}\n\n\t\tif (this._pixelCanvas.height !== textureDimension.height) {\n\t\t\tthis._pixelCanvas.height = textureDimension.height;\n\t\t}\n\n\t\tif (this._forceDimension) {\n\t\t\tthis._pixelContext.drawImage(image,\n\t\t\t\t0, 0, contentDimension.width, contentDimension.height,\n\t\t\t\t0, 0, textureDimension.width, textureDimension.height);\n\t\t} else {\n\t\t\tthis._pixelContext.drawImage(image, 0, 0);\n\t\t}\n\n\t\treturn this._pixelCanvas;\n\t}\n\n\t_extractTileConfig(imageConfig) {\n\t\tlet tileConfig =\n\t\t\tArray.isArray(imageConfig.tileConfig) ?\n\t\t\t\timageConfig.tileConfig : Array(...Array(6)).map(() => imageConfig.tileConfig);\n\n\t\ttileConfig = tileConfig.map(\n\t\t\tconfig => Object.assign({\n\t\t\t\tflipHorizontal: false,\n\t\t\t\trotation: 0\n\t\t\t}, config)\n\t\t);\n\n\t\treturn tileConfig;\n\t}\n\n\t_triggerError(error) {\n\t\t/* eslint-disable no-console */\n\t\tconsole.error(\"Renderer Error:\", error);\n\t\t/* eslint-enable no-console */\n\n\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\tmessage: typeof error === \"string\" ? error : error.message\n\t\t});\n\t}\n}\n\nexport default Renderer;\n","import Agent from \"@egjs/agent\";\nimport Renderer from \"./Renderer.js\";\nimport WebGLUtils from \"../WebGLUtils\";\nimport {util as mathUtil} from \"../../utils/math-util.js\";\n\nclass CubeRenderer extends Renderer {\n\tstatic _VERTEX_POSITION_DATA = null;\n\tstatic _INDEX_DATA = null;\n\tgetVertexPositionData() {\n\t\tCubeRenderer._VERTEX_POSITION_DATA =\n\t\t\tCubeRenderer._VERTEX_POSITION_DATA !== null ? CubeRenderer._VERTEX_POSITION_DATA : [\n\t\t\t\t// back\n\t\t\t\t1, -1, 1,\n\t\t\t\t-1, -1, 1,\n\t\t\t\t-1, 1, 1,\n\t\t\t\t1, 1, 1,\n\n\t\t\t\t// front\n\t\t\t\t-1, -1, -1,\n\t\t\t\t1, -1, -1,\n\t\t\t\t1, 1, -1,\n\t\t\t\t-1, 1, -1,\n\n\t\t\t\t// top\n\t\t\t\t-1, 1, -1,\n\t\t\t\t1, 1, -1,\n\t\t\t\t1, 1, 1,\n\t\t\t\t-1, 1, 1,\n\n\t\t\t\t// bottom\n\t\t\t\t1, -1, -1,\n\t\t\t\t-1, -1, -1,\n\t\t\t\t-1, -1, 1,\n\t\t\t\t1, -1, 1,\n\n\t\t\t\t// right\n\t\t\t\t1, -1, -1,\n\t\t\t\t1, -1, 1,\n\t\t\t\t1, 1, 1,\n\t\t\t\t1, 1, -1,\n\n\t\t\t\t// left\n\t\t\t\t-1, -1, 1,\n\t\t\t\t-1, -1, -1,\n\t\t\t\t-1, 1, -1,\n\t\t\t\t-1, 1, 1\n\t\t\t];\n\n\t\treturn CubeRenderer._VERTEX_POSITION_DATA;\n\t}\n\n\tgetIndexData() {\n\t\tif (CubeRenderer._INDEX_DATA) {\n\t\t\treturn CubeRenderer._INDEX_DATA;\n\t\t}\n\n\t\tconst indexData = [];\n\t\tconst vertexPositionData = this.getVertexPositionData();\n\n\t\tfor (let i = 0; i < (vertexPositionData.length / 3); i += 4) {\n\t\t\tindexData.push(\n\t\t\t\ti,\n\t\t\t\ti + 2,\n\t\t\t\ti + 1,\n\t\t\t\ti,\n\t\t\t\ti + 3,\n\t\t\t\ti + 2\n\t\t\t);\n\t\t}\n\n\t\tCubeRenderer._INDEX_DATA = indexData;\n\t\treturn indexData;\n\t}\n\n\tstatic extractOrder(imageConfig) {\n\t\treturn imageConfig.order || \"RLUDBF\";\n\t}\n\n\tgetTextureCoordData(imageConfig) {\n\t\tconst vertexOrder = \"BFUDRL\";\n\t\tconst order = CubeRenderer.extractOrder(imageConfig);\n\t\tconst base = this.getVertexPositionData();\n\t\tconst tileConfig = this._extractTileConfig(imageConfig);\n\t\tconst elemSize = 3;\n\t\tconst vertexPerTile = 4;\n\t\tconst textureCoordData =\n\t\t\tvertexOrder.split(\"\")\n\t\t\t\t.map(face => tileConfig[order.indexOf(face)])\n\t\t\t\t.map((config, i) => {\n\t\t\t\t\tconst rotation = parseInt(config.rotation / 90, 10);\n\t\t\t\t\tconst ordermap_ = config.flipHorizontal ? [0, 1, 2, 3] : [1, 0, 3, 2];\n\n\t\t\t\t\tfor (let r = 0; r < Math.abs(rotation); r++) {\n\t\t\t\t\t\tif ((config.flipHorizontal && rotation > 0) ||\n\t\t\t\t\t\t\t(!config.flipHorizontal && rotation < 0)) {\n\t\t\t\t\t\t\tordermap_.push(ordermap_.shift());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tordermap_.unshift(ordermap_.pop());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst elemPerTile = elemSize * vertexPerTile;\n\t\t\t\t\tconst tileVertex = base.slice(i * elemPerTile, i * elemPerTile + elemPerTile);\n\t\t\t\t\tconst tileTemp = [];\n\n\t\t\t\t\tfor (let j = 0; j < vertexPerTile; j++) {\n\t\t\t\t\t\ttileTemp[ordermap_[j]] = tileVertex.splice(0, elemSize);\n\t\t\t\t\t}\n\t\t\t\t\treturn tileTemp;\n\t\t\t\t})\n\t\t\t\t.join()\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(v => parseInt(v, 10));\n\n\t\treturn textureCoordData;\n\t}\n\n\tgetVertexShaderSource() {\n\t\treturn `\nattribute vec3 aVertexPosition;\nattribute vec3 aTextureCoord;\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nvarying highp vec3 vVertexDirectionVector;\nvoid main(void) {\n\tvVertexDirectionVector = aTextureCoord;\n\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n}`;\n\t}\n\n\tgetFragmentShaderSource() {\n\t\treturn `\nprecision highp float;\nuniform samplerCube uSampler;\nvarying highp vec3 vVertexDirectionVector;\nvoid main(void) {\n\tgl_FragColor = textureCube(uSampler, vVertexDirectionVector);\n}`;\n\t}\n\n\tupdateTexture(gl, image, imageConfig) {\n\t\tconst baseOrder = \"RLUDBF\";\n\t\tconst order = CubeRenderer.extractOrder(imageConfig);\n\t\tconst orderMap = {};\n\n\t\torder.split(\"\").forEach((v, i) => {\n\t\t\torderMap[v] = i;\n\t\t});\n\n\t\ttry {\n\t\t\tif (image instanceof Array) {\n\t\t\t\tfor (let surfaceIdx = 0; surfaceIdx < 6; surfaceIdx++) {\n\t\t\t\t\tconst tileIdx = orderMap[baseOrder[surfaceIdx]];\n\n\t\t\t\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_CUBE_MAP_POSITIVE_X + surfaceIdx, image[tileIdx]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst maxCubeMapTextureSize = this.getMaxCubeMapTextureSize(gl, image);\n\n\t\t\t\tfor (let surfaceIdx = 0; surfaceIdx < 6; surfaceIdx++) {\n\t\t\t\t\tconst tileIdx = orderMap[baseOrder[surfaceIdx]];\n\t\t\t\t\tconst tile = this.extractTileFromImage(\n\t\t\t\t\t\timage, tileIdx, maxCubeMapTextureSize\n\t\t\t\t\t);\n\n\t\t\t\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_CUBE_MAP_POSITIVE_X + surfaceIdx, tile);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._triggerError(e);\n\t\t}\n\t}\n\n\tbindTexture(gl, texture, image, imageConfig) {\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n\t\tthis.updateTexture(gl, image, imageConfig);\n\t}\n\n\tgetSourceTileSize(image) {\n\t\tconst {width, height} = this.getDimension(image);\n\t\tconst aspectRatio = width / height;\n\t\tlet inputTextureSize;\n\n\t\tif (aspectRatio === 1 / 6) {\n\t\t\tinputTextureSize = width;\n\t\t} else if (aspectRatio === 6) {\n\t\t\tinputTextureSize = height;\n\t\t} else if (aspectRatio === 2 / 3) {\n\t\t\tinputTextureSize = width / 2;\n\t\t} else {\n\t\t\tinputTextureSize = width / 3;\n\t\t}\n\t\treturn inputTextureSize;\n\t}\n\n\textractTileFromImage(image, tileIdx, outputTextureSize) {\n\t\tconst {width} = this.getDimension(image);\n\t\tconst inputTextureSize = this.getSourceTileSize(image);\n\n\t\tconst canvas = document.createElement(\"canvas\");\n\n\t\tcanvas.width = outputTextureSize;\n\t\tcanvas.height = outputTextureSize;\n\t\tconst context = canvas.getContext(\"2d\");\n\t\tconst tilePerRow = width / inputTextureSize;\n\n\t\tconst x = inputTextureSize * tileIdx % (inputTextureSize * tilePerRow);\n\t\tconst y = parseInt(tileIdx / tilePerRow, 10) * (inputTextureSize);\n\n\t\tcontext.drawImage(\n\t\t\timage, x, y,\n\t\t\tinputTextureSize, inputTextureSize, 0, 0, outputTextureSize, outputTextureSize\n\t\t);\n\t\treturn canvas;\n\t}\n\n\tgetMaxCubeMapTextureSize(gl, image) {\n\t\tconst agent = Agent();\n\t\tconst maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\tlet _imageWidth = this.getSourceTileSize(image);\n\n\t\tif (agent.browser.name === \"ie\" && parseInt(agent.browser.version, 10) === 11) {\n\t\t\tif (!mathUtil.isPowerOfTwo(_imageWidth)) {\n\t\t\t\tfor (let i = 1; i < maxCubeMapTextureSize; i *= 2) {\n\t\t\t\t\tif (i < _imageWidth) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_imageWidth = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ios 9 의 경우 텍스쳐 최대사이즈는 1024 이다.\n\t\tif (agent.os.name === \"ios\" && parseInt(agent.os.version, 10) === 9) {\n\t\t\t_imageWidth = 1024;\n\t\t}\n\t\t// ios 8 의 경우 텍스쳐 최대사이즈는 512 이다.\n\t\tif (agent.os.name === \"ios\" && parseInt(agent.os.version, 10) === 8) {\n\t\t\t_imageWidth = 512;\n\t\t}\n\t\t// maxCubeMapTextureSize 보다는 작고, imageWidth 보다 큰 2의 승수 중 가장 작은 수\n\t\treturn Math.min(maxCubeMapTextureSize, _imageWidth);\n\t}\n}\n\nexport default CubeRenderer;\n","\nimport Renderer from \"./Renderer.js\";\nimport WebGLUtils from \"../WebGLUtils\";\n\nexport default class CubeStripRenderer extends Renderer {\n\tgetVertexShaderSource() {\n\t\treturn `\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nvarying highp vec2 vTextureCoord;\nvoid main(void) {\n\tvTextureCoord = aTextureCoord;\n\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n}`;\n\t}\n\n\tgetFragmentShaderSource() {\n\t\treturn `\n#define PI 3.14159265359\nprecision highp float;\nvarying highp vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform bool uIsEAC;\nconst vec2 OPERATE_COORDS_RANGE = vec2(-1.0, 1.0);\nconst vec2 TEXTURE_COORDS_RANGE = vec2(0.0, 1.0);\n// vector type is used for initializing values instead of array.\nconst vec4 TEXTURE_DIVISION_X = vec4(0.0, 1.0 / 3.0, 2.0 / 3.0, 1.0);\nconst vec3 TEXTURE_DIVISION_Y = vec3(0.0, 1.0 / 2.0, 1.0);\nconst float EAC_CONST = 2.0 / PI;\nfloat scale(vec2 domainRange, vec2 targetRange, float val) {\n\tfloat unit = 1.0 / (domainRange[1] - domainRange[0]);\n\treturn targetRange[0] + (targetRange[1] - targetRange[0]) * (val - domainRange[0]) * unit;\n}\nvoid main(void) {\n\tfloat transformedCoordX;\n\tfloat transformedCoordY;\n\n\tif (uIsEAC) {\n\t\tvec2 orgTextureRangeX;\n\t\tvec2 orgTextureRangeY;\n\n\t\t// Apply EAC transform\n\t\tif (vTextureCoord.s >= TEXTURE_DIVISION_X[2]) {\n\t\t\torgTextureRangeX = vec2(TEXTURE_DIVISION_X[2], TEXTURE_DIVISION_X[3]);\n\t\t} else if (vTextureCoord.s >= TEXTURE_DIVISION_X[1]) {\n\t\t\torgTextureRangeX = vec2(TEXTURE_DIVISION_X[1], TEXTURE_DIVISION_X[2]);\n\t\t} else {\n\t\t\torgTextureRangeX = vec2(TEXTURE_DIVISION_X[0], TEXTURE_DIVISION_X[1]);\n\t\t}\n\n\t\tif (vTextureCoord.t >= TEXTURE_DIVISION_Y[1]) {\n\t\t\torgTextureRangeY = vec2(TEXTURE_DIVISION_Y[1], TEXTURE_DIVISION_Y[2]);\n\t\t} else {\n\t\t\torgTextureRangeY = vec2(TEXTURE_DIVISION_Y[0], TEXTURE_DIVISION_Y[1]);\n\t\t}\n\n\t\t// scaling coors by the coordinates following the range from -1.0 to 1.0.\n\t\tfloat px = scale(orgTextureRangeX, OPERATE_COORDS_RANGE, vTextureCoord.s);\n\t\tfloat py = scale(orgTextureRangeY, OPERATE_COORDS_RANGE, vTextureCoord.t);\n\n\t\tfloat qu = EAC_CONST * atan(px) + 0.5;\n\t\tfloat qv = EAC_CONST * atan(py) + 0.5;\n\n\t\t// re-scaling coors by original coordinates ranges\n\t\ttransformedCoordX = scale(TEXTURE_COORDS_RANGE, orgTextureRangeX, qu);\n\t\ttransformedCoordY = scale(TEXTURE_COORDS_RANGE, orgTextureRangeY, qv);\n\t} else {\n\t\t// normal cubemap\n\t\ttransformedCoordX = vTextureCoord.s;\n\t\ttransformedCoordY = vTextureCoord.t;\n\t}\n\n\tgl_FragColor = texture2D(uSampler, vec2(transformedCoordX, transformedCoordY));\n}`;\n\t}\n\n\tgetVertexPositionData() {\n\t\tif (!this._vertices) {\n\t\t\tthis._vertices = [\n\t\t\t\t// back\n\t\t\t\t1, -1, 1,\n\t\t\t\t-1, -1, 1,\n\t\t\t\t-1, 1, 1,\n\t\t\t\t1, 1, 1,\n\n\t\t\t\t// front\n\t\t\t\t-1, -1, -1,\n\t\t\t\t1, -1, -1,\n\t\t\t\t1, 1, -1,\n\t\t\t\t-1, 1, -1,\n\n\t\t\t\t// up\n\t\t\t\t-1, 1, -1,\n\t\t\t\t1, 1, -1,\n\t\t\t\t1, 1, 1,\n\t\t\t\t-1, 1, 1,\n\n\t\t\t\t// down\n\t\t\t\t-1, -1, 1,\n\t\t\t\t1, -1, 1,\n\t\t\t\t1, -1, -1,\n\t\t\t\t-1, -1, -1,\n\n\t\t\t\t// right\n\t\t\t\t1, -1, -1,\n\t\t\t\t1, -1, 1,\n\t\t\t\t1, 1, 1,\n\t\t\t\t1, 1, -1,\n\n\t\t\t\t// left\n\t\t\t\t-1, -1, 1,\n\t\t\t\t-1, -1, -1,\n\t\t\t\t-1, 1, -1,\n\t\t\t\t-1, 1, 1\n\t\t\t];\n\t\t}\n\n\t\treturn this._vertices;\n\t}\n\n\tgetIndexData() {\n\t\t// TODO: 한번만 계산하도록 수정하기\n\t\tconst indices = (() => {\n\t\t\tconst indexData = [];\n\n\t\t\tfor (let i = 0; i < (this._vertices.length / 3); i += 4) {\n\t\t\t\tindexData.push(\n\t\t\t\t\ti,\n\t\t\t\t\ti + 1,\n\t\t\t\t\ti + 2,\n\t\t\t\t\ti,\n\t\t\t\t\ti + 2,\n\t\t\t\t\ti + 3\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn indexData;\n\t\t})();\n\n\t\treturn indices;\n\t}\n\n\tgetTextureCoordData(imageConfig) {\n\t\t// TODO: make it cols, rows as config.\n\t\tconst cols = 3;\n\t\tconst rows = 2;\n\t\tconst order = imageConfig.order || \"RLUDFB\";\n\t\tlet coords = [];\n\n\t\t// 텍스쳐의 좌표는 윗쪽이 큰 값을 가지므로 row 는 역순으로 넣는다.\n\t\tfor (let r = rows - 1; r >= 0; r--) {\n\t\t\tfor (let c = 0; c < cols; c++) {\n\t\t\t\tconst coord = [\n\t\t\t\t\tc / cols, r / rows,\n\t\t\t\t\t(c + 1) / cols, r / rows,\n\t\t\t\t\t(c + 1) / cols, (r + 1) / rows,\n\t\t\t\t\tc / cols, (r + 1) / rows\n\t\t\t\t];\n\n\t\t\t\tcoords.push(coord);\n\t\t\t}\n\t\t}\n\n\t\tconst tileConfigs = this._extractTileConfig(imageConfig);\n\n\t\t// Transform Coord By Flip & Rotation\n\t\tcoords = coords\n\t\t// shrink coord to avoid pixel bleeding\n\t\t\t.map(coord => this._shrinkCoord(coord))\n\t\t\t.map((coord, i) => this._transformCoord(coord, tileConfigs[i]));\n\n\t\t// vertices 에서 지정된 순서대로 그대로 그리기 위해 vertex 의 순서를 BFUDRL 로 재배치\n\t\treturn \"BFUDRL\".split(\"\")\n\t\t\t.map(face => order.indexOf(face))\n\t\t\t.map(index => coords[index])\n\t\t\t.reduce((acc, val) => acc.concat(val), []);\n\t}\n\n\tupdateTexture(gl, image) {\n\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n\t}\n\n\tbindTexture(gl, texture, image) {\n\t\t// Make sure image isn't too big\n\t\tconst {width, height} = this.getDimension(image);\n\t\tconst size = Math.max(width, height);\n\t\tconst maxSize = WebGLUtils.getMaxTextureSize(gl);\n\n\t\tif (size > maxSize) {\n\t\t\tthis._triggerError(`Image width(${width}) exceeds device limit(${maxSize}))`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Pixel Source for IE11 & Video\n\t\tthis._initPixelSource(image);\n\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\tthis.updateTexture(gl, image);\n\t}\n\n\t_transformCoord(coord, tileConfig) {\n\t\tlet newCoord = coord.slice();\n\n\t\tif (tileConfig.flipHorizontal) {\n\t\t\tnewCoord = this._flipHorizontalCoord(newCoord);\n\t\t}\n\n\t\tif (tileConfig.rotation) {\n\t\t\tnewCoord = this._rotateCoord(newCoord, tileConfig.rotation);\n\t\t}\n\n\t\treturn newCoord;\n\t}\n\n\t_shrinkCoord(coord) {\n\t\tconst SHRINK_Y = 0.00;\n\t\tconst SHRINK_X = 0.00;\n\n\t\treturn [\n\t\t\tcoord[0] + SHRINK_X, coord[1] + SHRINK_Y,\n\t\t\tcoord[2] - SHRINK_X, coord[3] + SHRINK_Y,\n\t\t\tcoord[4] - SHRINK_X, coord[5] - SHRINK_Y,\n\t\t\tcoord[6] + SHRINK_X, coord[7] - SHRINK_Y\n\t\t];\n\t}\n\n\t_rotateCoord(coord, rotationAngle) {\n\t\tconst SIZE = 2; // coord means x,y coordinates. Two values(x, y) makes a one coord.\n\t\tconst shiftCount = parseInt(rotationAngle / 90, 10) % 4;\n\n\t\tif (shiftCount === 0) {\n\t\t\treturn coord;\n\t\t}\n\n\t\tlet moved;\n\t\tlet rotatedCoord = [];\n\n\t\tif (shiftCount > 0) {\n\t\t\tmoved = coord.splice(0, shiftCount * SIZE);\n\t\t\trotatedCoord = coord.concat(moved);\n\t\t} else {\n\t\t\tmoved = coord.splice((4 + shiftCount) * SIZE, -shiftCount * SIZE);\n\t\t\trotatedCoord = moved.concat(coord);\n\t\t}\n\n\t\treturn rotatedCoord;\n\t}\n\n\t_flipHorizontalCoord(coord) {\n\t\treturn [\n\t\t\tcoord[2], coord[3],\n\t\t\tcoord[0], coord[1],\n\t\t\tcoord[6], coord[7],\n\t\t\tcoord[4], coord[5]\n\t\t];\n\t}\n}\n","/**\n * Constant value for gyro mode. <br>(Reference {@link https://github.com/naver/egjs-view360/wiki/PanoViewer-3.0-User-Guide})\n * @ko gyro 모드 대한 상수 값. <br>({@link https://github.com/naver/egjs-view360/wiki/PanoViewer-3.0-User-Guide} 참고)\n * @namespace\n * @name GYRO_MODE\n * @memberof eg.view360.PanoViewer\n */\n/**\n * Disable gyro\n * @ko gyro 비활성화\n * @name NONE\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"none\"\n */\n/**\n * YawPitch Mode\n * @ko YawPitch Mode\n * @name YAWPITCH\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"yawPitch\"\n */\n/**\n * VR Mode\n * @ko VR Mode\n * @name VR\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"VR\"\n */\nimport {GYRO_MODE} from \"../YawPitchControl/consts\";\n\n/**\n * Constant value for errors\n * @ko 에러에 대한 상수 값\n * @namespace\n * @name ERROR_TYPE\n * @memberof eg.view360.PanoViewer\n */\nconst ERROR_TYPE = {\n\t/**\n\t * Unsupported device\n\t * @ko 미지원 기기\n\t * @name INVALID_DEVICE\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 10\n\t */\n\tINVALID_DEVICE: 10,\n\t/**\n\t * Webgl not support\n\t * @ko WEBGL 미지원\n\t * @name NO_WEBGL\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 11\n\t */\n\tNO_WEBGL: 11,\n\t/**\n\t * Failed to load image\n\t * @ko 이미지 로드 실패\n\t * @name FAIL_IMAGE_LOAD\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 12\n\t */\n\tFAIL_IMAGE_LOAD: 12,\n\t/**\n\t * Failed to bind texture\n\t * @ko 텍스쳐 바인딩 실패\n\t * @name FAIL_BIND_TEXTURE\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 13\n\t */\n\tFAIL_BIND_TEXTURE: 13,\n\t/**\n\t * Only one resource(image or video) should be specified\n\t * @ko 리소스 지정 오류 (image 혹은 video 중 하나만 지정되어야 함)\n\t * @name INVALID_RESOURCE\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 14\n\t */\n\tINVALID_RESOURCE: 14,\n\t/**\n\t * WebGL context lost occurred\n\t * @ko WebGL context lost 발생\n\t * @name RENDERING_CONTEXT_LOST\n\t * @memberof eg.view360.PanoViewer.ERROR_TYPE\n\t * @constant\n\t * @type {Number}\n\t * @default 15\n\t */\n\tRENDERING_CONTEXT_LOST: 15,\n};\n\n/**\n * Constant value for events\n * @ko 이벤트에 대한 상수 값\n * @namespace\n * @name EVENTS\n * @memberof eg.view360.PanoViewer\n */\nconst EVENTS = {\n\t/**\n\t * Events that is fired when PanoViewer is ready to show image and handle user interaction.\n\t * @ko PanoViewer 가 사용자의 인터렉션 및 렌더링이 준비되상태에 발생하는 이벤트\n\t * @name READY\n\t * @memberof eg.view360.PanoViewer.EVENTS\n\t * @constant\n\t * @type {String}\n\t * @default ready\n\t */\n\tREADY: \"ready\",\n\t/**\n\t * Events that is fired when direction or fov is changed.\n\t * @ko PanoViewer 에서 바라보고 있는 방향이나 FOV(화각)가 변경되었을때 발생하는 이벤트\n\t * @name VIEW_CHANGE\n\t * @memberof eg.view360.PanoViewer.EVENTS\n\t * @constant\n\t * @type {String}\n\t * @default viewChange\n\t */\n\tVIEW_CHANGE: \"viewChange\",\n\t/**\n\t * Events that is fired when animation which is triggered by inertia is ended.\n\t * @ko 관성에 의한 애니메이션 동작이 완료되었을때 발생하는 이벤트\n\t * @name ANIMATION_END\n\t * @memberof eg.view360.PanoViewer.EVENTS\n\t * @constant\n\t * @type {String}\n\t * @default animationEnd\n\t */\n\tANIMATION_END: \"animationEnd\",\n\t/**\n\t * Events that is fired when error occurs\n\t * @ko 에러 발생 시 발생하는 이벤트\n\t * @name ERROR\n\t * @memberof eg.view360.PanoViewer.EVENTS\n\t * @constant\n\t * @type {String}\n\t * @default error\n\t */\n\tERROR: \"error\"\n};\n\n/**\n * Constant value for projection type\n * @ko 프로젝션 타입 대한 상수 값\n * @namespace\n * @name PROJECTION_TYPE\n * @memberof eg.view360.PanoViewer\n */\nconst PROJECTION_TYPE = {\n\t/**\n\t * Constant value for equirectangular type.\n\t * @ko equirectangular 에 대한 상수 값.\n\t * @name EQUIRECTANGULAR\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default equirectangular\n\t */\n\tEQUIRECTANGULAR: \"equirectangular\",\n\t/**\n\t * Constant value for cubemap type.\n\t * @ko cubemap 에 대한 상수 값.\n\t * @name CUBEMAP\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default cubemap\n\t */\n\tCUBEMAP: \"cubemap\",\n\t/**\n\t * Constant value for cubestrip type.\n\t * Cubestrip is a format for a single image with a combination of six cube faces. It is almost identical to cubemap, but it is implemented in a different way. It aims at better performance and efficiency. In addition, it automatically detects and supports EAC.\n\t *\n\t * @ko cubemap 에 대한 상수 값.Cubestrip 은 cube 면이 6개가 조합된 조합을 한장의 이미지를 위한 포맷이다. cubemap 과 사용방법이 거의 동일하지만 다른 방식으로 구현되었다. 보다 좋은 성능과 효율성을 목적으로 한다. 더불어 자동으로 EAC 를 감지하고 지원한다.\n\t * @name CUBESTRIP\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default cubestrip\n\t */\n\tCUBESTRIP: \"cubestrip\",\n\t/**\n\t * Constant value for PANORAMA type.\n\t *\n\t * PANORAMA is a format for a panorma image which is taken from smartphone.\n\t *\n\t * @ko PANORAMA 에 대한 상수값. 파노라마는 스마트 폰에서 가져온 파노라마 이미지의 형식입니다.\n\t *\n\t * @name PANORAMA\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default panorama\n\t */\n\tPANORAMA: \"panorama\",\n\t/**\n\t * Constant value for EQUI_STEREOSCOPY type.\n\t *\n\t * Constant value for EQUI_STEREOSCOPY. Stereoscopy image format of EQUIRECTANGULAR. It is an experimental function to show a stereoscopic type equirectangular image on a plane. It does not support stereoscopic viewing function through special visual equipment at present.\n\t *\n\t * @ko EQUI_STEREOSCOPY 에 대한 상수값. EQUIRECTANGULAR 의 Stereoscopy 이미지 형식입니다. Stereoscopic 형태의 equirectangular 이미지를 평면에 보여주기 위한 실험적인 기능으로 현재는 특수한 시각 장비를 통한 입체적인 보기 기능은 지원하지 않습니다.\n\t *\n\t * @name STEREOSCOPIC_EQUI\n\t * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n\t * @constant\n\t * @type {String}\n\t * @default stereoequi\n\t */\n\tSTEREOSCOPIC_EQUI: \"stereoequi\",\n};\n\n/**\n * A constant value for the format of the stereoscopic equirectangular projection type.\n * @ko Stereoscopic equirectangular 프로젝션 타입의 포맷에 대한 상수 값\n * @namespace\n * @name STEREO_FORMAT\n * @memberof eg.view360.PanoViewer\n */\nconst STEREO_FORMAT = {\n\t/**\n\t * A constant value for format of top bottom stereoscopic 360 equirectangular projection.\n\t * @ko top bottom stereoscopic 360 equirectangular projection 콘텐츠 포맷에 대한 상수값.\n\t * @name TOP_BOTTOM\n\t * @memberof eg.view360.PanoViewer.STEREO_FORMAT\n\t * @constant\n\t * @type {String}\n\t * @default \"3dv\"\n\t */\n\tTOP_BOTTOM: \"3dv\",\n\t/**\n\t * A constant value for format of left right stereoscopic 360 equirectangular projection.\n\t * @ko Left right stereoscopic 360 equirectangular projection 콘텐츠 포맷에 대한 상수값.\n\t * @name LEFT_RIGHT\n\t * @memberof eg.view360.PanoViewer.STEREO_FORMAT\n\t * @constant\n\t * @type {String}\n\t * @default \"3dh\"\n\t */\n\tLEFT_RIGHT: \"3dh\",\n\t/**\n\t * A constant value specifying media is not in stereoscopic format.\n\t * @ko Stereoscopic 영상이 아닐 경우에 적용하는 상수값.\n\t * @name NONE\n\t * @memberof eg.view360.PanoViewer.STEREO_FORMAT\n\t * @constant\n\t * @type {String}\n\t * @default \"\"\n\t */\n\tNONE: \"\",\n};\n\nexport {\n\tGYRO_MODE,\n\tEVENTS,\n\tERROR_TYPE,\n\tPROJECTION_TYPE,\n\tSTEREO_FORMAT\n};\n","import {glMatrix} from \"gl-matrix\";\nimport Renderer from \"./Renderer\";\nimport WebGLUtils from \"../WebGLUtils\";\n\n// const latitudeBands = 60;\nconst MIN_ASPECT_RATIO_FOR_FULL_PANORAMA = 6;\nconst longitudeBands = 60;\n\nconst textureCoordData = [];\nconst vertexPositionData = [];\nconst indexData = [];\n\nclass CylinderRenderer extends Renderer {\n\tstatic _VERTEX_POSITION_DATA = vertexPositionData;\n\tstatic _TEXTURE_COORD_DATA = textureCoordData;\n\tstatic _INDEX_DATA = indexData;\n\n\tgetVertexPositionData() {\n\t\treturn CylinderRenderer._VERTEX_POSITION_DATA;\n\t}\n\n\tgetIndexData() {\n\t\treturn CylinderRenderer._INDEX_DATA;\n\t}\n\n\tgetTextureCoordData() {\n\t\treturn CylinderRenderer._TEXTURE_COORD_DATA;\n\t}\n\n\tgetVertexShaderSource() {\n\t\treturn `\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nvarying highp vec2 vTextureCoord;\nvoid main(void) {\n\tvTextureCoord = aTextureCoord;\n\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n}`;\n\t}\n\n\tgetFragmentShaderSource() {\n\t\treturn `\nprecision highp float;\nvarying highp vec2 vTextureCoord;\nuniform sampler2D uSampler;\nvoid main(void) {\n\tgl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n}`;\n\t}\n\n\tupdateTexture(gl, image) {\n\t\tWebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n\t}\n\n\tbindTexture(gl, texture, image) {\n\t\t// Make sure image isn't too big\n\t\tconst {width, height} = this.getDimension(image);\n\t\tconst size = Math.max(width, height);\n\t\tconst maxSize = WebGLUtils.getMaxTextureSize(gl);\n\t\tlet resizeDimension;\n\n\t\tif (size > maxSize) {\n\t\t\tthis._triggerError(`Image width(${width}) exceeds device texture limit(${maxSize}))`);\n\n\t\t\t// Request resizing texture.\n\t\t\t/**\n\t\t\t * TODO: Is it need to apply on another projection type?\n\t\t\t */\n\t\t\tresizeDimension = width > height ?\n\t\t\t\t{width: maxSize, height: maxSize * height / width} :\n\t\t\t\t{width: maxSize * width / height, height: maxSize};\n\t\t}\n\n\t\t// Pixel Source for IE11 & Video or resizing needed\n\t\tthis._initPixelSource(image, resizeDimension);\n\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\tthis.updateTexture(gl, image);\n\t}\n\n\tupdateShaderData({imageAspectRatio = MIN_ASPECT_RATIO_FOR_FULL_PANORAMA}) {\n\t\tlet lngIdx;\n\t\tlet cylinderMaxRadian;\n\t\tlet halfCylinderY;\n\t\tlet rotated;\n\t\tlet aspectRatio;\n\n\t\t// Exception case: orientation is rotated.\n\t\tif (imageAspectRatio < 1) {\n\t\t\t/**\n\t\t\t * If rotated is true, we assume that image is rotated counter clockwise.\n\t\t\t * TODO: If there's other rotation, it is need to implement by each rotation.\n\t\t\t */\n\t\t\trotated = true;\n\t\t\taspectRatio = 1 / imageAspectRatio;\n\t\t} else {\n\t\t\trotated = false;\n\t\t\taspectRatio = imageAspectRatio;\n\t\t}\n\n\t\tif (aspectRatio >= MIN_ASPECT_RATIO_FOR_FULL_PANORAMA) {\n\t\t\tconst fov = 360 / aspectRatio;\n\n\t\t\tcylinderMaxRadian = 2 * Math.PI; // 360 deg\n\t\t\thalfCylinderY = Math.tan(glMatrix.toRadian(fov / 2));\n\t\t} else {\n\t\t\tcylinderMaxRadian = aspectRatio;\n\t\t\thalfCylinderY = 0.5;// Range of cylinder is [-0.5, 0.5] to make height to 1.\n\t\t}\n\n\t\t// intialize shader data before update\n\t\ttextureCoordData.length = 0;\n\t\tvertexPositionData.length = 0;\n\t\tindexData.length = 0;\n\n\t\tconst CYLIDER_Y = [-halfCylinderY, halfCylinderY];\n\t\tconst startAngleForCenterAlign = Math.PI / 2 + (2 * Math.PI - cylinderMaxRadian) / 2; // Math.PI / 2 start point when cylinderMaxRadian is 2 phi(360)\n\n\t\t// console.log(\"cylinderMaxRadian:\", glMatrix.toDegree(cylinderMaxRadian), \"CYLIDER_Y\", CYLIDER_Y, \"start angle\", glMatrix.toDegree(startAngleForCenterAlign));\n\t\tfor (let yIdx = 0, yLength = CYLIDER_Y.length; yIdx < yLength/* bottom & top */; yIdx++) {\n\t\t\tfor (lngIdx = 0; lngIdx <= longitudeBands; lngIdx++) {\n\t\t\t\tconst angle = startAngleForCenterAlign + (lngIdx / longitudeBands * cylinderMaxRadian);\n\t\t\t\tconst x = Math.cos(angle);\n\t\t\t\tconst y = CYLIDER_Y[yIdx];\n\t\t\t\tconst z = Math.sin(angle);\n\t\t\t\tlet u;\n\t\t\t\tlet v;\n\n\t\t\t\tif (rotated) {\n\t\t\t\t\t// Rotated 90 degree (counter clock wise)\n\t\t\t\t\tu = 1 - yIdx; // yLength - yIdx;\n\t\t\t\t\tv = lngIdx / longitudeBands;\n\t\t\t\t} else {\n\t\t\t\t// \t// Normal case (Not rotated)\n\t\t\t\t\tu = lngIdx / longitudeBands;\n\t\t\t\t\tv = yIdx;\n\t\t\t\t}\n\n\t\t\t\ttextureCoordData.push(u, v);\n\t\t\t\tvertexPositionData.push(x, y, z);\n\n\t\t\t\tif (yIdx === 0 && lngIdx < longitudeBands) {\n\t\t\t\t\tconst a = lngIdx;\n\t\t\t\t\tconst b = a + longitudeBands + 1;\n\n\t\t\t\t\tindexData.push(a, b, a + 1, b, b + 1, a + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default CylinderRenderer;\n","import {mat4} from \"gl-matrix\";\n\nconst VR_DISPLAY_PRESENT_CHANGE = \"vrdisplaypresentchange\";\nconst DEFAULT_LEFT_BOUNDS = [0, 0, 0.5, 1];\nconst DEFAULT_RIGHT_BOUNDS = [0.5, 0, 0.5, 1];\nconst EYES = {\n\tLEFT: \"left\",\n\tRIGHT: \"right\"\n};\n\nclass VRManager {\n\tget context() { return this._vrDisplay; }\n\n\tconstructor() {\n\t\tthis._frameData = new window.VRFrameData();\n\t\tthis._clear();\n\t}\n\n\tdestroy = () => {\n\t\tconst vrDisplay = this._vrDisplay;\n\n\t\tthis.removeEndCallback(this.destroy);\n\n\t\tif (vrDisplay && vrDisplay.isPresenting) {\n\t\t\tvrDisplay.exitPresent();\n\t\t}\n\n\t\tthis._clear();\n\t}\n\n\tcanRender() {\n\t\treturn Boolean(this._vrDisplay);\n\t}\n\n\tbeforeRender(gl) {\n\t\t// Render to the default backbuffer\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\tafterRender() {\n\t\tthis._vrDisplay.submitFrame();\n\t}\n\n\tgetEyeParams(gl) {\n\t\tconst display = this._vrDisplay;\n\t\tconst halfWidth = gl.drawingBufferWidth * 0.5;\n\t\tconst height = gl.drawingBufferHeight;\n\t\tconst frameData = this._frameData;\n\n\t\tdisplay.getFrameData(frameData);\n\n\t\tconst leftMVMatrix = frameData.leftViewMatrix;\n\t\tconst rightMVMatrix = frameData.rightViewMatrix;\n\n\t\tmat4.rotateY(leftMVMatrix, leftMVMatrix, this._yawOffset);\n\t\tmat4.rotateY(rightMVMatrix, rightMVMatrix, this._yawOffset);\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tviewport: [0, 0, halfWidth, height],\n\t\t\t\tmvMatrix: leftMVMatrix,\n\t\t\t\tpMatrix: frameData.leftProjectionMatrix,\n\t\t\t},\n\t\t\t{\n\t\t\t\tviewport: [halfWidth, 0, halfWidth, height],\n\t\t\t\tmvMatrix: rightMVMatrix,\n\t\t\t\tpMatrix: frameData.rightProjectionMatrix,\n\t\t\t}\n\t\t];\n\t}\n\n\tisPresenting() {\n\t\treturn Boolean(this._vrDisplay && this._vrDisplay.isPresenting);\n\t}\n\n\taddEndCallback(callback) {\n\t\twindow.addEventListener(VR_DISPLAY_PRESENT_CHANGE, callback);\n\t}\n\n\tremoveEndCallback(callback) {\n\t\twindow.removeEventListener(VR_DISPLAY_PRESENT_CHANGE, callback);\n\t}\n\n\trequestPresent(canvas) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tnavigator.getVRDisplays().then(displays => {\n\t\t\t\tconst vrDisplay = displays.length && displays[0];\n\n\t\t\t\tif (!vrDisplay) {\n\t\t\t\t\treject(new Error(\"No displays available.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!vrDisplay.capabilities.canPresent) {\n\t\t\t\t\treject(new Error(\"Display lacking capability to present.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvrDisplay.requestPresent([{source: canvas}]).then(() => {\n\t\t\t\t\tconst leftEye = vrDisplay.getEyeParameters(EYES.LEFT);\n\t\t\t\t\tconst rightEye = vrDisplay.getEyeParameters(EYES.RIGHT);\n\n\t\t\t\t\tcanvas.width = Math.max(leftEye.renderWidth, rightEye.renderWidth) * 2;\n\t\t\t\t\tcanvas.height = Math.max(leftEye.renderHeight, rightEye.renderHeight);\n\n\t\t\t\t\tthis._setDisplay(vrDisplay);\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tsetYawOffset(offset) {\n\t\tthis._yawOffset = offset;\n\t}\n\n\t_setDisplay(vrDisplay) {\n\t\tthis._vrDisplay = vrDisplay;\n\n\t\tconst layers = vrDisplay.getLayers();\n\n\t\tif (layers.length) {\n\t\t\tconst layer = layers[0];\n\n\t\t\tthis._leftBounds = layer.leftBounds;\n\t\t\tthis._rightBounds = layer.rightBounds;\n\t\t}\n\n\t\tthis.addEndCallback(this.destroy);\n\t}\n\n\t_clear() {\n\t\tthis._vrDisplay = null;\n\t\tthis._leftBounds = DEFAULT_LEFT_BOUNDS;\n\t\tthis._rightBounds = DEFAULT_RIGHT_BOUNDS;\n\t\tthis._yawOffset = 0;\n\t}\n}\n\nexport default VRManager;\n","import {mat4, glMatrix} from \"gl-matrix\";\nimport {IS_SAFARI_ON_DESKTOP} from \"../../utils/browser\";\n\nconst XR_REFERENCE_SPACE = \"local\";\n\nclass XRManager {\n\tget context() { return this._xrSession; }\n\n\tconstructor() {\n\t\tthis._clear();\n\t}\n\n\tdestroy = () => {\n\t\tconst xrSession = this._xrSession;\n\n\t\tthis.removeEndCallback(this.destroy);\n\n\t\tif (xrSession) {\n\t\t\t// Capture to avoid errors\n\t\t\txrSession.end().then(() => {}, () => {});\n\t\t}\n\t\tthis._clear();\n\t}\n\n\tcanRender(frame) {\n\t\tconst pose = frame.getViewerPose(this._xrRefSpace);\n\n\t\treturn Boolean(pose);\n\t}\n\n\tbeforeRender(gl, frame) {\n\t\tconst session = frame.session;\n\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, baseLayer.framebuffer);\n\t}\n\n\tafterRender() {}\n\n\tgetEyeParams(gl, frame) {\n\t\tconst session = frame.session;\n\t\tconst pose = frame.getViewerPose(this._xrRefSpace);\n\n\t\tif (!pose) {\n\t\t\t// Can't render\n\t\t\treturn null;\n\t\t}\n\n\t\tconst glLayer = session.renderState.baseLayer;\n\n\t\treturn pose.views.map(view => {\n\t\t\tconst viewport = glLayer.getViewport(view);\n\t\t\tconst mvMatrix = view.transform.inverse.matrix;\n\n\t\t\tif (IS_SAFARI_ON_DESKTOP) {\n\t\t\t\tmat4.rotateX(mvMatrix, mvMatrix, glMatrix.toRadian(180));\n\t\t\t}\n\n\t\t\tmat4.rotateY(mvMatrix, mvMatrix, this._yawOffset);\n\n\t\t\treturn {\n\t\t\t\tviewport: [viewport.x, viewport.y, viewport.width, viewport.height],\n\t\t\t\tmvMatrix,\n\t\t\t\tpMatrix: view.projectionMatrix\n\t\t\t};\n\t\t});\n\t}\n\n\tisPresenting() {\n\t\treturn this._presenting;\n\t}\n\n\taddEndCallback(callback) {\n\t\tconst session = this._xrSession;\n\n\t\tif (!session) return;\n\n\t\tsession.addEventListener(\"end\", callback);\n\t}\n\n\tremoveEndCallback(callback) {\n\t\tconst session = this._xrSession;\n\n\t\tif (!session) return;\n\n\t\tsession.removeEventListener(\"end\", callback);\n\t}\n\n\trequestPresent(canvas, gl) {\n\t\treturn navigator.xr.requestSession(\"immersive-vr\", {\n\t\t\trequiredFeatures: [XR_REFERENCE_SPACE],\n\t\t}).then(session => {\n\t\t\tconst xrLayer = new window.XRWebGLLayer(session, gl);\n\n\t\t\tsession.updateRenderState({baseLayer: xrLayer});\n\t\t\treturn session.requestReferenceSpace(XR_REFERENCE_SPACE)\n\t\t\t\t.then(refSpace => {\n\t\t\t\t\tthis._setSession(session, xrLayer, refSpace);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tsetYawOffset(offset) {\n\t\tthis._yawOffset = offset;\n\t}\n\n\t_setSession(session, xrLayer, refSpace) {\n\t\tthis._xrSession = session;\n\t\tthis._xrLayer = xrLayer;\n\t\tthis._xrRefSpace = refSpace;\n\t\tthis._presenting = true;\n\t\tthis.addEndCallback(this.destroy);\n\t}\n\n\t_clear() {\n\t\tthis._xrSession = null;\n\t\tthis._xrLayer = null;\n\t\tthis._xrRefSpace = null;\n\t\tthis._presenting = false;\n\t\tthis._yawOffset = 0;\n\t}\n}\n\nexport default XRManager;\n","import {IS_SAFARI_ON_DESKTOP} from \"../utils/browser\";\n\nclass WebGLAnimator {\n\tconstructor() {\n\t\tthis._callback = null;\n\t\tthis._context = window;\n\t\tthis._rafId = -1;\n\t\tthis._rafTimer = -1;\n\t}\n\n\tsetCallback(callback) {\n\t\tthis._callback = callback;\n\t}\n\n\tsetContext(context) {\n\t\tthis._context = context;\n\t}\n\n\tstart() {\n\t\tconst context = this._context;\n\t\tconst callback = this._callback;\n\n\t\t// No context / callback set\n\t\tif (!context || !callback) return;\n\t\t// Animation already started\n\t\tif (this._rafId >= 0 || this._rafTimer >= 0) return;\n\n\t\tif (IS_SAFARI_ON_DESKTOP) {\n\t\t\tthis._rafId = context.requestAnimationFrame(this._onLoopNextTick);\n\t\t} else {\n\t\t\tthis._rafId = context.requestAnimationFrame(this._onLoop);\n\t\t}\n\t}\n\n\tstop() {\n\t\tif (this._rafId >= 0) {\n\t\t\tthis._context.cancelAnimationFrame(this._rafId);\n\t\t}\n\n\t\tif (this._rafTimer >= 0) {\n\t\t\tclearTimeout(this._rafTimer);\n\t\t}\n\n\t\tthis._rafId = -1;\n\t\tthis._rafTimer = -1;\n\t}\n\n\t/**\n\t * There can be more than 1 argument when we use XRSession's raf\n\t */\n\t_onLoop = (...args) => {\n\t\tthis._callback(...args);\n\t\tthis._rafId = this._context.requestAnimationFrame(this._onLoop);\n\t}\n\n\t/**\n\t * MacOS X Safari Bug Fix\n\t * This code guarantees that rendering should be occurred.\n\t *\n\t * In MacOS X(10.14.2), Safari (12.0.2)\n\t * The requestAnimationFrame(RAF) callback is called just after previous RAF callback without term\n\t * only if requestAnimationFrame is called for next frame while updating frame is delayed (~over 2ms)\n\t * So browser cannot render the frame and may be freezing.\n\t */\n\t_onLoopNextTick = (...args) => {\n\t\tconst before = performance.now();\n\n\t\tthis._callback(...args);\n\n\t\tconst diff = performance.now() - before;\n\n\t\tif (this._rafTimer >= 0) {\n\t\t\tclearTimeout(this._rafTimer);\n\t\t\tthis._rafTimer = -1;\n\t\t}\n\n\t\t/** Use requestAnimationFrame only if current rendering could be possible over 60fps (1000/60) */\n\t\tif (diff < 16) {\n\t\t\tthis._rafId = this._context.requestAnimationFrame(this._onLoop);\n\t\t} else {\n\t\t\t/** Otherwise, Call setTimeout instead of requestAnimationFrame to gaurantee renering should be occurred*/\n\t\t\tthis._rafTimer = setTimeout(this._onLoop, 0);\n\t\t}\n\t}\n}\n\nexport default WebGLAnimator;\n","import Component from \"@egjs/component\";\nimport {glMatrix, vec3, mat3, mat4, quat} from \"gl-matrix\";\nimport ImageLoader from \"./ImageLoader\";\nimport VideoLoader from \"./VideoLoader\";\nimport WebGLUtils from \"./WebGLUtils\";\nimport Renderer from \"./renderer/Renderer\";\nimport CubeRenderer from \"./renderer/CubeRenderer\";\nimport CubeStripRenderer from \"./renderer/CubeStripRenderer\";\nimport SphereRenderer from \"./renderer/SphereRenderer\";\nimport CylinderRenderer from \"./renderer/CylinderRenderer\";\nimport VRManager from \"./vr/VRManager\";\nimport XRManager from \"./vr/XRManager\";\nimport WebGLAnimator from \"./WebGLAnimator\";\nimport {util as mathUtil} from \"../utils/math-util\";\nimport {devicePixelRatio, WEBXR_SUPPORTED} from \"../utils/browserFeature\";\nimport {PROJECTION_TYPE, STEREO_FORMAT} from \"../PanoViewer/consts\";\nimport {IS_IOS} from \"../utils/browser\";\n\nconst ImageType = PROJECTION_TYPE;\n\nlet DEVICE_PIXEL_RATIO = devicePixelRatio || 1;\n\n// DEVICE_PIXEL_RATIO 가 2를 초과하는 경우는 리소스 낭비이므로 2로 맞춘다.\nif (DEVICE_PIXEL_RATIO > 2) {\n\tDEVICE_PIXEL_RATIO = 2;\n}\n\n// define custom events name\n/**\n * TODO: how to manage events/errortype with PanoViewer\n *\n * I think renderer events should be seperated from viewer events although it has same name.\n */\nconst EVENTS = {\n\tBIND_TEXTURE: \"bindTexture\",\n\tIMAGE_LOADED: \"imageLoaded\",\n\tERROR: \"error\",\n\tRENDERING_CONTEXT_LOST: \"renderingContextLost\",\n\tRENDERING_CONTEXT_RESTORE: \"renderingContextRestore\",\n};\n\nconst ERROR_TYPE = {\n\tINVALID_DEVICE: 10,\n\tNO_WEBGL: 11,\n\tFAIL_IMAGE_LOAD: 12,\n\tRENDERER_ERROR: 13\n};\n\nclass PanoImageRenderer extends Component {\n\tstatic EVENTS = EVENTS;\n\tstatic ERROR_TYPE = ERROR_TYPE;\n\n\tconstructor(\n\t\timage, width, height, isVideo, sphericalConfig, renderingContextAttributes\n\t) {\n\t\t// Super constructor\n\t\tsuper();\n\n\t\tthis.sphericalConfig = sphericalConfig;\n\t\tthis.fieldOfView = sphericalConfig.fieldOfView;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis._lastQuaternion = null;\n\t\tthis._lastYaw = null;\n\t\tthis._lastPitch = null;\n\t\tthis._lastFieldOfView = null;\n\n\t\tthis.pMatrix = mat4.create();\n\t\tthis.mvMatrix = mat4.create();\n\n\t\t// initialzie pMatrix\n\t\tmat4.perspective(this.pMatrix, glMatrix.toRadian(this.fieldOfView), width / height, 0.1, 100);\n\n\t\tthis.textureCoordBuffer = null;\n\t\tthis.vertexBuffer = null;\n\t\tthis.indexBuffer = null;\n\n\t\tthis.canvas = this._initCanvas(width, height);\n\t\tthis._setDefaultCanvasStyle();\n\t\tthis._wrapper = null; // canvas wrapper\n\t\tthis._wrapperOrigStyle = null;\n\n\t\tthis._renderingContextAttributes = renderingContextAttributes;\n\t\tthis._image = null;\n\t\tthis._imageConfig = null;\n\t\tthis._imageIsReady = false;\n\t\tthis._shouldForceDraw = false;\n\t\tthis._keepUpdate = false; // Flag to specify 'continuous update' on video even when still.\n\n\t\tthis._onContentLoad = this._onContentLoad.bind(this);\n\t\tthis._onContentError = \tthis._onContentError.bind(this);\n\n\t\tthis._animator = new WebGLAnimator();\n\n\t\t// VR/XR manager\n\t\tthis._vr = null;\n\n\t\tif (image) {\n\t\t\tthis.setImage({\n\t\t\t\timage,\n\t\t\t\timageType: sphericalConfig.imageType,\n\t\t\t\tisVideo,\n\t\t\t\tcubemapConfig: sphericalConfig.cubemapConfig\n\t\t\t});\n\t\t}\n\t}\n\n\t// FIXME: Please refactor me to have more loose connection to yawpitchcontrol\n\tsetYawPitchControl(yawPitchControl) {\n\t\tthis._yawPitchControl = yawPitchControl;\n\t}\n\n\tgetContent() {\n\t\treturn this._image;\n\t}\n\n\tsetImage({image, imageType, isVideo = false, cubemapConfig}) {\n\t\tthis._imageIsReady = false;\n\t\tthis._isVideo = isVideo;\n\t\tthis._imageConfig = Object.assign(\n\t\t\t{\n\t\t\t\t/* RLUDBF is abnormal, we use it on CUBEMAP only */\n\t\t\t\torder: (imageType === ImageType.CUBEMAP) ? \"RLUDBF\" : \"RLUDFB\",\n\t\t\t\ttileConfig: {\n\t\t\t\t\tflipHorizontal: false,\n\t\t\t\t\trotation: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\tcubemapConfig\n\t\t);\n\t\tthis._setImageType(imageType);\n\n\t\tif (this._contentLoader) {\n\t\t\tthis._contentLoader.destroy();\n\t\t}\n\n\t\tif (isVideo) {\n\t\t\tthis._contentLoader = new VideoLoader();\n\t\t\tthis._keepUpdate = true;\n\t\t} else {\n\t\t\tthis._contentLoader = new ImageLoader();\n\t\t\tthis._keepUpdate = false;\n\t\t}\n\n\t\t// img element or img url\n\t\tthis._contentLoader.set(image);\n\n\t\t// 이미지의 사이즈를 캐시한다.\n\t\t// image is reference for content in contentLoader, so it may be not valid if contentLoader is destroyed.\n\t\tthis._image = this._contentLoader.getElement();\n\n\t\treturn this._contentLoader.get()\n\t\t\t.then(this._onContentLoad, this._onContentError)\n\t\t\t.catch(e => setTimeout(() => { throw e; }));// Prevent exceptions from being isolated in promise chain.\n\t}\n\n\t_setImageType(imageType) {\n\t\tif (!imageType || this._imageType === imageType) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._imageType = imageType;\n\t\tthis._isCubeMap = imageType === ImageType.CUBEMAP;\n\n\t\tif (this._renderer) {\n\t\t\tthis._renderer.off();\n\t\t}\n\n\t\tswitch (imageType) {\n\t\t\tcase ImageType.CUBEMAP:\n\t\t\t\tthis._renderer = new CubeRenderer();\n\t\t\t\tbreak;\n\t\t\tcase ImageType.CUBESTRIP:\n\t\t\t\tthis._renderer = new CubeStripRenderer();\n\t\t\t\tbreak;\n\t\t\tcase ImageType.PANORAMA:\n\t\t\t\tthis._renderer = new CylinderRenderer();\n\t\t\t\tbreak;\n\t\t\tcase ImageType.STEREOSCOPIC_EQUI:\n\t\t\t\tthis._renderer = new SphereRenderer(this.sphericalConfig.stereoFormat);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._renderer = new SphereRenderer(STEREO_FORMAT.NONE);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._renderer.on(Renderer.EVENTS.ERROR, e => {\n\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\ttype: ERROR_TYPE.RENDERER_ERROR,\n\t\t\t\tmessage: e.message\n\t\t\t});\n\t\t});\n\n\t\tthis._initWebGL();\n\t}\n\n\t_initCanvas(width, height) {\n\t\tconst canvas = document.createElement(\"canvas\");\n\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tthis._onWebglcontextlost = this._onWebglcontextlost.bind(this);\n\t\tthis._onWebglcontextrestored = this._onWebglcontextrestored.bind(this);\n\n\t\tcanvas.addEventListener(\"webglcontextlost\", this._onWebglcontextlost);\n\t\tcanvas.addEventListener(\"webglcontextrestored\", this._onWebglcontextrestored);\n\n\t\treturn canvas;\n\t}\n\n\t_setDefaultCanvasStyle() {\n\t\tconst canvas = this.canvas;\n\n\t\tcanvas.style.bottom = 0;\n\t\tcanvas.style.left = 0;\n\t\tcanvas.style.right = 0;\n\t\tcanvas.style.top = 0;\n\t\tcanvas.style.margin = \"auto\";\n\t\tcanvas.style.maxHeight = \"100%\";\n\t\tcanvas.style.maxWidth = \"100%\";\n\t\tcanvas.style.outline = \"none\";\n\t\tcanvas.style.position = \"absolute\";\n\t}\n\n\t_onContentError(error) {\n\t\tthis._imageIsReady = false;\n\t\tthis._image = null;\n\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\ttype: ERROR_TYPE.FAIL_IMAGE_LOAD,\n\t\t\tmessage: \"failed to load image\"\n\t\t});\n\n\t\treturn false;\n\t}\n\n\t_triggerContentLoad() {\n\t\tthis.trigger(EVENTS.IMAGE_LOADED, {\n\t\t\tcontent: this._image,\n\t\t\tisVideo: this._isVideo,\n\t\t\tprojectionType: this._imageType\n\t\t});\n\t}\n\t_onContentLoad(image) {\n\t\tthis._imageIsReady = true;\n\n\t\tthis._triggerContentLoad();\n\t\treturn true;\n\t}\n\n\tisImageLoaded() {\n\t\treturn !!this._image && this._imageIsReady &&\n\t\t\t(!this._isVideo || this._image.readyState >= 2 /* HAVE_CURRENT_DATA */);\n\t}\n\n\tbindTexture() {\n\t\treturn new Promise((res, rej) => {\n\t\t\tif (!this._contentLoader) {\n\t\t\t\trej(\"ImageLoader is not initialized\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._contentLoader.get()\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis._bindTexture();\n\t\t\t\t}, rej)\n\t\t\t\t.then(res);\n\t\t});\n\t}\n\n\t// 부모 엘리먼트에 canvas 를 붙임\n\tattachTo(parentElement) {\n\t\tthis.detach();\n\t\tparentElement.appendChild(this.canvas);\n\t\tthis._wrapper = parentElement;\n\t}\n\n\tforceContextLoss() {\n\t\tif (this.hasRenderingContext()) {\n\t\t\tconst loseContextExtension = this.context.getExtension(\"WEBGL_lose_context\");\n\n\t\t\tif (loseContextExtension) {\n\t\t\t\tloseContextExtension.loseContext();\n\t\t\t}\n\t\t}\n\t}\n\n\t// 부모 엘리먼트에서 canvas 를 제거\n\tdetach() {\n\t\tif (this.canvas.parentElement) {\n\t\t\tthis.canvas.parentElement.removeChild(this.canvas);\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tif (this._contentLoader) {\n\t\t\tthis._contentLoader.destroy();\n\t\t}\n\n\t\tthis._animator.stop();\n\t\tthis.detach();\n\t\tthis.forceContextLoss();\n\n\t\tthis.off();\n\n\t\tthis.canvas.removeEventListener(\"webglcontextlost\", this._onWebglcontextlost);\n\t\tthis.canvas.removeEventListener(\"webglcontextrestored\", this._onWebglcontextrestored);\n\t}\n\n\thasRenderingContext() {\n\t\tif (!(this.context && !this.context.isContextLost())) {\n\t\t\treturn false;\n\t\t} else if (\n\t\t\tthis.context &&\n\t\t\t!this.context.getProgramParameter(this.shaderProgram, this.context.LINK_STATUS)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t_initShaderProgram() {\n\t\tconst gl = this.context;\n\n\t\tif (this.shaderProgram) {\n\t\t\tgl.deleteProgram(this.shaderProgram);\n\t\t\tthis.shaderProgram = null;\n\t\t}\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst vsSource = renderer.getVertexShaderSource();\n\t\tconst fsSource = renderer.getFragmentShaderSource();\n\n\t\tconst vertexShader = WebGLUtils.createShader(gl, gl.VERTEX_SHADER, vsSource);\n\t\tconst fragmentShader = WebGLUtils.createShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n\t\tconst shaderProgram = WebGLUtils.createProgram(gl, vertexShader, fragmentShader);\n\n\t\tif (!shaderProgram) {\n\t\t\tthrow new Error(`Failed to intialize shaders: ${WebGLUtils.getErrorNameFromWebGLErrorCode(gl.getError())}`);\n\t\t}\n\n\t\tgl.useProgram(shaderProgram);\n\t\tshaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\n\t\tgl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\t\tshaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, \"uPMatrix\");\n\t\tshaderProgram.mvMatrixUniform = gl.getUniformLocation(shaderProgram, \"uMVMatrix\");\n\t\tshaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n\t\tshaderProgram.textureCoordAttribute = gl.getAttribLocation(shaderProgram, \"aTextureCoord\");\n\t\tshaderProgram.uEye = gl.getUniformLocation(shaderProgram, \"uEye\");\n\n\t\tgl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\n\n\t\t// clear buffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\t\t// Use TEXTURE0\n\t\tgl.uniform1i(shaderProgram.samplerUniform, 0);\n\n\t\tthis.shaderProgram = shaderProgram;\n\t}\n\n\t_onWebglcontextlost(e) {\n\t\te.preventDefault();\n\t\tthis.trigger(EVENTS.RENDERING_CONTEXT_LOST);\n\t}\n\n\t_onWebglcontextrestored(e) {\n\t\tthis._initWebGL();\n\t\tthis.trigger(EVENTS.RENDERING_CONTEXT_RESTORE);\n\t}\n\n\tupdateFieldOfView(fieldOfView) {\n\t\tthis.fieldOfView = fieldOfView;\n\t\tthis._updateViewport();\n\t}\n\n\tupdateViewportDimensions(width, height) {\n\t\tlet viewPortChanged = false;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tconst w = width * DEVICE_PIXEL_RATIO;\n\t\tconst h = height * DEVICE_PIXEL_RATIO;\n\n\t\tif (w !== this.canvas.width) {\n\t\t\tthis.canvas.width = w;\n\t\t\tviewPortChanged = true;\n\t\t}\n\n\t\tif (h !== this.canvas.height) {\n\t\t\tthis.canvas.height = h;\n\t\t\tviewPortChanged = true;\n\t\t}\n\n\t\tif (!viewPortChanged) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateViewport();\n\t\tthis._shouldForceDraw = true;\n\t}\n\n\t_updateViewport() {\n\t\tmat4.perspective(\n\t\t\tthis.pMatrix,\n\t\t\tglMatrix.toRadian(this.fieldOfView),\n\t\t\tthis.canvas.width / this.canvas.height,\n\t\t\t0.1,\n\t\t\t100);\n\n\t\tthis.context.viewport(0, 0, this.context.drawingBufferWidth, this.context.drawingBufferHeight);\n\t}\n\n\t_initWebGL() {\n\t\tlet gl;\n\n\t\t// TODO: Following code does need to be executed only if width/height, cubicStrip property is changed.\n\t\ttry {\n\t\t\tthis._initRenderingContext();\n\t\t\tgl = this.context;\n\n\t\t\tthis.updateViewportDimensions(this.width, this.height);\n\t\t\tthis._initShaderProgram();\n\t\t} catch (e) {\n\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\ttype: ERROR_TYPE.NO_WEBGL,\n\t\t\t\tmessage: \"no webgl support\"\n\t\t\t});\n\t\t\tthis.destroy();\n\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\treturn;\n\t\t}\n\t\t// 캔버스를 투명으로 채운다.\n\t\tgl.clearColor(0, 0, 0, 0);\n\t\tconst textureTarget = this._isCubeMap ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n\n\t\tif (this.texture) {\n\t\t\tgl.deleteTexture(this.texture);\n\t\t}\n\n\t\tthis.texture = WebGLUtils.createTexture(gl, textureTarget);\n\n\t\tif (this._imageType === ImageType.CUBESTRIP) {\n\t\t\t// TODO: Apply following options on other projection type.\n\t\t\tgl.enable(gl.CULL_FACE);\n\t\t\t// gl.enable(gl.DEPTH_TEST);\n\t\t}\n\t}\n\n\t_initRenderingContext() {\n\t\tif (this.hasRenderingContext()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!window.WebGLRenderingContext) {\n\t\t\tthrow new Error(\"WebGLRenderingContext not available.\");\n\t\t}\n\n\t\tthis.context = WebGLUtils.getWebglContext(this.canvas, this._renderingContextAttributes);\n\n\t\tif (!this.context) {\n\t\t\tthrow new Error(\"Failed to acquire 3D rendering context\");\n\t\t}\n\t}\n\n\t_initBuffers() {\n\t\tconst vertexPositionData = this._renderer.getVertexPositionData();\n\t\tconst indexData = this._renderer.getIndexData();\n\t\tconst textureCoordData = this._renderer.getTextureCoordData(this._imageConfig);\n\t\tconst gl = this.context;\n\n\t\tthis.vertexBuffer = WebGLUtils.initBuffer(\n\t\t\tgl, gl.ARRAY_BUFFER, new Float32Array(vertexPositionData), 3,\n\t\t\tthis.shaderProgram.vertexPositionAttribute);\n\n\t\tthis.indexBuffer = WebGLUtils.initBuffer(\n\t\t\tgl, gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexData), 1);\n\n\t\tthis.textureCoordBuffer = WebGLUtils.initBuffer(\n\t\t\tgl, gl.ARRAY_BUFFER, new Float32Array(textureCoordData), this._isCubeMap ? 3 : 2,\n\t\t\tthis.shaderProgram.textureCoordAttribute);\n\n\t\tthis._bindBuffers();\n\t}\n\n\t_bindTexture() {\n\t\t// Detect if it is EAC Format while CUBESTRIP mode.\n\t\t// We assume it is EAC if image is not 3/2 ratio.\n\t\tif (this._imageType === ImageType.CUBESTRIP) {\n\t\t\tconst {width, height} = this._renderer.getDimension(this._image);\n\t\t\tconst isEAC = width && height && width / height !== 1.5;\n\n\t\t\tthis.context.uniform1f(this.context.getUniformLocation(this.shaderProgram, \"uIsEAC\"), isEAC);\n\t\t} else if (this._imageType === ImageType.PANORAMA) {\n\t\t\tconst {width, height} = this._renderer.getDimension(this._image);\n\t\t\tconst imageAspectRatio = width && height && width / height;\n\n\t\t\tthis._renderer.updateShaderData({imageAspectRatio});\n\t\t}\n\n\t\t// intialize shader buffers after image is loaded.(by updateShaderData)\n\t\t// because buffer may be differ by image size.(eg. CylinderRenderer)\n\t\tthis._initBuffers();\n\n\t\tthis._renderer.bindTexture(\n\t\t\tthis.context,\n\t\t\tthis.texture,\n\t\t\tthis._image,\n\t\t\tthis._imageConfig,\n\t\t);\n\t\tthis._shouldForceDraw = true;\n\n\t\tthis.trigger(EVENTS.BIND_TEXTURE);\n\t}\n\n\t_updateTexture() {\n\t\tthis._renderer.updateTexture(\n\t\t\tthis.context,\n\t\t\tthis._image,\n\t\t\tthis._imageConfig,\n\t\t);\n\t}\n\n\tkeepUpdate(doUpdate) {\n\t\tif (doUpdate && this.isImageLoaded() === false) {\n\t\t\t// Force to draw a frame after image is loaded on render()\n\t\t\tthis._shouldForceDraw = true;\n\t\t}\n\n\t\tthis._keepUpdate = doUpdate;\n\t}\n\n\tstartRender() {\n\t\tthis._animator.setCallback(this._render.bind(this));\n\t\tthis._animator.start();\n\t}\n\n\tstopRender() {\n\t\tthis._animator.stop();\n\t}\n\n\trenderWithQuaternion(quaternion, fieldOfView) {\n\t\tif (!this.isImageLoaded()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._keepUpdate === false &&\n\t\t\tthis._lastQuaternion && quat.exactEquals(this._lastQuaternion, quaternion) &&\n\t\t\tthis.fieldOfView && this.fieldOfView === fieldOfView &&\n\t\t\tthis._shouldForceDraw === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// updatefieldOfView only if fieldOfView is changed.\n\t\tif (fieldOfView !== undefined && fieldOfView !== this.fieldOfView) {\n\t\t\tthis.updateFieldOfView(fieldOfView);\n\t\t}\n\n\t\tthis.mvMatrix = mat4.fromQuat(mat4.create(), quaternion);\n\n\t\tthis._draw();\n\n\t\tthis._lastQuaternion = quat.clone(quaternion);\n\t\tif (this._shouldForceDraw) {\n\t\t\tthis._shouldForceDraw = false;\n\t\t}\n\t}\n\n\trenderWithYawPitch(yaw, pitch, fieldOfView) {\n\t\tif (!this.isImageLoaded()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._keepUpdate === false &&\n\t\t\t\tthis._lastYaw !== null && this._lastYaw === yaw &&\n\t\t\t\tthis._lastPitch !== null && this._lastPitch === pitch &&\n\t\t\t\tthis.fieldOfView && this.fieldOfView === fieldOfView &&\n\t\t\t\tthis._shouldForceDraw === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// fieldOfView 가 존재하면서 기존의 값과 다를 경우에만 업데이트 호출\n\t\tif (fieldOfView !== undefined && fieldOfView !== this.fieldOfView) {\n\t\t\tthis.updateFieldOfView(fieldOfView);\n\t\t}\n\n\t\tmat4.identity(this.mvMatrix);\n\t\tmat4.rotateX(this.mvMatrix, this.mvMatrix, -glMatrix.toRadian(pitch));\n\t\tmat4.rotateY(this.mvMatrix, this.mvMatrix, -glMatrix.toRadian(yaw));\n\n\t\tthis._draw();\n\n\t\tthis._lastYaw = yaw;\n\t\tthis._lastPitch = pitch;\n\t\tif (this._shouldForceDraw) {\n\t\t\tthis._shouldForceDraw = false;\n\t\t}\n\t}\n\n\t_render() {\n\t\tconst yawPitchControl = this._yawPitchControl;\n\t\tconst fov = yawPitchControl.getFov();\n\n\t\tif (yawPitchControl.shouldRenderWithQuaternion()) {\n\t\t\tconst quaternion = yawPitchControl.getQuaternion();\n\n\t\t\tthis.renderWithQuaternion(quaternion, fov);\n\t\t} else {\n\t\t\tconst yawPitch = yawPitchControl.getYawPitch();\n\n\t\t\tthis.renderWithYawPitch(yawPitch.yaw, yawPitch.pitch, fov);\n\t\t}\n\t}\n\n\t_renderStereo = (time, frame) => {\n\t\tconst vr = this._vr;\n\t\tconst gl = this.context;\n\n\t\tconst eyeParams = vr.getEyeParams(gl, frame);\n\n\t\tif (!eyeParams) return;\n\n\t\tvr.beforeRender(gl, frame);\n\n\t\t// Render both eyes\n\t\tfor (const eyeIndex of [0, 1]) {\n\t\t\tconst eyeParam = eyeParams[eyeIndex];\n\n\t\t\tthis.mvMatrix = eyeParam.mvMatrix;\n\t\t\tthis.pMatrix = eyeParam.pMatrix;\n\n\t\t\tgl.viewport(...eyeParam.viewport);\n\t\t\tgl.uniform1f(this.shaderProgram.uEye, eyeIndex);\n\n\t\t\tthis._bindBuffers();\n\t\t\tthis._draw();\n\t\t}\n\n\t\tvr.afterRender();\n\t}\n\n\t_bindBuffers() {\n\t\tconst gl = this.context;\n\t\tconst program = this.shaderProgram;\n\n\t\tconst vertexBuffer = this.vertexBuffer;\n\t\tconst textureCoordBuffer = this.textureCoordBuffer;\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\t\tgl.enableVertexAttribArray(program.vertexPositionAttribute);\n\t\tgl.vertexAttribPointer(\n\t\t\tprogram.vertexPositionAttribute, vertexBuffer.itemSize, gl.FLOAT, false, 0, 0\n\t\t);\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, textureCoordBuffer);\n\t\tgl.enableVertexAttribArray(program.textureCoordAttribute);\n\t\tgl.vertexAttribPointer(\n\t\t\tprogram.textureCoordAttribute, textureCoordBuffer.itemSize, gl.FLOAT, false, 0, 0\n\t\t);\n\t}\n\n\t_draw() {\n\t\tif (this._isVideo && this._keepUpdate) {\n\t\t\tthis._updateTexture();\n\t\t}\n\n\t\tthis._renderer.render({\n\t\t\tgl: this.context,\n\t\t\tshaderProgram: this.shaderProgram,\n\t\t\tindexBuffer: this.indexBuffer,\n\t\t\tmvMatrix: this.mvMatrix,\n\t\t\tpMatrix: this.pMatrix,\n\t\t});\n\t}\n\n\t/**\n\t * Returns projection renderer by each type\n\t */\n\tgetProjectionRenderer() {\n\t\treturn this._renderer;\n\t}\n\n\t/**\n\t * @return Promise\n\t */\n\tenterVR() {\n\t\tconst vr = this._vr;\n\n\t\tif (!WEBXR_SUPPORTED && !navigator.getVRDisplays) {\n\t\t\treturn Promise.reject(\"VR is not available on this browser.\");\n\t\t}\n\t\tif (vr && vr.isPresenting()) {\n\t\t\treturn Promise.resolve(\"VR already enabled.\");\n\t\t}\n\n\t\treturn this._requestPresent();\n\t}\n\n\texitVR = () => {\n\t\tconst vr = this._vr;\n\t\tconst gl = this.context;\n\t\tconst animator = this._animator;\n\n\t\tif (!vr) return;\n\n\t\tvr.removeEndCallback(this.exitVR);\n\t\tvr.destroy();\n\t\tthis._vr = null;\n\n\t\t// Restore canvas & context on iOS\n\t\tif (IS_IOS) {\n\t\t\tthis._restoreStyle();\n\t\t}\n\t\tthis.updateViewportDimensions(this.width, this.height);\n\t\tthis._updateViewport();\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\tthis._bindBuffers();\n\t\tthis._shouldForceDraw = true;\n\n\t\tanimator.stop();\n\t\tanimator.setContext(window);\n\t\tanimator.setCallback(this._render.bind(this));\n\t\tanimator.start();\n\t}\n\n\t_requestPresent() {\n\t\tconst gl = this.context;\n\t\tconst canvas = this.canvas;\n\t\tconst animator = this._animator;\n\n\t\tthis._vr = WEBXR_SUPPORTED ?\n\t\t\tnew XRManager() :\n\t\t\tnew VRManager();\n\n\t\tconst vr = this._vr;\n\n\t\tanimator.stop();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvr.requestPresent(canvas, gl)\n\t\t\t\t.then(() => {\n\t\t\t\t\tvr.addEndCallback(this.exitVR);\n\t\t\t\t\tanimator.setContext(vr.context);\n\t\t\t\t\tanimator.setCallback(this._onFirstVRFrame);\n\n\t\t\t\t\tif (IS_IOS) {\n\t\t\t\t\t\tthis._setWrapperFullscreen();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._shouldForceDraw = true;\n\t\t\t\t\tanimator.start();\n\n\t\t\t\t\tresolve(\"success\");\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tvr.destroy();\n\t\t\t\t\tthis._vr = null;\n\t\t\t\t\tanimator.start();\n\n\t\t\t\t\treject(e);\n\t\t\t\t});\n\t\t});\n\t}\n\n\t_onFirstVRFrame = (time, frame) => {\n\t\tconst vr = this._vr;\n\t\tconst gl = this.context;\n\t\tconst animator = this._animator;\n\n\t\t// If rendering is not ready, wait for next frame\n\t\tif (!vr.canRender(frame)) return;\n\n\t\tconst minusZDir = vec3.fromValues(0, 0, -1);\n\t\tconst eyeParam = vr.getEyeParams(gl, frame)[0];\n\t\t// Extract only rotation\n\t\tconst mvMatrix = mat3.fromMat4(mat3.create(), eyeParam.mvMatrix);\n\t\tconst pMatrix = mat3.fromMat4(mat3.create(), eyeParam.pMatrix);\n\n\t\tconst mvInv = mat3.invert(mat3.create(), mvMatrix);\n\t\tconst pInv = mat3.invert(mat3.create(), pMatrix);\n\t\tconst viewDir = vec3.transformMat3(vec3.create(), minusZDir, pInv);\n\n\t\tvec3.transformMat3(viewDir, viewDir, mvInv);\n\n\t\tconst yawOffset = mathUtil.yawOffsetBetween(viewDir, vec3.fromValues(0, 0, 1));\n\n\t\tif (yawOffset === 0) {\n\t\t\t// If the yawOffset is exactly 0, then device sensor is not ready\n\t\t\t// So read it again until it has any value in it\n\t\t\treturn;\n\t\t}\n\n\t\tvr.setYawOffset(yawOffset);\n\t\tanimator.setCallback(this._renderStereo);\n\t}\n\n\t_setWrapperFullscreen() {\n\t\tconst wrapper = this._wrapper;\n\n\t\tif (!wrapper) return;\n\n\t\tthis._wrapperOrigStyle = wrapper.getAttribute(\"style\");\n\t\tconst wrapperStyle = wrapper.style;\n\n\t\twrapperStyle.width = \"100vw\";\n\t\twrapperStyle.height = \"100vh\";\n\t\twrapperStyle.position = \"fixed\";\n\t\twrapperStyle.left = \"0\";\n\t\twrapperStyle.top = \"0\";\n\t\twrapperStyle.zIndex = \"9999\";\n\t}\n\n\t_restoreStyle() {\n\t\tconst wrapper = this._wrapper;\n\t\tconst canvas = this.canvas;\n\n\t\tif (!wrapper) return;\n\n\t\tif (this._wrapperOrigStyle) {\n\t\t\twrapper.setAttribute(\"style\", this._wrapperOrigStyle);\n\t\t} else {\n\t\t\twrapper.removeAttribute(\"style\");\n\t\t}\n\n\t\tthis._wrapperOrigStyle = null;\n\n\t\t// Restore canvas style\n\t\tcanvas.removeAttribute(\"style\");\n\t\tthis._setDefaultCanvasStyle();\n\t}\n}\n\nexport default PanoImageRenderer;\n","import Component from \"@egjs/component\";\nimport {glMatrix} from \"gl-matrix\";\nimport {\n\tDeviceMotionEvent, checkXRSupport\n} from \"../utils/browserFeature\";\n\nimport YawPitchControl from \"../YawPitchControl/YawPitchControl\";\nimport PanoImageRenderer from \"../PanoImageRenderer/PanoImageRenderer\";\nimport WebGLUtils from \"../PanoImageRenderer/WebGLUtils\";\nimport {ERROR_TYPE, EVENTS, GYRO_MODE, PROJECTION_TYPE, STEREO_FORMAT} from \"./consts\";\nimport {util as mathUtil} from \"../utils/math-util.js\";\nimport {VERSION} from \"../version\";\n\nclass PanoViewer extends Component {\n\t/**\n\t * Version info string\n\t * @ko 버전정보 문자열\n\t * @name VERSION\n\t * @static\n\t * @type {String}\n\t * @example\n\t * eg.view360.PanoViewer.VERSION;  // ex) 3.0.1\n\t * @memberof eg.view360.PanoViewer\n\t */\n\tstatic VERSION = VERSION;\n\tstatic ERROR_TYPE = ERROR_TYPE;\n\tstatic EVENTS = EVENTS;\n\tstatic PROJECTION_TYPE = PROJECTION_TYPE;\n\tstatic GYRO_MODE = GYRO_MODE;\n\t// It should be deprecated!\n\tstatic ProjectionType = PROJECTION_TYPE;\n\tstatic STEREO_FORMAT = STEREO_FORMAT;\n\t/**\n\t * Constant value for touch directions\n\t * @ko 터치 방향에 대한 상수 값.\n\t * @namespace\n\t * @name TOUCH_DIRECTION\n\t * @memberof eg.view360.PanoViewer\n\t */\n\tstatic TOUCH_DIRECTION = {\n\t\t/**\n\t\t * Constant value for none direction.\n\t\t * @ko none 방향에 대한 상수 값.\n\t\t * @name NONE\n\t\t * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n\t\t * @constant\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tNONE: YawPitchControl.TOUCH_DIRECTION_NONE,\n\t\t/**\n\t\t * Constant value for horizontal(yaw) direction.\n\t\t * @ko horizontal(yaw) 방향에 대한 상수 값.\n\t\t * @name YAW\n\t\t * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n\t\t * @constant\n\t\t * @type {Number}\n\t\t * @default 6\n\t\t */\n\t\tYAW: YawPitchControl.TOUCH_DIRECTION_YAW,\n\t\t/**\n\t\t * Constant value for vertical direction.\n\t\t * @ko vertical(pitch) 방향에 대한 상수 값.\n\t\t * @name PITCH\n\t\t * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n\t\t * @constant\n\t\t * @type {Number}\n\t\t * @default 24\n\t\t */\n\t\tPITCH: YawPitchControl.TOUCH_DIRECTION_PITCH,\n\t\t/**\n\t\t * Constant value for all direction.\n\t\t * @ko all 방향에 대한 상수 값.\n\t\t * @name ALL\n\t\t * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n\t\t * @constant\n\t\t * @type {Number}\n\t\t * @default 30\n\t\t */\n\t\tALL: YawPitchControl.TOUCH_DIRECTION_ALL\n\t};\n\n\t/**\n\t * @classdesc 360 media viewer\n\t * @ko 360 미디어 뷰어\n\t * @class\n\t * @name eg.view360.PanoViewer\n\t * @extends eg.Component\n\t *\n\t * @param {HTMLElement} container The container element for the renderer. <ko>렌더러의 컨테이너 엘리먼트</ko>\n\t * @param {Object} config\n\t *\n\t * @param {String|Image} config.image Input image url or element (Use only image property or video property)<ko>입력 이미지 URL 혹은 엘리먼트(image 와 video 둘 중 하나만 설정)</ko>\n\t * @param {String|HTMLVideoElement} config.video Input video url or element(Use only image property or video property)<ko>입력 비디오 URL 혹은 엘리먼트(image 와 video 둘 중 하나만 설정)</ko>\n\t * @param {String} [config.projectionType=equirectangular] The type of projection: equirectangular, cubemap <br/>{@link eg.view360.PanoViewer.PROJECTION_TYPE}<ko>Projection 유형 : equirectangular, cubemap <br/>{@link eg.view360.PanoViewer.PROJECTION_TYPE}</ko>\n\t * @param {Object} config.cubemapConfig config cubemap projection layout. It is applied when projectionType is {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP} or {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBESTRIP}<ko>cubemap projection type 의 레이아웃을 설정한다. 이 설정은 ProjectionType이 {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP} 혹은 {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBESTRIP} 인 경우에만 적용된다.</ko>\n\t * @param {Object} [config.cubemapConfig.order = \"RLUDBF\"(ProjectionType === CUBEMAP) | \"RLUDFB\" (ProjectionType === CUBESTRIP)] Order of cubemap faces <ko>Cubemap 형태의 이미지가 배치된 순서</ko>\n\t * @param {Object} [config.cubemapConfig.tileConfig = {flipHorizontal:false, rotation: 0}] Setting about rotation angle(degree) and whether to flip horizontal for each cubemap faces, if you put this object as a array, you can set each faces with different setting. For example, [{flipHorizontal:false, rotation:90}, {flipHorizontal: true, rotation: 180}, ...]<ko>각 Cubemap 면에 대한 회전 각도/좌우반전 여부 설정, 객체를 배열 형태로 지정하여 각 면에 대한 설정을 다르게 지정할 수도 있다. 예를 들어 [{flipHorizontal:false, rotation:90}, {flipHorizontal: true, rotation: 180}, ...]과 같이 지정할 수 있다.</ko>\n\t * @param {String} [config.stereoFormat=\"3dv\"] Contents format of the stereoscopic equirectangular projection.<br/>See {@link eg.view360.PanoViewer.STEREO_FORMAT}.<ko>Stereoscopic equirectangular projection type의 콘텐츠 포맷을 설정한다.<br/>{@link eg.view360.PanoViewer.STEREO_FORMAT} 참조.</ko>\n\t * @param {Number} [config.width=width of container] the viewer's width. (in px) <ko>뷰어의 너비 (px 단위)</ko>\n\t * @param {Number} [config.height=height of container] the viewer's height.(in px) <ko>뷰어의 높이 (px 단위)</ko>\n\t *\n\t * @param {Number} [config.yaw=0] Initial Yaw of camera (in degree) <ko>카메라의 초기 Yaw (degree 단위)</ko>\n\t * @param {Number} [config.pitch=0] Initial Pitch of camera (in degree) <ko>카메라의 초기 Pitch (degree 단위)</ko>\n\t * @param {Number} [config.fov=65] Initial vertical field of view of camera (in degree) <ko>카메라의 초기 수직 field of view (degree 단위)</ko>\n\t * @param {Boolean} [config.showPolePoint=false] If false, the pole is not displayed inside the viewport <ko>false 인 경우, 극점은 뷰포트 내부에 표시되지 않습니다</ko>\n\t * @param {Boolean} [config.useZoom=true] When true, enables zoom with the wheel and Pinch gesture <ko>true 일 때 휠 및 집기 제스춰로 확대 / 축소 할 수 있습니다.</ko>\n\t * @param {Boolean} [config.useKeyboard=true] When true, enables the keyboard move key control: awsd, arrow keys <ko>true 이면 키보드 이동 키 컨트롤을 활성화합니다: awsd, 화살표 키</ko>\n\t * @param {String} [config.gyroMode=yawPitch] Enables control through device motion. (\"none\", \"yawPitch\", \"VR\") <br/>{@link eg.view360.PanoViewer.GYRO_MODE} <ko>디바이스 움직임을 통한 컨트롤을 활성화 합니다. (\"none\", \"yawPitch\", \"VR\") <br/>{@link eg.view360.PanoViewer.GYRO_MODE} </ko>\n\t * @param {Array} [config.yawRange=[-180, 180]] Range of controllable Yaw values <ko>제어 가능한 Yaw 값의 범위</ko>\n\t * @param {Array} [config.pitchRange=[-90, 90]] Range of controllable Pitch values <ko>제어 가능한 Pitch 값의 범위</ko>\n\t * @param {Array} [config.fovRange=[30, 110]] Range of controllable vertical field of view values <ko>제어 가능한 수직 field of view 값의 범위</ko>\n\t * @param {Number} [config.touchDirection= {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL}(6)] Direction of touch that can be controlled by user <br/>{@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>사용자가 터치로 조작 가능한 방향 <br/>{@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n\t *\n\t * @example\n\t * // PanoViewer Creation\n\t * // create PanoViewer with option\n\t * var PanoViewer = eg.view360.PanoViewer;\n\t * // Area where the image will be displayed(HTMLElement)\n\t * var container = document.getElementById(\"myPanoViewer\");\n\t *\n\t * var panoViewer = new PanoViewer(container, {\n\t *     // If projectionType is not specified, the default is \"equirectangular\".\n\t *     // Specifies an image of the \"equirectangular\" type.\n\t *     image: \"/path/to/image/image.jpg\"\n\t *});\n\t *\n\t * @example\n\t * // Cubemap Config Setting Example\n\t * // For support Youtube EAC projection, You should set cubemapConfig as follows.\n\t * cubemapConfig: {\n\t * \torder: \"LFRDBU\",\n\t * \ttileConfig: [\n\t * \t\ttileConfig: [{rotation: 0}, {rotation: 0}, {rotation: 0}, {rotation: 0}, {rotation: -90}, {rotation: 180}]\n\t * \t]\n\t * }\n\t */\n\tconstructor(container, options = {}) {\n\t\tsuper();\n\n\t\t// Raises the error event if webgl is not supported.\n\t\tif (!WebGLUtils.isWebGLAvailable()) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\t\ttype: ERROR_TYPE.NO_WEBGL,\n\t\t\t\t\tmessage: \"no webgl support\"\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!WebGLUtils.isStableWebGL()) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\t\ttype: ERROR_TYPE.INVALID_DEVICE,\n\t\t\t\t\tmessage: \"blacklisted browser\"\n\t\t\t\t});\n\t\t\t}, 0);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!!options.image && !!options.video) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\t\ttype: ERROR_TYPE.INVALID_RESOURCE,\n\t\t\t\t\tmessage: \"Specifying multi resouces(both image and video) is not valid.\"\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t\treturn this;\n\t\t}\n\n\t\t// Check XR support at not when imported, but when created.\n\t\t// This is intended to make polyfills easier to use.\n\t\tcheckXRSupport();\n\n\t\tthis._container = container;\n\t\tthis._image = options.image || options.video;\n\t\tthis._isVideo = !!options.video;\n\t\tthis._projectionType = options.projectionType || PROJECTION_TYPE.EQUIRECTANGULAR;\n\t\tthis._cubemapConfig = Object.assign({\n\t\t\t/* RLUDBF is abnormal, we use it on CUBEMAP only for backward compatibility*/\n\t\t\torder: this._projectionType === PROJECTION_TYPE.CUBEMAP ? \"RLUDBF\" : \"RLUDFB\",\n\t\t\ttileConfig: {\n\t\t\t\tflipHorizontal: false,\n\t\t\t\trotation: 0\n\t\t\t}\n\t\t}, options.cubemapConfig);\n\t\tthis._stereoFormat = options.stereoFormat || STEREO_FORMAT.TOP_BOTTOM;\n\n\t\t// If the width and height are not provided, will use the size of the container.\n\t\tthis._width = options.width || parseInt(window.getComputedStyle(container).width, 10);\n\t\tthis._height = options.height || parseInt(window.getComputedStyle(container).height, 10);\n\n\t\t/**\n\t\t * Cache the direction for the performance in renderLoop\n\t\t *\n\t\t * This value should be updated by \"change\" event of YawPitchControl.\n\t\t */\n\t\tthis._yaw = options.yaw || 0;\n\t\tthis._pitch = options.pitch || 0;\n\t\tthis._fov = options.fov || 65;\n\n\t\tthis._gyroMode = options.gyroMode || GYRO_MODE.YAWPITCH;\n\t\tthis._quaternion = null;\n\n\t\tthis._aspectRatio = this._height !== 0 ? this._width / this._height : 1;\n\t\tconst fovRange = options.fovRange || [30, 110];\n\t\tconst touchDirection = PanoViewer._isValidTouchDirection(options.touchDirection) ?\n\t\t\toptions.touchDirection : YawPitchControl.TOUCH_DIRECTION_ALL;\n\t\tconst yawPitchConfig = Object.assign(options, {\n\t\t\telement: container,\n\t\t\tyaw: this._yaw,\n\t\t\tpitch: this._pitch,\n\t\t\tfov: this._fov,\n\t\t\tgyroMode: this._gyroMode,\n\t\t\tfovRange,\n\t\t\taspectRatio: this._aspectRatio,\n\t\t\ttouchDirection\n\t\t});\n\n\t\tthis._isReady = false;\n\n\t\tthis._initYawPitchControl(yawPitchConfig);\n\t\tthis._initRenderer(this._yaw, this._pitch, this._fov, this._projectionType, this._cubemapConfig);\n\t}\n\n\t/**\n\t * Get the video element that the viewer is currently playing. You can use this for playback.\n\t * @ko 뷰어가 현재 사용 중인 비디오 요소를 얻습니다. 이 요소를 이용해 비디오의 컨트롤을 할 수 있습니다.\n\t * @method eg.view360.PanoViewer#getVideo\n\t * @return {HTMLVideoElement} HTMLVideoElement<ko>HTMLVideoElement</ko>\n\t * @example\n\t * var videoTag = panoViewer.getVideo();\n\t * videoTag.play(); // play video!\n\t */\n\tgetVideo() {\n\t\tif (!this._isVideo) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._photoSphereRenderer.getContent();\n\t}\n\n\t/**\n\t * Set the video information to be used by the viewer.\n\t * @ko 뷰어가 사용할 이미지 정보를 설정합니다.\n\t * @method eg.view360.PanoViewer#setVideo\n\t * @param {String|HTMLVideoElement|Object} video Input video url or element or config object<ko>입력 비디오 URL 혹은 엘리먼트 혹은 설정객체를 활용(image 와 video 둘 중 하나만 설정)</ko>\n\t * @param {Object} param\n\t * @param {String} [param.projectionType={@link eg.view360.PanoViewer.PROJECTION_TYPE.EQUIRECTANGULAR}(\"equirectangular\")] Projection Type<ko>프로젝션 타입</ko>\n\t * @param {Object} param.cubemapConfig config cubemap projection layout. <ko>cubemap projection type 의 레이아웃 설정</ko>\n\t * @param {String} [param.stereoFormat=\"3dv\"] Contents format of the stereoscopic equirectangular projection. See {@link eg.view360.PanoViewer.STEREO_FORMAT}.<ko>Stereoscopic equirectangular projection type의 콘텐츠 포맷을 설정한다. {@link eg.view360.PanoViewer.STEREO_FORMAT} 참조.</ko>\n\t *\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setVideo(\"/path/to/video/video.mp4\", {\n\t *     projectionType: eg.view360.PanoViewer.PROJECTION_TYPE.EQUIRECTANGULAR\n\t * });\n\t */\n\tsetVideo(video, param = {}) {\n\t\tif (video) {\n\t\t\tthis.setImage(video, {\n\t\t\t\tprojectionType: param.projectionType,\n\t\t\t\tisVideo: true,\n\t\t\t\tcubemapConfig: param.cubemapConfig,\n\t\t\t\tstereoFormat: param.stereoFormat\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the image information that the viewer is currently using.\n\t * @ko 뷰어가 현재 사용하고있는 이미지 정보를 얻습니다.\n\t * @method eg.view360.PanoViewer#getImage\n\t * @return {Image} Image Object<ko>이미지 객체</ko>\n\t * @example\n\t * var imageObj = panoViewer.getImage();\n\t */\n\tgetImage() {\n\t\tif (this._isVideo) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._photoSphereRenderer.getContent();\n\t}\n\n\t/**\n\t * Set the image information to be used by the viewer.\n\t * @ko 뷰어가 사용할 이미지 정보를 설정합니다.\n\t * @method eg.view360.PanoViewer#setImage\n\t * @param {String|Image|Object} image Input image url or element or config object<ko>입력 이미지 URL 혹은 엘리먼트 혹은 설정객체를 활용(image 와 video 둘 중 하나만 설정한다.)</ko>\n\t * @param {Object} param Additional information<ko>이미지 추가 정보</ko>\n\t * @param {String} [param.projectionType=\"equirectangular\"] Projection Type<ko>프로젝션 타입</ko>\n\t * @param {Object} param.cubemapConfig config cubemap projection layout. <ko>cubemap projection type 레이아웃</ko>\n\t * @param {String} [param.stereoFormat=\"3dv\"] Contents format of the stereoscopic equirectangular projection. See {@link eg.view360.PanoViewer.STEREO_FORMAT}.<ko>Stereoscopic equirectangular projection type의 콘텐츠 포맷을 설정한다. {@link eg.view360.PanoViewer.STEREO_FORMAT} 참조.</ko>\n\t *\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setImage(\"/path/to/image/image.png\", {\n\t *     projectionType: eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP\n\t * });\n\t */\n\tsetImage(image, param = {}) {\n\t\tconst cubemapConfig = Object.assign({\n\t\t\torder: \"RLUDBF\",\n\t\t\ttileConfig: {\n\t\t\t\tflipHorizontal: false,\n\t\t\t\trotation: 0\n\t\t\t}\n\t\t}, param.cubemapConfig);\n\t\tconst stereoFormat = param.stereoFormat || STEREO_FORMAT.TOP_BOTTOM;\n\t\tconst isVideo = !!(param.isVideo);\n\n\t\tif (this._image && this._isVideo !== isVideo) {\n\t\t\t/* eslint-disable no-console */\n\t\t\tconsole.warn(\"Currently not supporting to change content type(Image <--> Video)\");\n\t\t\t/* eslint-enable no-console */\n\t\t\treturn this;\n\t\t}\n\n\t\tif (image) {\n\t\t\tthis._image = image;\n\t\t\tthis._isVideo = isVideo;\n\t\t\tthis._projectionType = param.projectionType || PROJECTION_TYPE.EQUIRECTANGULAR;\n\t\t\tthis._cubemapConfig = cubemapConfig;\n\t\t\tthis._stereoFormat = stereoFormat;\n\n\t\t\tthis._deactivate();\n\t\t\tthis._initRenderer(this._yaw, this._pitch, this._fov, this._projectionType, this._cubemapConfig);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set whether the renderer always updates the texture and renders.\n\t * @ko 렌더러가 항상 텍스쳐를 갱신하고 화면을 렌더링 할지 여부를 설정할 수 있습니다.\n\t *\n\t * @method eg.view360.PanoViewer#keepUpdate\n\t * @param {Boolean} doUpdate When true viewer will always update texture and render, when false viewer will not update texture and render only camera config is changed.<ko>true면 항상 텍스쳐를 갱신하고 화면을 그리는 반면, false면 텍스쳐 갱신은 하지 않으며, 카메라 요소에 변화가 있을 때에만 화면을 그립니다.</ko>\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tkeepUpdate(doUpdate) {\n\t\tthis._photoSphereRenderer.keepUpdate(doUpdate);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get projection type (equirectangular/cube)\n\t * @ko 프로젝션 타입(Equirectangular 혹은 Cube)을 반환합니다.\n\t *\n\t * @method eg.view360.PanoViewer#getProjectionType\n\t * @return {String} {@link eg.view360.PanoViewer.PROJECTION_TYPE}\n\t */\n\tgetProjectionType() {\n\t\treturn this._projectionType;\n\t}\n\n\t/**\n\t * Activate the device's motion sensor, and return the Promise whether the sensor is enabled\n\t * If it's iOS13+, this method must be used in the context of user interaction, like onclick callback on the button element.\n\t * @ko 디바이스의 모션 센서를 활성화하고, 활성화 여부를 담는 Promise를 리턴합니다.\n\t * iOS13+일 경우, 사용자 인터렉션에 의해서 호출되어야 합니다. 예로, 버튼의 onclick 콜백과 같은 콘텍스트에서 호출되어야 합니다.\n\t * @method eg.view360.PanoViewer#enableSensor\n\t * @return {Promise<string>} Promise containing nothing when resolved, or string of the rejected reason when rejected.<ko>Promise. resolve되었을 경우 아무것도 반환하지 않고, reject되었을 경우 그 이유를 담고있는 string을 반환한다.</ko>\n\t */\n\tenableSensor() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (DeviceMotionEvent && typeof DeviceMotionEvent.requestPermission === \"function\") {\n\t\t\t\tDeviceMotionEvent.requestPermission().then(permissionState => {\n\t\t\t\t\tif (permissionState === \"granted\") {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(\"permission denied\"));\n\t\t\t\t\t}\n\t\t\t\t}).catch(e => {\n\t\t\t\t\t// This can happen when this method wasn't triggered by user interaction\n\t\t\t\t\treject(e);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Disable the device's motion sensor.\n\t * @ko 디바이스의 모션 센서를 비활성화합니다.\n\t * @deprecated\n\t * @method eg.view360.PanoViewer#disableSensor\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tdisableSensor() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Switch to VR stereo rendering mode which uses WebXR / WebVR API (WebXR is preferred).\n\t * This method must be used in the context of user interaction, like onclick callback on the button element.\n\t * It can be rejected when an enabling device sensor fails or image/video is still loading(\"ready\" event not triggered).\n\t * @ko WebXR / WebVR API를 사용하는 VR 스테레오 렌더링 모드로 전환합니다. (WebXR을 더 선호합니다)\n\t * 이 메소드는 사용자 인터렉션에 의해서 호출되어야 합니다. 예로, 버튼의 onclick 콜백과 같은 콘텍스트에서 호출되어야 합니다.\n\t * 디바이스 센서 활성화에 실패시 혹은 아직 이미지/비디오가 로딩중인 경우(\"ready\"이벤트가 아직 트리거되지 않은 경우)에는 Promise가 reject됩니다.\n\t * @method eg.view360.PanoViewer#enterVR\n\t * @return {Promise<string>} Promise containing either a string of resolved reason or an Error instance of rejected reason.<ko>Promise가 resolve된 이유(string) 혹은 reject된 이유(Error)</ko>\n\t */\n\tenterVR() {\n\t\tif (!this._isReady) {\n\t\t\treturn Promise.reject(new Error(\"PanoViewer is not ready to show image.\"));\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.enableSensor()\n\t\t\t\t.then(() => this._photoSphereRenderer.enterVR())\n\t\t\t\t.then(res => resolve(res))\n\t\t\t\t.catch(e => reject(e));\n\t\t});\n\t}\n\n\t/**\n\t * Exit VR stereo rendering mode.\n\t * @ko VR 스테레오 렌더링 모드에서 일반 렌더링 모드로 전환합니다.\n\t *\n\t * @method eg.view360.PanoViewer#exitVR\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\texitVR() {\n\t\tthis._photoSphereRenderer.exitVR();\n\t\treturn this;\n\t}\n\n\t// TODO: Remove parameters as they're just using private values\n\t_initRenderer(yaw, pitch, fov, projectionType, cubemapConfig) {\n\t\tthis._photoSphereRenderer = new PanoImageRenderer(\n\t\t\tthis._image,\n\t\t\tthis._width,\n\t\t\tthis._height,\n\t\t\tthis._isVideo,\n\t\t\t{\n\t\t\t\tinitialYaw: yaw,\n\t\t\t\tinitialPitch: pitch,\n\t\t\t\tfieldOfView: fov,\n\t\t\t\timageType: projectionType,\n\t\t\t\tcubemapConfig,\n\t\t\t\tstereoFormat: this._stereoFormat\n\t\t\t},\n\t\t);\n\t\tthis._photoSphereRenderer.setYawPitchControl(this._yawPitchControl);\n\n\t\tthis._bindRendererHandler();\n\n\t\tthis._photoSphereRenderer\n\t\t\t.bindTexture()\n\t\t\t.then(() => this._activate())\n\t\t\t.catch(() => {\n\t\t\t\tthis._triggerEvent(EVENTS.ERROR, {\n\t\t\t\t\ttype: ERROR_TYPE.FAIL_BIND_TEXTURE,\n\t\t\t\t\tmessage: \"failed to bind texture\"\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/**\n\t * update values of YawPitchControl if needed.\n\t * For example, In Panorama mode, initial fov and pitchRange is changed by aspect ratio of image.\n\t *\n\t * This function should be called after isReady status is true.\n\t */\n\t_updateYawPitchIfNeeded() {\n\t\tif (this._projectionType === PanoViewer.ProjectionType.PANORAMA) {\n\t\t\t// update fov by aspect ratio\n\t\t\tconst image = this._photoSphereRenderer.getContent();\n\t\t\tlet imageAspectRatio = image.naturalWidth / image.naturalHeight;\n\t\t\tlet isCircular;\n\t\t\tlet yawSize;\n\t\t\tlet maxFov;\n\n\t\t\t// If height is larger than width, then we assume it's rotated by 90 degree.\n\t\t\tif (imageAspectRatio < 1) {\n\t\t\t\t// So inverse the aspect ratio.\n\t\t\t\timageAspectRatio = 1 / imageAspectRatio;\n\t\t\t}\n\n\t\t\tif (imageAspectRatio < 6) {\n\t\t\t\tyawSize = mathUtil.toDegree(imageAspectRatio);\n\t\t\t\tisCircular = false;\n\t\t\t\t// 0.5 means ratio of half height of cylinder(0.5) and radius of cylider(1). 0.5/1 = 0.5\n\t\t\t\tmaxFov = mathUtil.toDegree(Math.atan(0.5)) * 2;\n\t\t\t} else {\n\t\t\t\tyawSize = 360;\n\t\t\t\tisCircular = true;\n\t\t\t\tmaxFov = (360 / imageAspectRatio); // Make it 5 fixed as axes does.\n\t\t\t}\n\n\t\t\t// console.log(\"_updateYawPitchIfNeeded\", maxFov, \"aspectRatio\", image.naturalWidth, image.naturalHeight, \"yawSize\", yawSize);\n\t\t\tconst minFov = (this._yawPitchControl.option(\"fovRange\"))[0];\n\n\t\t\t// this option should be called after fov is set.\n\t\t\tthis._yawPitchControl.option({\n\t\t\t\t\"fov\": maxFov, /* parameter for internal validation for pitchrange */\n\t\t\t\t\"yawRange\": [-yawSize / 2, yawSize / 2],\n\t\t\t\tisCircular,\n\t\t\t\t\"pitchRange\": [-maxFov / 2, maxFov / 2],\n\t\t\t\t\"fovRange\": [minFov, maxFov]\n\t\t\t});\n\t\t\tthis.lookAt({fov: maxFov});\n\t\t}\n\t}\n\n\t_bindRendererHandler() {\n\t\tthis._photoSphereRenderer.on(PanoImageRenderer.EVENTS.ERROR, e => {\n\t\t\tthis.trigger(EVENTS.ERROR, e);\n\t\t});\n\n\t\tthis._photoSphereRenderer.on(PanoImageRenderer.EVENTS.RENDERING_CONTEXT_LOST, e => {\n\t\t\tthis._deactivate();\n\t\t\tthis.trigger(EVENTS.ERROR, {\n\t\t\t\ttype: ERROR_TYPE.RENDERING_CONTEXT_LOST,\n\t\t\t\tmessage: \"webgl rendering context lost\"\n\t\t\t});\n\t\t});\n\t}\n\n\t_initYawPitchControl(yawPitchConfig) {\n\t\tthis._yawPitchControl = new YawPitchControl(yawPitchConfig);\n\n\t\tthis._yawPitchControl.on(EVENTS.ANIMATION_END, e => {\n\t\t\tthis._triggerEvent(EVENTS.ANIMATION_END, e);\n\t\t});\n\n\t\tthis._yawPitchControl.on(\"change\", e => {\n\t\t\tthis._yaw = e.yaw;\n\t\t\tthis._pitch = e.pitch;\n\t\t\tthis._fov = e.fov;\n\t\t\tthis._quaternion = e.quaternion;\n\n\t\t\tthis._triggerEvent(EVENTS.VIEW_CHANGE, e);\n\t\t});\n\t}\n\n\t_triggerEvent(name, param) {\n\t\tconst evt = param || {};\n\n\t\t/**\n\t\t * Events that is fired when error occurs\n\t\t * @ko 에러 발생 시 발생하는 이벤트\n\t\t * @name eg.view360.PanoViewer#error\n\t\t * @event\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {Number} param.type Error type\n\t\t * \t\t10: INVALID_DEVICE: Unsupported device\n\t\t * \t\t11: NO_WEBGL: Webgl not support\n\t\t * \t\t12, FAIL_IMAGE_LOAD: Failed to load image\n\t\t * \t\t13: FAIL_BIND_TEXTURE: Failed to bind texture\n\t\t * \t\t14: INVALID_RESOURCE: Only one resource(image or video) should be specified\n\t\t * \t\t15: RENDERING_CONTEXT_LOST: WebGL context lost occurred\n\t\t * <ko>에러 종류\n\t\t * \t\t10: INVALID_DEVICE: 미지원 기기\n\t\t * \t\t11: NO_WEBGL: WEBGL 미지원\n\t\t * \t\t12, FAIL_IMAGE_LOAD: 이미지 로드 실패\n\t\t * \t\t13: FAIL_BIND_TEXTURE: 텍스쳐 바인딩 실패\n\t\t * \t\t14: INVALID_RESOURCE: 리소스 지정 오류 (image 혹은 video 중 하나만 지정되어야 함)\n\t\t * \t\t15: RENDERING_CONTEXT_LOST: WebGL context lost 발생\n\t\t * </ko>\n\t\t * @param {String} param.message Error message <ko>에러 메시지</ko>\n\t\t * @see {@link eg.view360.PanoViewer.ERROR_TYPE}\n\t\t * @example\n\t\t *\n\t\t * viwer.on({\n\t\t *\t\"error\" : function(evt) {\n\t\t *\t\t// evt.type === 13\n\t\t *\t\t// evt.message === \"failed to bind texture\"\n\t\t * });\n\t\t *\n\t\t * // constant can be used\n\t\t * viwer.on({\n\t\t *\teg.view360.PanoViewer.EVENTS.ERROR : function(evt) {\n\t\t *\t\t// evt.type === eg.view360.PanoViewer.ERROR_TYPE.FAIL_BIND_TEXTURE\n\t\t *\t\t// evt.message === \"failed to bind texture\"\n\t\t * });\n\t\t */\n\n\t\t/**\n\t\t * Events that is fired when PanoViewer is ready to go.\n\t\t * @ko PanoViewer 가 준비된 상태에 발생하는 이벤트\n\t\t * @name eg.view360.PanoViewer#ready\n\t\t * @event\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * viwer.on({\n\t\t *\t\"ready\" : function(evt) {\n\t\t *\t\t// PanoViewer is ready to show image and handle user interaction.\n\t\t * });\n\t\t */\n\n\t\t/**\n\t\t * Events that is fired when direction or fov is changed.\n\t\t * @ko PanoViewer 에서 바라보고 있는 방향이나 FOV(화각)가 변경되었을때 발생하는 이벤트\n\t\t * @name eg.view360.PanoViewer#viewChange\n\t\t * @event\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {Number} param.yaw yaw<ko>yaw</ko>\n\t\t * @param {Number} param.pitch pitch <ko>pitch</ko>\n\t\t * @param {Number} param.fov Field of view (fov) <ko>화각</ko>\n\t\t * @example\n\t\t *\n\t\t * viwer.on({\n\t\t *\t\"viewChange\" : function(evt) {\n\t\t *\t\t//evt.yaw, evt.pitch, evt.fov is available.\n\t\t * });\n\t\t */\n\n\t\t/**\n\t\t * Events that is fired when animation which is triggered by inertia is ended.\n\t\t * @ko 관성에 의한 애니메이션 동작이 완료되었을때 발생하는 이벤트\n\t\t * @name eg.view360.PanoViewer#animationEnd\n\t\t * @event\n\t\t * @example\n\t\t *\n\t\t * viwer.on({\n\t\t *\t\"animationEnd\" : function(evt) {\n\t\t *\t\t// animation is ended.\n\t\t * });\n\t\t */\n\t\treturn this.trigger(name, evt);\n\t}\n\n\t/**\n\t * When set true, enables zoom with the wheel or pinch gesture. However, in the case of touch, pinch works only when the touchDirection setting is {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL}.\n\t * @ko true 로 설정 시 휠 혹은 집기 동작으로 확대/축소 할 수 있습니다. false 설정 시 확대/축소 기능을 비활성화 합니다. 단, 터치인 경우 touchDirection 설정이 {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL} 인 경우에만 pinch 가 동작합니다.\n\t * @method eg.view360.PanoViewer#setUseZoom\n\t * @param {Boolean} useZoom\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tsetUseZoom(useZoom) {\n\t\ttypeof useZoom === \"boolean\" && this._yawPitchControl.option(\"useZoom\", useZoom);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * When true, enables the keyboard move key control: awsd, arrow keys\n\t * @ko true이면 키보드 이동 키 컨트롤을 활성화합니다. (awsd, 화살표 키)\n\t * @method eg.view360.PanoViewer#setUseKeyboard\n\t * @param {Boolean} useKeyboard\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tsetUseKeyboard(useKeyboard) {\n\t\tthis._yawPitchControl.option(\"useKeyboard\", useKeyboard);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables control through device motion. (\"none\", \"yawPitch\", \"VR\")\n\t * @ko 디바이스 움직임을 통한 컨트롤을 활성화 합니다. (\"none\", \"yawPitch\", \"VR\")\n\t * @method eg.view360.PanoViewer#setGyroMode\n\t * @param {String} gyroMode {@link eg.view360.PanoViewer.GYRO_MODE}\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setGyroMode(\"yawPitch\");\n\t * //equivalent\n\t * panoViewer.setGyroMode(eg.view360.PanoViewer.GYRO_MODE.YAWPITCH);\n\t */\n\tsetGyroMode(gyroMode) {\n\t\tthis._yawPitchControl.option(\"gyroMode\", gyroMode);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the range of controllable FOV values\n\t * @ko 제어 가능한 FOV 구간을 설정합니다.\n\t * @method eg.view360.PanoViewer#setFovRange\n\t * @param {Array} range\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setFovRange([50, 90]);\n\t */\n\tsetFovRange(range) {\n\t\tthis._yawPitchControl.option(\"fovRange\", range);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Getting the range of controllable FOV values\n\t * @ko 제어 가능한 FOV 구간을 반환합니다.\n\t * @method eg.view360.PanoViewer#getFovRange\n\t * @return {Array}\n\t * @example\n\t * var range = panoViewer.getFovRange(); //[50, 90]\n\t */\n\tgetFovRange() {\n\t\treturn this._yawPitchControl.option(\"fovRange\");\n\t}\n\n\t/**\n\t * Update size of canvas element by it's container element's or specified size. If size is not specified, the size of the container area is obtained and updated to that size.\n\t * @ko 캔버스 엘리먼트의 크기를 컨테이너 엘리먼트의 크기나 지정된 크기로 업데이트합니다. 만약 size 가 지정되지 않으면 컨테이너 영역의 크기를 얻어와 해당 크기로 갱신합니다.\n\t * @method eg.view360.PanoViewer#updateViewportDimensions\n\t * @param {Object} [size]\n\t * @param {Number} [size.width=width of container]\n\t * @param {Number} [size.height=height of container]\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tupdateViewportDimensions(size = {width: undefined, height: undefined}) {\n\t\tif (!this._isReady) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet containerSize;\n\n\t\tif (size.width === undefined || size.height === undefined) {\n\t\t\tcontainerSize = window.getComputedStyle(this._container);\n\t\t}\n\n\t\tconst width = size.width || parseInt(containerSize.width, 10);\n\t\tconst height = size.height || parseInt(containerSize.height, 10);\n\n\t\t// Skip if viewport is not changed.\n\t\tif (width === this._width && height === this._height) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tthis._aspectRatio = width / height;\n\t\tthis._photoSphereRenderer.updateViewportDimensions(width, height);\n\t\tthis._yawPitchControl.option(\"aspectRatio\", this._aspectRatio);\n\t\tthis._yawPitchControl.updatePanScale({height});\n\n\t\tthis.lookAt({}, 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the current field of view(FOV)\n\t * @ko 현재 field of view(FOV) 값을 반환합니다.\n\t * @method eg.view360.PanoViewer#getFov\n\t * @return {Number}\n\t */\n\tgetFov() {\n\t\treturn this._fov;\n\t}\n\n\t/**\n\t * Get the horizontal field of view in degree\n\t */\n\t_getHFov() {\n\t\treturn mathUtil.toDegree(\n\t\t\t2 * Math.atan(this._aspectRatio * Math.tan(glMatrix.toRadian(this._fov) / 2)));\n\t}\n\n\t/**\n\t * Get current yaw value\n\t * @ko 현재 yaw 값을 반환합니다.\n\t * @method eg.view360.PanoViewer#getYaw\n\t * @return {Number}\n\t */\n\tgetYaw() {\n\t\treturn this._yaw;\n\t}\n\n\t/**\n\t * Get current pitch value\n\t * @ko 현재 pitch 값을 반환합니다.\n\t * @method eg.view360.PanoViewer#getPitch\n\t * @return {Number}\n\t */\n\tgetPitch() {\n\t\treturn this._pitch;\n\t}\n\n\t/**\n\t * Get the range of controllable Yaw values\n\t * @ko 컨트롤 가능한 Yaw 구간을 반환합니다.\n\t * @method eg.view360.PanoViewer#getYawRange\n\t * @return {Array}\n\t */\n\tgetYawRange() {\n\t\treturn this._yawPitchControl.option(\"yawRange\");\n\t}\n\n\t/**\n\t * Get the range of controllable Pitch values\n\t * @ko 컨트롤 가능한 Pitch 구간을 가져옵니다.\n\t * @method eg.view360.PanoViewer#getPitchRange\n\t * @return {Array}\n\t */\n\tgetPitchRange() {\n\t\treturn this._yawPitchControl.option(\"pitchRange\");\n\t}\n\n\t/**\n\t * Set the range of controllable yaw\n\t * @ko 컨트롤 가능한 Yaw 구간을 반환합니다.\n\t * @method eg.view360.PanoViewer#setYawRange\n\t * @param {Array} range\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setYawRange([-90, 90]);\n\t */\n\tsetYawRange(yawRange) {\n\t\tthis._yawPitchControl.option(\"yawRange\", yawRange);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the range of controllable Pitch values\n\t * @ko 컨트롤 가능한 Pitch 구간을 설정합니다.\n\t * @method eg.view360.PanoViewer#setPitchRange\n\t * @param {Array} range\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * panoViewer.setPitchRange([-40, 40]);\n\t */\n\tsetPitchRange(pitchRange) {\n\t\tthis._yawPitchControl.option(\"pitchRange\", pitchRange);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Specifies whether to display the pole by limiting the pitch range. If it is true, pole point can be displayed. If it is false, it is not displayed.\n\t * @ko pitch 범위를 제한하여 극점을 표시할지를 지정합니다. true 인 경우 극점까지 표현할 수 있으며 false 인 경우 극점까지 표시하지 않습니다.\n\t * @method eg.view360.PanoViewer#setShowPolePoint\n\t * @param {Boolean} showPolePoint\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tsetShowPolePoint(showPolePoint) {\n\t\tthis._yawPitchControl.option(\"showPolePoint\", showPolePoint);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set a new view by setting camera configuration. Any parameters not specified remain the same.\n\t * @ko 카메라 설정을 지정하여 화면을 갱신합니다. 지정되지 않은 매개 변수는 동일하게 유지됩니다.\n\t * @method eg.view360.PanoViewer#lookAt\n\t * @param {Object} orientation\n\t * @param {Number} orientation.yaw Target yaw in degree <ko>목표 yaw (degree 단위)</ko>\n\t * @param {Number} orientation.pitch Target pitch in degree <ko>목표 pitch (degree 단위)</ko>\n\t * @param {Number} orientation.fov Target vertical fov in degree <ko>목표 수직 fov (degree 단위)</ko>\n\t * @param {Number} duration Animation duration in milliseconds <ko>애니메이션 시간 (밀리 초)</ko>\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t * @example\n\t * // Change the yaw angle (absolute angle) to 30 degrees for one second.\n\t * panoViewer.lookAt({yaw: 30}, 1000);\n\t */\n\tlookAt(orientation, duration) {\n\t\tif (!this._isReady) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst yaw = orientation.yaw !== undefined ? orientation.yaw : this._yaw;\n\t\tconst pitch = orientation.pitch !== undefined ? orientation.pitch : this._pitch;\n\t\tconst pitchRange = this._yawPitchControl.option(\"pitchRange\");\n\t\tconst verticalAngleOfImage = pitchRange[1] - pitchRange[0];\n\t\tlet fov = orientation.fov !== undefined ? orientation.fov : this._fov;\n\n\t\tif (verticalAngleOfImage < fov) {\n\t\t\tfov = verticalAngleOfImage;\n\t\t}\n\n\t\tthis._yawPitchControl.lookAt({yaw, pitch, fov}, duration);\n\n\t\tif (duration === 0) {\n\t\t\tthis._photoSphereRenderer.renderWithYawPitch(yaw, pitch, fov);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_activate() {\n\t\tthis._photoSphereRenderer.attachTo(this._container);\n\t\tthis._yawPitchControl.enable();\n\n\t\tthis.updateViewportDimensions();\n\n\t\tthis._isReady = true;\n\n\t\t// update yawPitchControl after isReady status is true.\n\t\tthis._updateYawPitchIfNeeded();\n\n\t\tthis._triggerEvent(EVENTS.READY);\n\t\tthis._photoSphereRenderer.startRender();\n\t}\n\n\t/**\n\t * Destroy webgl context and block user interaction and stop rendering\n\t */\n\t_deactivate() {\n\t\tif (this._isReady) {\n\t\t\tthis._photoSphereRenderer.stopRender();\n\t\t\tthis._yawPitchControl.disable();\n\t\t\tthis._isReady = false;\n\t\t}\n\n\t\tif (this._photoSphereRenderer) {\n\t\t\tthis._photoSphereRenderer.destroy();\n\t\t\tthis._photoSphereRenderer = null;\n\t\t}\n\t}\n\n\tstatic _isValidTouchDirection(direction) {\n\t\treturn direction === PanoViewer.TOUCH_DIRECTION.NONE ||\n\t\t\tdirection === PanoViewer.TOUCH_DIRECTION.YAW ||\n\t\t\tdirection === PanoViewer.TOUCH_DIRECTION.PITCH ||\n\t\t\tdirection === PanoViewer.TOUCH_DIRECTION.ALL;\n\t}\n\n\t/**\n\t * Set touch direction by which user can control.\n\t * @ko 사용자가 조작가능한 터치 방향을 지정합니다.\n\t * @method eg.view360.PanoViewer#setTouchDirection\n\t * @param {Number} direction of the touch. {@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>컨트롤 가능한 방향 {@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n\t * @return {eg.view360.PanoViewer} PanoViewer instance\n\t * @example\n\t *\n\t * panoViewer = new PanoViewer(el);\n\t * // Limit the touch direction to the yaw direction only.\n\t * panoViewer.setTouchDirection(eg.view360.PanoViewer.TOUCH_DIRECTION.YAW);\n\t */\n\tsetTouchDirection(direction) {\n\t\tif (PanoViewer._isValidTouchDirection(direction)) {\n\t\t\tthis._yawPitchControl.option(\"touchDirection\", direction);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns touch direction by which user can control\n\t * @ko 사용자가 조작가능한 터치 방향을 반환한다.\n\t * @method eg.view360.PanoViewer#getTouchDirection\n\t * @return {Number} direction of the touch. {@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>컨트롤 가능한 방향 {@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n\t * @example\n\t *\n\t * panoViewer = new PanoViewer(el);\n\t * // Returns the current touch direction.\n\t * var dir = panoViewer.getTouchDirection();\n\t */\n\tgetTouchDirection() {\n\t\treturn this._yawPitchControl.option(\"touchDirection\");\n\t}\n\n\t/**\n\t * Destroy viewer. Remove all registered event listeners and remove viewer canvas.\n\t * @ko 뷰어 인스턴스를 해제합니다. 모든 등록된 이벤트리스너를 제거하고 뷰어 캔버스를 삭제합니다.\n\t * @method eg.view360.PanoViewer#destroy\n\t * @return {eg.view360.PanoViewer} PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n\t */\n\tdestroy() {\n\t\tthis._deactivate();\n\n\t\tif (this._yawPitchControl) {\n\t\t\tthis._yawPitchControl.destroy();\n\t\t\tthis._yawPitchControl = null;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Check whether the current environment can execute PanoViewer\n\t * @ko 현재 브라우저 환경에서 PanoViewer 실행이 가능한지 여부를 반환합니다.\n\t * @function isSupported\n\t * @memberof eg.view360.PanoViewer\n\t * @return {Boolean} PanoViewer executable <ko>PanoViewer 실행가능 여부</ko>\n\t * @static\n\t */\n\tstatic isSupported() {\n\t\treturn WebGLUtils.isWebGLAvailable() && WebGLUtils.isStableWebGL();\n\t}\n\n\t/**\n\t * Check whether the current environment supports the WebGL\n\t * @ko 현재 브라우저 환경이 WebGL 을 지원하는지 여부를 확인합니다.\n\t * @function isWebGLAvailable\n\t * @memberof eg.view360.PanoViewer\n\t * @return {Boolean} WebGL support <ko>WebGL 지원여부</ko>\n\t * @static\n\t */\n\tstatic isWebGLAvailable() {\n\t\treturn WebGLUtils.isWebGLAvailable();\n\t}\n\n\t/**\n\t * Check whether the current environment supports the gyro sensor.\n\t * @ko 현재 브라우저 환경이 자이로 센서를 지원하는지 여부를 확인합니다.\n\t * @function isGyroSensorAvailable\n\t * @memberof eg.view360.PanoViewer\n\t * @param {Function} callback Function to take the gyro sensor availability as argument <ko>자이로 센서를 지원하는지 여부를 인자로 받는 함수</ko>\n\t * @static\n\t */\n\tstatic isGyroSensorAvailable(callback) {\n\t\tif (!DeviceMotionEvent) {\n\t\t\tcallback && callback(false);\n\t\t\treturn;\n\t\t}\n\n\t\tlet onDeviceMotionChange;\n\n\t\tfunction checkGyro() {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\tonDeviceMotionChange = function(deviceMotion) {\n\t\t\t\t\tconst isGyroSensorAvailable = !(deviceMotion.rotationRate.alpha == null);\n\n\t\t\t\t\tres(isGyroSensorAvailable);\n\t\t\t\t};\n\n\t\t\t\twindow.addEventListener(\"devicemotion\", onDeviceMotionChange);\n\t\t\t});\n\t\t}\n\n\t\tfunction timeout() {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\tsetTimeout(() => res(false), 1000);\n\t\t\t});\n\t\t}\n\n\t\tPromise.race([checkGyro(), timeout()]).then(isGyroSensorAvailable => {\n\t\t\twindow.removeEventListener(\"devicemotion\", onDeviceMotionChange);\n\n\t\t\tcallback && callback(isGyroSensorAvailable);\n\n\t\t\tPanoViewer.isGyroSensorAvailable = function(fb) {\n\t\t\t\tfb && fb(isGyroSensorAvailable);\n\t\t\t\treturn isGyroSensorAvailable;\n\t\t\t};\n\t\t});\n\t}\n}\n\nexport default PanoViewer;\n","import Component from \"@egjs/component\";\nimport {TRANSFORM, SUPPORT_WILLCHANGE} from \"../utils/browserFeature\";\nimport {VERSION} from \"../version\";\n/**\n * @class eg.view360.SpriteImage\n * @classdesc A module that displays a single or continuous image of any one of the \"sprite images\". SpinViewer internally uses SpriteImage to show each frame of the sprite image.\n * @ko 스프라이트 이미지 중 임의의 한 프레임을 단발성 혹은 연속적으로 보여주는 컴포넌트입니다. SpinViewer 는 내부적으로 SpriteImage 를 사용하여 스프라이트 이미지의 각 프레임을 보여줍니다.\n * @extends eg.Component\n *\n * @param {HTMLElement} element The element to show the image <ko>이미지를 보여줄 대상 요소</ko>\n * @param {Object} options The option object<ko>파라미터 객체</ko>\n * @param {String} options.imageUrl The url of the sprite image <ko>스프라이트 이미지의 url</ko>\n * @param {Number} [options.rowCount=1] Number of horizontal frames in the sprite image <ko>스프라이트 이미지의 가로 프레임 갯수</ko>\n * @param {Number} [options.colCount=1] Number of vertical frames in the sprite image <ko>스프라이트 이미지의 세로 프레임 갯수</ko>\n * @param {Number|String} [options.width=\"auto\"] The width of the target element to show the image <ko>이미지를 보여줄 대상 요소의 너비</ko>\n * @param {Number|String} [options.height=\"auto\"] The height of the target element to show the image <ko>이미지를 보여줄 대상 요소의 높이</ko>\n * @param {Boolean} [options.autoHeight=true] Whether to automatically set the height of the image area to match the original image's proportion <ko>원본 이미지 비율에 맞게 이미지 영역의 높이를 자동으로 설정할지 여부</ko>\n * @param {Number[]} [options.colRow=[0, 0]] The column, row coordinates of the first frame of the sprite image (based on 0 index) <ko> 스프라이트 이미지 중 처음 보여줄 프레임의 (column, row) 좌표 (0 index 기반)</ko>\n * @param {Number} [options.frameIndex=0] frameIndex specifies the index of the frame to be displayed in the \"Sprite image\". The frameIndex order is zero-based and indexed in Z form (left-to-right, top-to-bottom, and newline again from left to right).<br>- colRow is equivalent to frameIndex. However, if colRow is specified at the same time, colRow takes precedence.<ko>스프라이트 이미지 중에서 보여질 프레임의 인덱스를 지정합니다. frameIndex 순서는 0부터 시작하며 Z 형태(왼쪽에서 오른쪽, 위에서 아래, 개행 시 다시 왼쪽 부터)로 인덱싱합니다.<br>- colRow 는 frameIndex 와 동일한 기능을 합니다. 단, colRow 가 동시에 지정된 경우 colRow 가 우선합니다.</ko>\n * @param {Number} [options.scale=1] Spin scale (The larger the spin, the more).<ko>Spin 배율 (클 수록 더 많이 움직임)</ko>\n *\n * @support {\"ie\": \"9+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n * @example\n *\n * // Initialize SpriteImage\n *\n * var el = document.getElementById(\"image-div\");\n * var sprites = new eg.view360.SpriteImage(el, {\n * \timageUrl: \"/img/bag360.jpg\", // required\n * \trowCount: 24\n * });\n */\nclass SpriteImage extends Component {\n\tstatic VERSION = VERSION;\n\tconstructor(element, options) {\n\t\tsuper();\n\t\tconst opt = options || {};\n\n\t\tthis._el = element;\n\t\tthis._rowCount = opt.rowCount || 1;\n\t\tthis._colCount = opt.colCount || 1;\n\t\tthis._totalCount = this._rowCount * this._colCount;// total frames\n\t\tthis._width = opt.width || \"auto\";\n\t\tthis._height = opt.height || \"auto\";\n\t\tthis._autoHeight = opt.autoHeight != null ? opt.autoHeight : \"true\"; // If autoHeight is specified, _height will be overwritten.\n\t\tthis._colRow = [0, 0];\n\n\t\tif (opt.colRow) {\n\t\t\tthis._colRow = opt.colRow;\n\t\t} else if (opt.frameIndex) {\n\t\t\tthis.setFrameIndex(opt.frameIndex);\n\t\t}\n\n\t\tthis._el.style.width = SpriteImage._getSizeString(this._width);\n\t\tthis._el.style.height = SpriteImage._getSizeString(this._height);\n\n\t\tif (!opt.imageUrl) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.trigger(\"imageError\", {\n\t\t\t\t\timageUrl: opt.imageUrl\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._image = new Image();\n\t\t/**\n\t\t * Event\n\t\t */\n\t\tthis._image.onload = () => {\n\t\t\tthis._bg = SpriteImage._createBgDiv(\n\t\t\t\tthis._image, this._rowCount, this._colCount, this._autoHeight);\n\t\t\tthis._el.appendChild(this._bg);\n\t\t\tthis.setColRow(this._colRow[0], this._colRow[1]);\n\n\t\t\t/**\n\t\t\t * Events that occur when component loading is complete\n\t\t\t * @ko 컴포넌트 로딩이 완료되면 발생하는 이벤트\n\t\t\t * @name eg.view360.SpriteImage#load\n\t\t\t * @event\n\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t * @param {HTMLElement} param.target The target element for which to display the image <ko>이미지를 보여줄 대상 엘리먼트</ko>\n\t\t\t * @param {HTMLElement} param.bgElement Generated background image element <ko>생성된 background 이미지 엘리먼트</ko>\n\t\t\t *\n\t\t\t * @example\n\t\t\t *\n\t\t\t * sprites.on({\n\t\t\t *\t\"load\" : function(evt) {\n\t\t\t *\t\tconsole.log(\"load event fired - e.target\", e.target, \"e.bgElement\", e.bgElement);\n\t\t\t *\t}\n\t\t\t * });\n\t\t\t */\n\t\t\tthis.trigger(\"load\", {\n\t\t\t\ttarget: this._el,\n\t\t\t\tbgElement: this._bg\n\t\t\t});\n\n\t\t\tif (this._autoPlayReservedInfo) {\n\t\t\t\tthis.play(this._autoPlayReservedInfo);\n\t\t\t\tthis._autoPlayReservedInfo = null;\n\t\t\t}\n\t\t};\n\n\t\tthis._image.onerror = e => {\n\t\t\t/**\n\t\t\t * An event that occurs when the image index is changed by the user's left / right panning\n\t\t\t * @ko 사용자의 좌우 Panning 에 의해 이미지 인덱스가 변경되었을때 발생하는 이벤트\n\t\t\t * @name eg.view360.SpriteImage#imageError\n\t\t\t * @event\n\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t * @param {String} param.imageUrl User-specified image URL <ko>사용자가 지정한 이미지 URL</ko>\n\t\t\t *\n\t\t\t * @example\n\t\t\t *\n\t\t\t * sprites.on({\n\t\t\t *\t\"imageError\" : function(evt) {\n\t\t\t *\t\t// Error handling\n\t\t\t *\t\tconsole.log(e.imageUrl);\n\t\t\t *\t}\n\t\t\t * });\n\t\t\t */\n\t\t\tthis.trigger(\"imageError\", {\n\t\t\t\timageUrl: opt.imageUrl\n\t\t\t});\n\t\t};\n\n\t\tthis._image.src = opt.imageUrl;\n\t}\n\n\tstatic _createBgDiv(img, rowCount, colCount, autoHeight) {\n\t\tconst el = document.createElement(\"div\");\n\n\t\tel.style.position = \"relative\";\n\t\tel.style.overflow = \"hidden\";\n\n\t\timg.style.position = \"absolute\";\n\t\timg.style.width = `${colCount * 100}%`;\n\t\timg.style.height = `${rowCount * 100}%`;\n\t\t/** Prevent image from being dragged on IE10, IE11, Safari especially */\n\t\timg.ondragstart = () => (false); // img.style.pointerEvents = \"none\";\n\t\t// Use hardware accelerator if available\n\t\tSUPPORT_WILLCHANGE && (img.style.willChange = \"transform\");\n\n\t\tel.appendChild(img);\n\n\t\tconst unitWidth = img.width / colCount;\n\t\tconst unitHeight = img.height / rowCount;\n\n\t\tif (autoHeight) {\n\t\t\tconst r = unitHeight / unitWidth;\n\n\t\t\tel.style.paddingBottom = `${r * 100}%`;\n\t\t} else {\n\t\t\tel.style.height = \"100%\";\n\t\t}\n\n\t\treturn el;\n\t}\n\n\t/**\n\t * Specifies the frameIndex of the frame to be shown in the sprite image.\n\t * @ko 스프라이트 이미지 중 보여질 프레임의 frameIndex 값을 지정\n\t * @method eg.view360.SpriteImage#setFrameIndex\n\t * @param {Number} frameIndex frame index of a frame<ko>프레임의 인덱스</ko>\n\t *\n\t * @example\n\t *\n\t * sprites.setFrameIndex(0, 1);// col = 0, row = 1\n\t */\n\tsetFrameIndex(index) {\n\t\tconst colRow = this.toColRow(index);\n\n\t\tthis.setColRow(colRow[0], colRow[1]);\n\t}\n\n\t/**\n\t * Returns the frameIndex of the frame to be shown in the sprite image.\n\t * @ko 스프라이트 이미지 중 보여지는 프레임의 index 값을 반환\n\t * @method eg.view360.SpriteImage#getFrameIndex\n\t * @return {Number} frame index <ko>frame 인덱스</ko>\n\t *\n\t * @example\n\t *\n\t * var frameIndex = sprites.getFrameIndex(); // eg. frameIndex = 1\n\t *\n\t */\n\tgetFrameIndex() {\n\t\treturn this._colRow[1] * this._colCount + this._colRow[0];\n\t}\n\n\t/**\n\t * Specifies the col and row values of the frame to be shown in the sprite image.\n\t * @ko 스프라이트 이미지 중 보여질 프레임의 col, row 값을 지정\n\t * @method eg.view360.SpriteImage#setColRow\n\t * @param {Number} col Column number of a frame<ko>프레임의 행값</ko>\n\t * @param {Number} row Row number of a frame<ko>프레임의 열값</ko>\n\t *\n\t * @example\n\t *\n\t * sprites.setlColRow(1, 2); // col = 1, row = 2\n\t */\n\tsetColRow(col, row) {\n\t\tif (row > this._rowCount - 1 || col > this._colCount - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._image && TRANSFORM) {\n\t\t\t// NOTE: Currently, do not apply translate3D for using layer hack. Do we need layer hack for old browser?\n\t\t\tthis._image.style[TRANSFORM] = `translate(${-(col / this._colCount * 100)}%, ${-(row / this._rowCount * 100)}%)`;\n\t\t}\n\n\t\tthis._colRow = [col, row];\n\t}\n\n\t/**\n\t * Returns the col and row values of the frame to be shown in the sprite image.\n\t * @ko 스프라이트 이미지 중 보여지는 프레임의 col, row 값을환반환\n\t * @method eg.view360.SpriteImage#gelColRow\n\t * @return {Number[]} Array containing col, row<ko>col, row 정보를 담는 배열</ko>\n\t *\n\t * @example\n\t *\n\t * var colRow = sprites.getlColRow();\n\t * // colRow = [1, 2] - index of col is 1, index of row is 2\n\t *\n\t */\n\tgetColRow() {\n\t\treturn this._colRow;\n\t}\n\n\tstatic _getSizeString(size) {\n\t\tif (typeof size === \"number\") {\n\t\t\treturn `${size}px`;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\t/**\n\t * Stop playing\n\t * @ko play 되고 있던 프레임 재생을 중지합니다.\n\t * @method eg.view360.SpriteImage#stop\n\t *\n\t * @example\n\t *\n\t * viewer.stop();\n\t *\n\t */\n\tstop() {\n\t\tif (this._autoPlayTimer) {\n\t\t\tclearInterval(this._autoPlayTimer);\n\t\t\tthis._autoPlayTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Switches frames sequentially in the 'interval' starting from the currently displayed frame and plays all frames by 'playCount'.\n\t * @ko 현재 보여지고 있는 프레임을 시작으로 'interval' 간격으로 순차적으로 프레임을 전환하며 모든 프레임을 'playCount' 만큼 재생한다.\n\t * @method eg.view360.SpriteImage#play\n\t * @param {Object} param The parameter object<ko>파라미터 객체</ko>\n\t * @param {Number} [param.interval=1000 / totalFrameCount] Interframe Interval - in milliseconds<ko>프레임간 간격 - 밀리세컨드 단위</ko>\n\t * @param {Number} [param.playCount=0] PlayCount = 1 in which all frames are reproduced once, and playCount = n in which all frames are repeated n times. playCount = 0 in which all frames are repeated infinitely<ko>모든 프레임을 1회씩 재생한 것이 playCount = 1, 모든 프레임을 n 회 재상한 것이 playCount = n 이 된다. 0 dms 무한반복</ko>\n\t *\n\t * @example\n\t *\n\t * viewer.play({angle: 16, playCount: 1});\n\t *\n\t */\n\tplay({interval, playCount} = {interval: 1000 / this._totalCount, playCount: 0}) {\n\t\tif (!this._bg) {\n\t\t\tthis._autoPlayReservedInfo = {interval, playCount};\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._autoPlayTimer) {\n\t\t\tclearInterval(this._autoPlayTimer);\n\t\t\tthis._autoPlayTimer = null;\n\t\t}\n\n\t\tlet frameIndex = this.getFrameIndex();\n\t\tlet count = 0;\n\t\tlet frameCount = 0; // for checking 1 cycle\n\n\t\tthis._autoPlayTimer = setInterval(() => {\n\t\t\tframeIndex %= this._totalCount;\n\t\t\tconst colRow = this.toColRow(frameIndex);\n\n\t\t\tthis.setColRow(colRow[0], colRow[1]);\n\t\t\tframeIndex++;\n\n\t\t\t// Done 1 Cycle?\n\t\t\tif (++frameCount === this._totalCount) {\n\t\t\t\tframeCount = 0;\n\t\t\t\tcount++;\n\t\t\t}\n\n\t\t\tif (playCount > 0 && count === playCount) {\n\t\t\t\tclearInterval(this._autoPlayTimer);\n\t\t\t}\n\t\t}, interval);\n\t}\n\n\ttoColRow(frameIndex) {\n\t\tconst colCount = this._colCount;\n\t\tconst rowCount = this._rowCount;\n\n\t\tif (frameIndex < 0) {\n\t\t\treturn [0, 0];\n\t\t} else if (frameIndex >= this._totalCount) {\n\t\t\treturn [colCount - 1, rowCount - 1];\n\t\t}\n\n\t\tconst col = frameIndex % colCount;\n\t\tconst row = Math.floor(frameIndex / colCount);\n\n\t\t// console.log(frameIndex, col, row);\n\t\treturn [col, row];\n\t}\n}\n\nexport default SpriteImage;\n","import Component from \"@egjs/component\";\nimport Axes, {PanInput} from \"@egjs/axes\";\nimport SpriteImage from \"./SpriteImage\";\nimport {VERSION} from \"../version\";\n\nconst DEFAULT_PAN_SCALE = 0.21;\n\n/**\n * @class eg.view360.SpinViewer\n * @classdesc A module used to displays each image sequentially according to the direction of the user's touch movement (left / right) of the sprite image that is collected by rotating the object.\n * @ko 물체 주위를 회전하여 촬영한 이미지들을 모은 스프라이트 이미지를 사용자의 터치 이동 방향(좌 / 우) 에 따라 각 이미지들을 순차적으로 보여주는 컴포넌트입니다.\n * @extends eg.Component\n *\n * @param {HTMLElement} element The element to show the image <ko>이미지를 보여줄 대상 요소</ko>\n * @param {Object} options The option object<ko>파라미터 객체</ko>\n * @param {String} options.imageUrl The url of the sprite image <ko>스프라이트 이미지의 url</ko>\n * @param {Number} [options.rowCount=1] Number of horizontal frames in the sprite image <ko>스프라이트 이미지의 가로 프레임 갯수</ko>\n * @param {Number} [options.colCount=1] Number of vertical frames in the sprite image <ko>스프라이트 이미지의 세로 프레임 갯수</ko>\n * @param {Number|String} [options.width=\"auto\"] The width of the target element to show the image <ko>이미지를 보여줄 대상 요소의 너비</ko>\n * @param {Number|String} [options.height=\"auto\"] The height of the target element to show the image <ko>이미지를 보여줄 대상 요소의 높이</ko>\n * @param {Boolean} [options.autoHeight=true] Whether to automatically set the height of the image area to match the original image's proportion <ko>원본 이미지 비율에 맞게 이미지 영역의 높이를 자동으로 설정할지 여부</ko>\n * @param {Number[]} [options.colRow=[0, 0]] The column, row coordinates of the first frame of the sprite image (based on 0 index) <ko> 스프라이트 이미지 중 처음 보여줄 프레임의 (column, row) 좌표 (0 index 기반)</ko>\n * @param {Number} [options.scale=1] Spin scale (The larger the spin, the more).<ko>Spin 배율 (클 수록 더 많이 움직임)</ko>\n * @support {\"ie\": \"9+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n * @example\n *\n * // Initialize SpinViewer\n * var el = document.getElementById(\"product-360\");\n * var viewer = new eg.view360.SpinViewer(el, {\n * \timageUrl: \"/img/bag360.jpg\", // required\n * \trowCount: 24 //required\n * });\n */\nclass SpinViewer extends Component {\n\t/**\n\t * Version info string\n\t * @ko 버전정보 문자열\n\t * @name VERSION\n\t * @static\n\t * @type {String}\n\t * @example\n\t * eg.view360.SpinViewer.VERSION;  // ex) 3.0.1\n\t * @memberof eg.view360.SpinViewer\n\t */\n\tstatic VERSION = VERSION;\n\tconstructor(element, options) {\n\t\tsuper();\n\n\t\tthis._el = element;\n\n\t\tconst opt = Object.assign({}, options);\n\t\tconst colCount = opt.colCount || 1;\n\t\tconst rowCount = opt.rowCount || 1;\n\n\t\tthis._scale = (opt.scale || 1);\n\t\tthis._panScale = this._scale * DEFAULT_PAN_SCALE;\n\n\t\tthis._frameCount = colCount * rowCount;\n\n\t\t// Init SpriteImage\n\t\tthis._sprites = new SpriteImage(element, opt).on({\n\t\t\t\"load\": evt => {\n\t\t\t\t/**\n\t\t\t\t * Events that occur when component loading is complete\n\t\t\t\t * @ko 컴포넌트 로딩이 완료되면 발생하는 이벤트\n\t\t\t\t * @name eg.view360.SpinViewer#load\n\t\t\t\t * @event\n\t\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t\t * @param {HTMLElement} param.target The target element for which to display the image <ko>이미지를 보여줄 대상 엘리먼트</ko>\n\t\t\t\t * @param {HTMLElement} param.bgElement Generated background image element <ko>생성된 background 이미지 엘리먼트</ko>\n\t\t\t\t *\n\t\t\t\t * @example\n\t\t\t\t *\n\t\t\t\t * viwer.on({\n\t\t\t\t *\t\"load\" : function(evt) {\n\t\t\t\t *\t\tthis.spinBy(360, {duration: 300});\n\t\t\t\t *\t}\n\t\t\t\t * });\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"load\", evt);\n\t\t\t},\n\t\t\t\"imageError\": evt => {\n\t\t\t\t/**\n\t\t\t\t * An event that occurs when the image index is changed by the user's left / right panning\n\t\t\t\t * @ko 사용자의 좌우 Panning 에 의해 이미지 인덱스가 변경되었을때 발생하는 이벤트\n\t\t\t\t * @name eg.view360.SpinViewer#imageError\n\t\t\t\t * @event\n\t\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t\t * @param {String} param.imageUrl User-specified image URL <ko>사용자가 지정한 이미지 URL</ko>\n\t\t\t\t *\n\t\t\t\t * @example\n\t\t\t\t *\n\t\t\t\t * viewer.on({\n\t\t\t\t *\t\"imageError\" : function(evt) {\n\t\t\t\t *\t\t// Error handling\n\t\t\t\t *\t\tconsole.log(e.imageUrl);\n\t\t\t\t *\t}\n\t\t\t\t * });\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"imageError\", {\n\t\t\t\t\timageUrl: evt.imageUrl\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Init Axes\n\t\tthis._panInput = new PanInput(this._el, {\n\t\t\tscale: [this._panScale, this._panScale]\n\t\t});\n\t\tthis._axes = new Axes({\n\t\t\tangle: {\n\t\t\t\trange: [0, 359],\n\t\t\t\tcircular: true\n\t\t\t}\n\t\t}).on({\n\t\t\t\"change\": evt => {\n\t\t\t\tconst curr = Math.floor(evt.pos.angle / (360 / this._frameCount));\n\t\t\t\tconst frameIndex = this._frameCount - curr - 1;\n\n\t\t\t\tthis._sprites.setFrameIndex(frameIndex);\n\n\t\t\t\t/**\n\t\t\t\t * An event that occurs when the image index is changed by the user's left / right panning\n\t\t\t\t * @ko 사용자의 좌우 Panning 에 의해 이미지 인덱스가 변경되었을때 발생하는 이벤트\n\t\t\t\t * @name eg.view360.SpinViewer#change\n\t\t\t\t * @event\n\t\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t\t * @param {Number[]} param.colRow Column, row of the frame in the sprite image <ko>스프라이트 이미지 내 프레임의 column, row</ko>\n\t\t\t\t * @param {Number} param.frameIndex Index value that is sequentially appended in Z direction based on col and row.<ko>col, row 를 기반으로 Z 방향으로 순차적으로 붙여지는 index 값</ko>\n\t\t\t\t * @param {Number} param.angle The angle that is currently internally held at an angle between 0 and 359. (not a real product angle) <ko>0 ~ 359 범위의 각도로 현재 내부적으로 유지하고 있는 각도 (실제 이미지의 각도가 아님)</ko>\n\t\t\t\t *\n\t\t\t\t * @example\n\t\t\t\t *\n\t\t\t\t * viwer.on({\n\t\t\t\t *\t\"change\" : function(evt) {\n\t\t\t\t *\t\tconsole.log(event.frameIndex, event.colRow, event.angle);   // event.colRow = [0, 4] event.frameIndex = 4, event = 30\n\t\t\t\t *\t}\n\t\t\t\t * });\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"change\", {\n\t\t\t\t\tframeIndex,\n\t\t\t\t\tcolRow: this._sprites.getColRow(),\n\t\t\t\t\tangle: evt.pos.angle\n\t\t\t\t});\n\t\t\t},\n\t\t\t\"animationEnd\": evt => {\n\t\t\t\t/**\n\t\t\t\t * This event is fired when animation ends.\n\t\t\t\t * @ko 에니메이션이 끝났을 때 발생하는 이벤트\n\t\t\t\t * @name eg.view360.SpinViewer#animationEnd\n\t\t\t\t * @event\n\t\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t\t * @param {Boolean} param.isTrusted true if an event was generated by the user action, or false if it was caused by a script or API call<ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n\t\t\t\t *\n\t\t\t\t * @example\n\t\t\t\t *\n\t\t\t\t * viwer.on({\n\t\t\t\t *\t\"animationEnd\" : function(evt) {\n\t\t\t\t *\t\t// evt.isTrusted === true or false\n\t\t\t\t *\t}\n\t\t\t\t * });\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"animationEnd\", {\n\t\t\t\t\tisTrusted: evt.isTrusted\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis._axes.connect(\"angle\", this._panInput);\n\t}\n\n\t/**\n\t * Set spin scale\n\t * @ko scale 을 조정할 수 있는 함수\n\t * @method eg.view360.SpinViewer#setScale\n\t * @param {Number} scale Rotation multiples at spin, the larger the rotation<ko>Spin 시 회전 배수값, 커질 수록 더 많이 회전</ko>\n\t *\n\t * @return {Object} Instance of SpinViewer <ko>SpinViewer 인스턴스</ko>\n\t *\n\t * @example\n\t *\n\t * viewer.setScale(2);// It moves twice as much.\n\t */\n\tsetScale(scale) {\n\t\tif (isNaN(scale) || scale < 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._scale = scale;\n\t\tthis._panScale = scale * DEFAULT_PAN_SCALE;\n\t\tthis._panInput.options.scale = [this._panScale, this._panScale];\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get spin scale\n\t * @ko scale 값을 반환한다.\n\t * @method eg.view360.SpinViewer#getScale\n\t *\n\t * @return {Number} Rotation multiples at spin, the larger the rotation<ko>Spin 시 회전 배수값, 커질 수록 더 많이 회전</ko>\n\t *\n\t * @example\n\t *\n\t * viewer.getScale();// It returns number\n\t */\n\tgetScale() {\n\t\treturn this._scale;\n\t}\n\n\t/**\n\t * It gives the effect of rotating for a certain duration by the specified angle based on the current rotation angle.\n\t * @ko 현재 회전 각도를 기준으로 지정된 각도(angle)만큼 일정 시간동안(duration) 회전하는 효과를 준다.\n\t * @method eg.view360.SpinViewer#spinBy\n\t *\n\t * @param {Number} [angle = 0] angle<ko>상대적 회전 각도</ko>\n\t * @param {Object} param The parameter object<ko>파라미터 객체</ko>\n\t * @param {Number} [param.duration = 0] duration<ko>회전할 시간 - 밀리세컨드 단위</ko>\n\t *\n\t * @return {Object} Instance of SpinViewer <ko>SpinViewer 인스턴스</ko>\n\t *\n\t * @example\n\t *\n\t * viewer.spinBy(720, {duration: 500});\n\t */\n\tspinBy(angle = 0, param = {duration: 0}) {\n\t\tthis._axes.setBy({angle}, param.duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * It gives the effect of rotating for a certain duration (duration) by the specified angle (angle).\n\t * @ko 지정된 각도(angle)만큼 일정 시간동안(duration) 회전하는 효과를 준다.\n\t * @method eg.view360.SpinViewer#spinTo\n\t *\n\t * @param {Number} [angle = 0] angle<ko>회전 각도</ko>\n\t * @param {Object} param The parameter object<ko>파라미터 객체</ko>\n\t * @param {Number} [param.duration = 0] duration<ko>회전할 시간 - 밀리세컨드 단위</ko>\n\t *\n\t * @return {Object} Instance of SpinViewer <ko>SpinViewer 인스턴스</ko>\n\t *\n\t * @example\n\t *\n\t * viewer.spinTo(30, {duration:100});\n\t */\n\tspinTo(angle = 0, param = {duration: 0}) {\n\t\tthis._axes.setTo({angle}, param.duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns current angles\n\t * @ko 현재 각도를 반환한다.\n\t *\n\t * @return {Number} Current angle <ko>현재 각도</ko>\n\t */\n\tgetAngle() {\n\t\treturn this._axes.get().angle || 0;\n\t}\n}\n\nexport default SpinViewer;\n"],"names":["module","objectOrFunction","x","type","isFunction","_isArray","Array","isArray","Object","prototype","toString","call","len","vertxNext","customSchedulerFn","asap","callback","arg","queue","flush","scheduleFlush","setScheduler","scheduleFn","setAsap","asapFn","browserWindow","window","undefined","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","self","process","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useNextTick","nextTick","useVertxTimer","useSetTimeout","useMutationObserver","iterations","observer","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","port1","onmessage","port2","postMessage","globalSetTimeout","setTimeout","i","attemptVertx","vertx","Function","require","runOnLoop","runOnContext","e","then","onFulfillment","onRejection","parent","this","child","constructor","noop","PROMISE_ID","makePromise","_state","arguments","invokeCallback","_result","subscribe","resolve$1","object","Constructor","promise","resolve","Math","random","substring","PENDING","FULFILLED","REJECTED","selfFulfillment","TypeError","cannotReturnOwn","tryThen","then$$1","value","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","error","fulfill","reason","reject","_label","handleOwnThenable","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","_subscribers","length","subscribers","settled","detail","hasCallback","succeeded","initializePromise","resolver","resolvePromise","rejectPromise","id","nextId","validationError","Error","Enumerator","input","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","c","resolve$$1","_then","didError","_settledAt","Promise$1","_willSettleAt","state","enumerator","all","entries","race","_","reject$1","needsResolver","needsNew","Promise","catch","_catch","finally","_finally","polyfill","local","global","P","promiseToString","cast","_setScheduler","_setAsap","_asap","factory","EPSILON","ARRAY_TYPE","Float32Array","degree","PI","toRadian","a","create","out","glMatrix.ARRAY_TYPE","fromMat4","invert","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","rotateX","rad","s","sin","cos","a13","a23","rotateY","a03","perspective","fovy","aspect","near","far","nf","f","tan","Infinity","y","z","hypot","fromValues","subtract","b","normalize","sqrt","dot","cross","ax","ay","az","bx","by","bz","transformMat3","m","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec","setAxisAngle","axis","slerp","t","omega","cosom","sinom","scale0","scale1","aw","bw","glMatrix.EPSILON","acos","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","clone","w","copy","exactEquals","equals","a0","a1","a2","a3","b0","b1","b2","b3","abs","max","vec3.create","vec3.fromValues","mat3.create","win","doc","userAgent","navigator","IS_IOS","platform","test","IS_SAFARI_ON_DESKTOP","indexOf","getComputedStyle","SUPPORT_TOUCH","SUPPORT_DEVICEMOTION","DeviceMotionEvent","devicePixelRatio","TRANSFORM","docStyle","documentElement","style","target","SUPPORT_WILLCHANGE","CSS","supports","WEBXR_SUPPORTED","toDegree","util","n","extractPitchFromQuat","quaternion","baseV","vec3","atan2","pow","ROTATE_CONSTANT","PITCH_DELTA","YAW_DELTA_BY_ROLL","YAW_DELTA_BY_YAW","angleBetweenVec2","v1","v2","targetAxis","meshPoint","yawOffsetBetween","viewDir","targetDir","viewDirXZ","vec2","targetDirXZ","getRotationDelta","prevQ","curQ","rotateKind","prevQuaternion","quat","curQuaternion","prevPoint","curPoint","meshPoint3","rotateDirection","meshPoint2","vecU","vecV","vecN","coefficientA","coefficientB","coefficientC","distance","projectedPrevPoint","trigonometricRatio","theta","crossVec","r","MathUtil","degToRad","radToDeg","Vector2","set","v","subVectors","Vector3","scalar","invScalar","multiplyScalar","applyQuaternion","ix","iy","iz","iw","crossVectors","Quaternion","setFromEulerXYZ","c1","c2","c3","s1","s2","s3","setFromEulerYXZ","setFromAxisAngle","angle","halfAngle","multiply","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","inverse","l","qb","cosHalfTheta","halfTheta","sinHalfTheta","ratioA","ratioB","setFromUnitVectors","vFrom","vTo","PosePredictor","predictionTimeS","previousQ","previousTimestampS","deltaQ","outQ","getPrediction","currentQ","gyro","timestampS","angularSpeed","predictAngle","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","isIOS","isSafari","isFirefoxAndroid","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","source","from","symbols","to","val","toObject","key","Util","MIN_TIMESTEP","MAX_TIMESTEP","base64","mimeType","clamp","min","lerp","isLandscapeMode","orientation","isTimestampDeltaValid","timestampDeltaS","isNaN","getScreenWidth","screen","width","height","getScreenHeight","requestFullscreen","element","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","getFullscreenElement","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","linkProgram","gl","vertexSource","fragmentSource","attribLocationMap","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attribName","attachShader","bindAttribLocation","deleteShader","getProgramUniforms","uniforms","uniformCount","getProgramParameter","ACTIVE_UNIFORMS","uniformName","getActiveUniform","name","replace","getUniformLocation","orthoMatrix","left","right","bottom","top","lr","bt","isMobile","check","vendor","opera","substr","extend","objectAssign","safariCssSizeWorkaround","canvas","parseInt","console","log","version","branch","build","match","exec","CHROME_VERSION","IS_CHROME_WITHOUT_DEVICE_MOTION","IS_ANDROID","MC_BIND_SCALE","GYRO_MODE","NONE","YAWPITCH","VR","DeviceMotion","_onDeviceMotion","_this","bind","_onDeviceOrientation","_onChromeWithoutDeviceMotion","isWithoutDeviceMotion","isAndroid","stillGyroVec","rawGyroVec","adjustedGyroVec","_timer","lastDevicemotionTimestamp","_isEnabled","enable","alpha","beta","gamma","trigger","inputEvent","deviceorientation","clearTimeout","Date","getTime","_this2","isGyroSensorAvailable","rotationRate","isGravitySensorAvailable","accelerationIncludingGravity","interval","devicemotionEvent","_extends","timeStamp","acceleration","adjustedRotationRate","addEventListener","disable","removeEventListener","Component","SensorSample","sample","sensorSample","ComplementaryFilter","kFilter","currentAccelMeasurement","currentGyroMeasurement","previousGyroMeasurement","filterQ","previousFilterQ","accelQ","isOrientationInitialized","estimatedGravity","measuredGravity","gyroIntegralQ","addAccelMeasurement","vector","addGyroMeasurement","deltaT","run_","accelToQuaternion_","gyroDeltaQ","gyroToQuaternionDelta_","invFilterQ","targetQ","getOrientation","accel","normAccel","dt","isFilterQuaternionInitialized","FusionPoseSensor","deviceMotion","accelerometer","gyroscope","_onDeviceMotionChange","_onScreenOrientationChange","filter","posePredictor","filterToWorldQ","isChromeUsingDegrees","inverseWorldToScreenQ","worldToScreenQ","originalPoseAdjustQ","_setScreenTransform","resetQ","on","isEnabled","destroy","_triggerChange","_prevOrientation","_deviceOrientationQ","deviceOrientationFixQ","_alpha","out_","_convertFusionToPredicted","predictedQ","accGravity","rotRate","TiltMotionInput","el","options","_prevQuaternion","_quaternion","fusionPoseSensor","scale","threshold","_onPoseChange","mapAxes","axes","connect","_attachEvent","disconnect","_dettachEvent","event","prvQ","yawDeltaByYaw","change","reduce","acc","off","screenRotationAngleInst","refCount","ScreenRotationAngle","_onOrientationChange","_spinR","_screenOrientationAngle","betaR","glMatrix","gammaR","getRadian","unref","RotationPanInput","_useRotation","_screenRotationAngle","setUseRotation","useRotation","_userDirection","Axes","DIRECTION_ALL","_direction","DIRECTION_HORIZONTAL","getOffset","properties","useDirection","offset","newOffset","cosTheta","sinTheta","DIRECTION_VERTICAL","PanInput","Y_AXIS_VECTOR","DeviceQuaternion","_fusionPoseSensor","isTrusted","getCombinedQuaternion","yaw","yawQ","conj","VERSION","DEFAULT_YAW_RANGE","DEFAULT_PITCH_RANGE","CIRCULAR_PITCH_RANGE","YawPitchControl","opt","pitch","fov","showPolePoint","useZoom","useKeyboard","gyroMode","touchDirection","TOUCH_DIRECTION_YAW","yawRange","pitchRange","fovRange","aspectRatio","_element","_initialFov","_enabled","_isAnimating","_deviceQuaternion","_initAxes","option","yRange","_updateYawRange","pRange","_updatePitchRange","axesPanInput","axesWheelInput","WheelInput","axesTiltMotionInput","axesPinchInput","PinchInput","axesMoveKeyInput","MoveKeyInput","range","circular","isCircular","bounce","deceleration","maximumDuration","hold","evt","delta","_updateControlScale","updatePanScale","release","animationStart","animationEnd","param","get","areaHeight","args","argLen","_getOptions","beforeOptions","newOptions","changedKeyList","push","_setOptions","_getValidatedOptions","_applyOptions","_getValidYawRange","_getValidPitchRange","isVR","isYawPitch","some","setTo","prevFov","nextFov","_initDeviceQuaternion","_togglePinchInputByOption","_enableTouch","_inputs","direction","yawEnabled","pitchEnabled","_this3","newYawRange","newFov","newAspectRatio","ratio","adjustAspectRatio","horizontalFov","newPitchRange","changeEvt","pos","p","verticalAngle","halfFov","concat","halfHorizontalFov","mathUtil","targetElement","inputRange","outputRange","rangeIdx","inputA","fraction","persistOrientation","_resetOrientation","lookAt","duration","setBy","getYawPitch","yawPitch","getFov","getQuaternion","shouldRenderWithQuaternion","axisPanInput","axesDeviceOrientationInput","CONTROL_MODE_VR","CONTROL_MODE_YAWPITCH","TOUCH_DIRECTION_ALL","TOUCH_DIRECTION_PITCH","TOUCH_DIRECTION_NONE","STATUS","EVENT","ImageLoader","image","_image","_onceHandlers","_loadStatus","res","rej","LOADED","getElement","LOADING","isMaybeLoaded","createElement","onceLoaded","ERROR","img","_img","Image","crossOrigin","src","result","complete","naturalWidth","onload","onerror","targets","loadPromises","_this4","_once","listener","fn","getStatus","handler","READY_STATUS","READYSTATECHANGE_EVENT_NAME","latIdx","lngIdx","VideoLoader","video","_handlers","_sourceCount","_thresholdReadyState","_thresholdEventName","readyState","_errorCount","_detachErrorHandler","_appendSourceElement","videoUrl","videoSrc","videoType","sourceElement","_video","appendChild","_reset","HTMLVideoElement","setAttribute","querySelectorAll","load","_attachErrorHandler","_sources","rejector","WEBGL_ERROR_CODE","webglAvailability","WebGLUtils","shader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","detachShader","LINK_STATUS","deleteProgram","initBuffer","itemSize","attr","buffer","createBuffer","bindBuffer","bufferData","STATIC_DRAW","numItems","enableVertexAttribArray","vertexAttribPointer","FLOAT","getWebglContext","userContextAttributes","webglIdentifiers","context","contextAttributes","preserveDrawingBuffer","antialias","xrCompatible","onWebglcontextcreationerror","statusMessage","getContext","createTexture","textureTarget","texture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","isWebGLAvailable","webglContext","loseContextExtension","getExtension","loseContext","isStableWebGL","agentInfo","agent","isStableWebgl","os","parseFloat","browser","getErrorNameFromWebGLErrorCode","code","texImage2D","pixels","RGBA","UNSIGNED_BYTE","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","Agent","isIE11","EVENTS","Renderer","_forceDimension","_pixelCanvas","_pixelContext","render","shaderProgram","indexBuffer","mvMatrix","pMatrix","uniformMatrix4fv","pMatrixUniform","mvMatrixUniform","drawElements","TRIANGLES","UNSIGNED_SHORT","getDimension","pixelSource","videoWidth","naturalHeight","videoHeight","updateShaderData","_initPixelSource","forceDimension","_getPixelSource","contentDimension","textureDimension","drawImage","_extractTileConfig","imageConfig","tileConfig","config","flipHorizontal","rotation","_triggerError","message","CubeRenderer","getVertexPositionData","_VERTEX_POSITION_DATA","getIndexData","_INDEX_DATA","indexData","vertexPositionData","extractOrder","order","getTextureCoordData","base","face","ordermap_","shift","unshift","pop","tileVertex","slice","elemSize","tileTemp","j","splice","getVertexShaderSource","getFragmentShaderSource","updateTexture","orderMap","surfaceIdx","tileIdx","TEXTURE_CUBE_MAP_POSITIVE_X","maxCubeMapTextureSize","getMaxCubeMapTextureSize","tile","extractTileFromImage","TEXTURE_CUBE_MAP","getSourceTileSize","outputTextureSize","inputTextureSize","tilePerRow","MAX_CUBE_MAP_TEXTURE_SIZE","_imageWidth","isPowerOfTwo","CubeStripRenderer","_vertices","coords","rows","coord","tileConfigs","_shrinkCoord","_transformCoord","index","TEXTURE_2D","size","maxSize","activeTexture","TEXTURE0","pixelStorei","UNPACK_FLIP_Y_WEBGL","newCoord","_flipHorizontalCoord","_rotateCoord","rotationAngle","moved","shiftCount","ERROR_TYPE","INVALID_DEVICE","NO_WEBGL","FAIL_IMAGE_LOAD","FAIL_BIND_TEXTURE","INVALID_RESOURCE","RENDERING_CONTEXT_LOST","READY","VIEW_CHANGE","ANIMATION_END","PROJECTION_TYPE","EQUIRECTANGULAR","CUBEMAP","CUBESTRIP","PANORAMA","STEREOSCOPIC_EQUI","STEREO_FORMAT","TOP_BOTTOM","LEFT_RIGHT","ANGLE_CORRECTION_FOR_CENTER_ALIGN","textureCoordData","phi","sinPhi","u","SphereRenderer","format","_stereoFormat","ctx","leftEyeScaleOffset","rightEyeScaleOffset","uTexScaleOffset","uniform4fv","_TEXTURE_COORD_DATA","CylinderRenderer","resizeDimension","cylinderMaxRadian","halfCylinderY","rotated","imageAspectRatio","CYLIDER_Y","startAngleForCenterAlign","yIdx","yLength","VR_DISPLAY_PRESENT_CHANGE","DEFAULT_LEFT_BOUNDS","DEFAULT_RIGHT_BOUNDS","EYES","VRManager","vrDisplay","_vrDisplay","removeEndCallback","isPresenting","exitPresent","_clear","_frameData","VRFrameData","canRender","Boolean","beforeRender","bindFramebuffer","FRAMEBUFFER","afterRender","submitFrame","getEyeParams","display","halfWidth","drawingBufferWidth","drawingBufferHeight","frameData","getFrameData","leftMVMatrix","leftViewMatrix","rightMVMatrix","rightViewMatrix","mat4","_yawOffset","viewport","leftProjectionMatrix","rightProjectionMatrix","addEndCallback","requestPresent","getVRDisplays","displays","capabilities","canPresent","leftEye","getEyeParameters","rightEye","renderWidth","renderHeight","_setDisplay","setYawOffset","layers","getLayers","layer","_leftBounds","leftBounds","_rightBounds","rightBounds","XRManager","xrSession","_xrSession","end","frame","pose","getViewerPose","_xrRefSpace","baseLayer","session","renderState","framebuffer","glLayer","views","view","getViewport","transform","matrix","projectionMatrix","_presenting","xr","requestSession","requiredFeatures","xrLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","refSpace","_setSession","_xrLayer","WebGLAnimator","_onLoop","_callback","_rafId","_context","requestAnimationFrame","_onLoopNextTick","before","performance","now","diff","_rafTimer","setCallback","setContext","start","stop","cancelAnimationFrame","ImageType","DEVICE_PIXEL_RATIO","BIND_TEXTURE","IMAGE_LOADED","RENDERING_CONTEXT_RESTORE","RENDERER_ERROR","PanoImageRenderer","isVideo","sphericalConfig","renderingContextAttributes","_renderStereo","time","vr","_vr","eyeParams","eyeIndex","eyeParam","uniform1f","uEye","_bindBuffers","_draw","exitVR","animator","_animator","_restoreStyle","updateViewportDimensions","_updateViewport","_shouldForceDraw","_render","_onFirstVRFrame","minusZDir","mat3","mvInv","pInv","yawOffset","fieldOfView","_lastQuaternion","_lastYaw","_lastPitch","_lastFieldOfView","textureCoordBuffer","vertexBuffer","_initCanvas","_setDefaultCanvasStyle","_wrapper","_wrapperOrigStyle","_renderingContextAttributes","_imageConfig","_imageIsReady","_keepUpdate","_onContentLoad","_onContentError","setImage","imageType","cubemapConfig","setYawPitchControl","yawPitchControl","_yawPitchControl","getContent","_isVideo","_setImageType","_contentLoader","_imageType","_isCubeMap","_renderer","stereoFormat","_initWebGL","_onWebglcontextlost","_onWebglcontextrestored","margin","maxHeight","maxWidth","outline","position","_triggerContentLoad","content","projectionType","isImageLoaded","_bindTexture","attachTo","parentElement","detach","forceContextLoss","hasRenderingContext","removeChild","isContextLost","_initShaderProgram","renderer","vsSource","fsSource","getError","useProgram","vertexPositionAttribute","getAttribLocation","samplerUniform","textureCoordAttribute","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","uniform1i","preventDefault","updateFieldOfView","viewPortChanged","h","_initRenderingContext","clearColor","deleteTexture","CULL_FACE","WebGLRenderingContext","_initBuffers","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","Uint16Array","isEAC","_updateTexture","keepUpdate","doUpdate","startRender","stopRender","renderWithQuaternion","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","renderWithYawPitch","getProjectionRenderer","enterVR","_Promise","_requestPresent","_setWrapperFullscreen","wrapper","getAttribute","wrapperStyle","zIndex","removeAttribute","PanoViewer","container","isSessionSupported","supportsSession","_container","_projectionType","_cubemapConfig","_width","_height","_yaw","_pitch","_fov","_gyroMode","_aspectRatio","_isValidTouchDirection","yawPitchConfig","_isReady","_initYawPitchControl","_initRenderer","getVideo","_photoSphereRenderer","setVideo","getImage","warn","_deactivate","getProjectionType","enableSensor","requestPermission","permissionState","disableSensor","initialYaw","initialPitch","_bindRendererHandler","_activate","_triggerEvent","_updateYawPitchIfNeeded","ProjectionType","yawSize","maxFov","atan","minFov","_this5","setUseZoom","setUseKeyboard","setGyroMode","setFovRange","getFovRange","containerSize","_getHFov","getYaw","getPitch","getYawRange","getPitchRange","setYawRange","setPitchRange","setShowPolePoint","verticalAngleOfImage","TOUCH_DIRECTION","YAW","PITCH","ALL","setTouchDirection","getTouchDirection","isSupported","onDeviceMotionChange","fb","SpriteImage","_el","_rowCount","rowCount","_colCount","colCount","_totalCount","_autoHeight","autoHeight","_colRow","colRow","frameIndex","setFrameIndex","_getSizeString","imageUrl","_bg","_createBgDiv","setColRow","bgElement","_autoPlayReservedInfo","play","overflow","ondragstart","willChange","unitWidth","unitHeight","paddingBottom","toColRow","getFrameIndex","col","row","getColRow","_autoPlayTimer","clearInterval","playCount","count","frameCount","setInterval","floor","SpinViewer","_scale","_panScale","_frameCount","_sprites","_panInput","_axes","curr","setScale","getScale","spinBy","spinTo","getAngle"],"mappings":"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"}